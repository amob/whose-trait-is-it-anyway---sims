layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,1,0))#
plot((unlist(soj4bP$soj))[unlist(soj4bP$effs)!=0 & !is.na(unlist(soj4bP$soj))]~#
	  unlist(soj4bP$effs)[unlist(soj4bP$effs)!=0 & !is.na(unlist(soj4bP$soj))],#
	xlim=c(-0.8,0.8),ylim=c(0,gens), ylab="",xlab="", #
	pch=c(1,16)[(unlist(soj4bP$fstate)[unlist(soj4bP$effs)!=0 & !is.na(unlist(soj4bP$soj))] == "fixed") +1 ]#
	col=rgb( unlist(soj4bP$origingen) [ unlist(soj4bP$effs)!=0 & !is.na(unlist(soj4bP$soj))] /gens,0,0),# alpha = c(0.1,1)[(unlist(soj4bP$fstate)[unlist(soj4bP$effs)!=0] == "fixed") +1 ]), #
	cex = c(0.1,1)[(unlist(soj4bP$fstate)[unlist(soj4bP$effs)!=0 & !is.na(unlist(soj4bP$soj))] == "fixed") +1 ])#
	# 	col=rgb(0,0.5,0), cex = c(0.1,1)[(unlist(soj4bP$fstate)[unlist(soj4bP$effs)!=0] == "fixed") +1 ])#
	points(gens-(unlist(soj4bP$origingen))[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))]~#
	  unlist(soj4bP$effs)[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))], #
	  col=rgb( unlist(soj4bP$origingen) [ unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))] /gens,0,0), #
	  cex = 1)#
	abline(v=0)#
 	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Sojourn (gens)",side=2,line=2,adj=-1.08)
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,1,0))#
plot((unlist(soj4bP$soj))[unlist(soj4bP$effs)!=0 & !is.na(unlist(soj4bP$soj))]~#
	  unlist(soj4bP$effs)[unlist(soj4bP$effs)!=0 & !is.na(unlist(soj4bP$soj))],#
	xlim=c(-0.8,0.8),ylim=c(0,gens), ylab="",xlab="", #
	pch=c(1,16)[(unlist(soj4bP$fstate)[unlist(soj4bP$effs)!=0 & !is.na(unlist(soj4bP$soj))] == "fixed") +1 ],#
	col=rgb( unlist(soj4bP$origingen) [ unlist(soj4bP$effs)!=0 & !is.na(unlist(soj4bP$soj))] /gens,0,0),# alpha = c(0.1,1)[(unlist(soj4bP$fstate)[unlist(soj4bP$effs)!=0] == "fixed") +1 ]), #
	cex = c(0.1,1)[(unlist(soj4bP$fstate)[unlist(soj4bP$effs)!=0 & !is.na(unlist(soj4bP$soj))] == "fixed") +1 ])#
	# 	col=rgb(0,0.5,0), cex = c(0.1,1)[(unlist(soj4bP$fstate)[unlist(soj4bP$effs)!=0] == "fixed") +1 ])#
	points(gens-(unlist(soj4bP$origingen))[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))]~#
	  unlist(soj4bP$effs)[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))], #
	  col=rgb( unlist(soj4bP$origingen) [ unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))] /gens,0,0), #
	  cex = 1)#
	abline(v=0)#
 	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Sojourn (gens)",side=2,line=2,adj=-1.08)
plot((unlist(soj4bffP$soj))[unlist(soj4bffP$effs)!=0 & !is.na(unlist(soj4bffP$soj))]~#
	  unlist(soj4bffP$effs)[unlist(soj4bffP$effs)!=0 & !is.na(unlist(soj4bffP$soj))],#
		xlim=c(-0.8,0.8),ylim=c(0,gens), ylab="",xlab="",#
		col=rgb( unlist(soj4bffP$origingen) [ unlist(soj4bffP$effs)!=0 & !is.na(unlist(soj4bffP$soj))] /gens,0,0),# alpha = c(0.1,1)[(unlist(soj4bP$fstate)[unlist(soj4bP$effs)!=0] == "fixed") +1 ]), #
		cex = c(0.1,1)[(unlist(soj4bffP$fstate)[unlist(soj4bffP$effs)!=0 & !is.na(unlist(soj4bffP$soj))] == "fixed") +1 ])#
		abline(v=0)#
	points(gens-(unlist(soj4bffP$origingen))[unlist(soj4bffP$effs)!=0 & is.na(unlist(soj4bffP$soj))]~#
	  unlist(soj4bffP$effs)[unlist(soj4bffP$effs)!=0 & is.na(unlist(soj4bffP$soj))], #
	  col=rgb( unlist(soj4bffP$origingen) [ unlist(soj4bffP$effs)!=0 & is.na(unlist(soj4bffP$soj))] /gens,0,0), #
	  cex = 1)#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,1,0))#
plot((unlist(soj4bP$soj))[unlist(soj4bP$effs)!=0 & !is.na(unlist(soj4bP$soj))]~#
	  unlist(soj4bP$effs)[unlist(soj4bP$effs)!=0 & !is.na(unlist(soj4bP$soj))],#
		xlim=c(-0.8,0.8),ylim=c(0,gens), ylab="",xlab="", #
		pch=c(1,16)[(unlist(soj4bP$fstate)[unlist(soj4bP$effs)!=0 & !is.na(unlist(soj4bP$soj))] == "fixed") +1 ],#
		col=rgb( unlist(soj4bP$origingen) [ unlist(soj4bP$effs)!=0 & !is.na(unlist(soj4bP$soj))] /gens,0,0),# alpha = c(0.1,1)[(unlist(soj4bP$fstate)[unlist(soj4bP$effs)!=0] == "fixed") +1 ]), #
		cex = c(0.1,1)[(unlist(soj4bP$fstate)[unlist(soj4bP$effs)!=0 & !is.na(unlist(soj4bP$soj))] == "fixed") +1 ])#
	# 	col=rgb(0,0.5,0), cex = c(0.1,1)[(unlist(soj4bP$fstate)[unlist(soj4bP$effs)!=0] == "fixed") +1 ])#
	points(gens-(unlist(soj4bP$origingen))[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))]~#
	  unlist(soj4bP$effs)[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))], #
	  col=rgb( unlist(soj4bP$origingen) [ unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))] /gens,0,0), #
	  cex = 1)#
	abline(v=0)#
 	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Sojourn (gens)",side=2,line=2,adj=-1.08)#
plot((unlist(soj4bffP$soj))[unlist(soj4bffP$effs)!=0 & !is.na(unlist(soj4bffP$soj))]~#
	  unlist(soj4bffP$effs)[unlist(soj4bffP$effs)!=0 & !is.na(unlist(soj4bffP$soj))],#
		xlim=c(-0.8,0.8),ylim=c(0,gens), ylab="",xlab="",#
		pch=c(1,16)[(unlist(soj4bffP$fstate)[unlist(soj4bffP$effs)!=0 & !is.na(unlist(soj4bffP$soj))] == "fixed") +1 ],#
		col=rgb( unlist(soj4bffP$origingen) [ unlist(soj4bffP$effs)!=0 & !is.na(unlist(soj4bffP$soj))] /gens,0,0),# alpha = c(0.1,1)[(unlist(soj4bP$fstate)[unlist(soj4bP$effs)!=0] == "fixed") +1 ]), #
		cex = c(0.1,1)[(unlist(soj4bffP$fstate)[unlist(soj4bffP$effs)!=0 & !is.na(unlist(soj4bffP$soj))] == "fixed") +1 ])#
		abline(v=0)#
	points(gens-(unlist(soj4bffP$origingen))[unlist(soj4bffP$effs)!=0 & is.na(unlist(soj4bffP$soj))]~#
	  unlist(soj4bffP$effs)[unlist(soj4bffP$effs)!=0 & is.na(unlist(soj4bffP$soj))], #
	  col=rgb( unlist(soj4bffP$origingen) [ unlist(soj4bffP$effs)!=0 & is.na(unlist(soj4bffP$soj))] /gens,0,0), #
	  cex = 1)#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,1,0))#
plot(gens-(unlist(soj4bP$origingen))[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))]~#
	  unlist(soj4bP$effs)[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))], #
	  col=rgb( unlist(soj4bP$origingen) [ unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))] /gens,0,0), #
		xlim=c(-0.8,0.8),ylim=c(0,gens), ylab="",xlab="")#
	abline(v=0)#
 	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Sojourn (gens)",side=2,line=2,adj=-1.08)
str(test.4a)
ls()
str(test.4b)
sojT <- function(genotimemat,type="plant"){#
	nloci <- dim(genotimemat)[1]#
	nind <- dim(genotimemat)[2]#
	copies <- ifelse(type=="plant",nind*2,nind)#
	if(type=="plant"){#
		ntime <- dim(genotimemat)[4]#
		fullunique <- sapply(1:nloci, function(l) sort(unique(as.vector(genotimemat[l,,,]))) )#
		locusbytime <- lapply(1:nloci, function(l) sapply(2:(ntime), function(t)  sapply(1:length(fullunique[[l]]), function(a)  sum(as.vector(genotimemat[l,,,t])==fullunique[[l]][a]) ) ) )#
		finalfrq <- lapply(1:nloci, function(l) sapply(fullunique[[l]], function(a) length(which(genotimemat[l,,,ntime]==a)) ) )#
	}#
	if(type=="micr"){#
		ntime <- dim(genotimemat)[3]#
		fullunique <- sapply(1:nloci, function(l) sort(unique(as.vector(genotimemat[l,,]))) )#
		locusbytime <- lapply(1:nloci, function(l) sapply(2:(ntime), function(t)  sapply(1:length(fullunique[[l]]), function(a)  sum(as.vector(genotimemat[l,,t])==fullunique[[l]][a]) ) ) )#
		finalfrq <- lapply(1:nloci, function(l) sapply(fullunique[[l]], function(a) length(which(genotimemat[l,,ntime]==a)) ) )#
	}#
	soj <- list()#
	fstate <- list()#
	origingen <- list()#
	for(l in 1:length(locusbytime)){#
		freqs <- locusbytime[[l]]#
		soj[[l]] <- c(rep(NA, times=nrow(freqs)))#
		fstate[[l]] <- c(rep(NA, times=nrow(freqs)))#
		origingen[[l]] <- c(rep(NA, times=nrow(freqs)))#
		for(a in 1:nrow(freqs)){#
			first <- which(freqs[a,]>0)[1]  #
			iffix1 <- which(freqs[a,first:ncol(freqs)]==copies)[1] #
			iffix0 <- which(freqs[a,first:ncol(freqs)]==0)[1]  #
			last <- ifelse(any(c(iffix1,iffix0)>0), min(c(first+iffix1,first+iffix0),na.rm=T),NA) #individually can be NA if segregating or #
			origingen[[l]][[a]]<- first # NOTE gives first generation EVEN for alleles segregating at the final timestep#
			soj[[l]][a] <- last-first #returns NA when segregating at final time#
			seg <- is.na(soj[[l]][a] )#
			if(seg==T){#
				fstate[[l]][a] <- "seg"#
			} else if(!is.na(iffix1) & last == (iffix1+first)) {#
				fstate[[l]][a] <- "fixed" #at least at one point#
			} else{fstate[[l]][a] <- "lost"} #
		}#
		#get first > 0, get first == 1 or next ==0  and then diff bt 2#
	}#
	return(list(soj=soj, effs = fullunique, fstate = fstate, origingen = origingen,finalfrq =finalfrq))#
}
soj4bP <- sojT(test.4b$Plant)
str(soj4bP)
length(soj4bP)
soj4bM <- sojT(test.4b$Micr,type="micr")#
soj4bffP <- sojT(test.4bff$Plant)#
soj4bffM <- sojT(test.4bff$Micr,type="micr")#
soj4aP <- sojT(test.4a$Plant)#
soj4aM <- sojT(test.4a$Micr,type="micr")#
soj4affP <- sojT(test.4aff$Plant)#
soj4affM <- sojT(test.4aff$Micr,type="micr")#
soj4fP <- sojT(test.4f$Plant)#
soj4fM <- sojT(test.4f$Micr,type="micr")#
soj4fffP <- sojT(test.4fff$Plant)#
soj4fffM <- sojT(test.4fff$Micr,type="micr")
sojT <- function(genotimemat,type="plant"){#
	nloci <- dim(genotimemat)[1]#
	nind <- dim(genotimemat)[2]#
	copies <- ifelse(type=="plant",nind*2,nind)#
	if(type=="plant"){#
		ntime <- dim(genotimemat)[4]#
		fullunique <- sapply(1:nloci, function(l) sort(unique(as.vector(genotimemat[l,,,]))) )#
		locusbytime <- lapply(1:nloci, function(l) sapply(2:(ntime), function(t)  sapply(1:length(fullunique[[l]]), function(a)  sum(as.vector(genotimemat[l,,,t])==fullunique[[l]][a]) ) ) )#
		finalfrq <- lapply(1:nloci, function(l) sapply(fullunique[[l]], function(a) length(which(genotimemat[l,,,ntime]==a)) ) )/copies#
	}#
	if(type=="micr"){#
		ntime <- dim(genotimemat)[3]#
		fullunique <- sapply(1:nloci, function(l) sort(unique(as.vector(genotimemat[l,,]))) )#
		locusbytime <- lapply(1:nloci, function(l) sapply(2:(ntime), function(t)  sapply(1:length(fullunique[[l]]), function(a)  sum(as.vector(genotimemat[l,,t])==fullunique[[l]][a]) ) ) )#
		finalfrq <- lapply(1:nloci, function(l) sapply(fullunique[[l]], function(a) length(which(genotimemat[l,,ntime]==a)) ) )#
	}#
	soj <- list()#
	fstate <- list()#
	origingen <- list()#
	for(l in 1:length(locusbytime)){#
		freqs <- locusbytime[[l]]#
		soj[[l]] <- c(rep(NA, times=nrow(freqs)))#
		fstate[[l]] <- c(rep(NA, times=nrow(freqs)))#
		origingen[[l]] <- c(rep(NA, times=nrow(freqs)))#
		for(a in 1:nrow(freqs)){#
			first <- which(freqs[a,]>0)[1]  #
			iffix1 <- which(freqs[a,first:ncol(freqs)]==copies)[1] #
			iffix0 <- which(freqs[a,first:ncol(freqs)]==0)[1]  #
			last <- ifelse(any(c(iffix1,iffix0)>0), min(c(first+iffix1,first+iffix0),na.rm=T),NA) #individually can be NA if segregating or #
			origingen[[l]][[a]]<- first # NOTE gives first generation EVEN for alleles segregating at the final timestep#
			soj[[l]][a] <- last-first #returns NA when segregating at final time#
			seg <- is.na(soj[[l]][a] )#
			if(seg==T){#
				fstate[[l]][a] <- "seg"#
			} else if(!is.na(iffix1) & last == (iffix1+first)) {#
				fstate[[l]][a] <- "fixed" #at least at one point#
			} else{fstate[[l]][a] <- "lost"} #
		}#
		#get first > 0, get first == 1 or next ==0  and then diff bt 2#
	}#
	return(list(soj=soj, effs = fullunique, fstate = fstate, origingen = origingen,finalfrq =finalfrq))#
}
soj4bP <- sojT(test.4b$Plant)
sojT <- function(genotimemat,type="plant"){#
	nloci <- dim(genotimemat)[1]#
	nind <- dim(genotimemat)[2]#
	copies <- ifelse(type=="plant",nind*2,nind)#
	if(type=="plant"){#
		ntime <- dim(genotimemat)[4]#
		fullunique <- sapply(1:nloci, function(l) sort(unique(as.vector(genotimemat[l,,,]))) )#
		locusbytime <- lapply(1:nloci, function(l) sapply(2:(ntime), function(t)  sapply(1:length(fullunique[[l]]), function(a)  sum(as.vector(genotimemat[l,,,t])==fullunique[[l]][a]) ) ) )#
		finalfrq <- lapply(1:nloci, function(l) sapply(fullunique[[l]], function(a) length(which(genotimemat[l,,,ntime]==a)) )/copies )#
	}#
	if(type=="micr"){#
		ntime <- dim(genotimemat)[3]#
		fullunique <- sapply(1:nloci, function(l) sort(unique(as.vector(genotimemat[l,,]))) )#
		locusbytime <- lapply(1:nloci, function(l) sapply(2:(ntime), function(t)  sapply(1:length(fullunique[[l]]), function(a)  sum(as.vector(genotimemat[l,,t])==fullunique[[l]][a]) ) ) )#
		finalfrq <- lapply(1:nloci, function(l) sapply(fullunique[[l]], function(a) length(which(genotimemat[l,,ntime]==a)) )/copies )#
	}#
	soj <- list()#
	fstate <- list()#
	origingen <- list()#
	for(l in 1:length(locusbytime)){#
		freqs <- locusbytime[[l]]#
		soj[[l]] <- c(rep(NA, times=nrow(freqs)))#
		fstate[[l]] <- c(rep(NA, times=nrow(freqs)))#
		origingen[[l]] <- c(rep(NA, times=nrow(freqs)))#
		for(a in 1:nrow(freqs)){#
			first <- which(freqs[a,]>0)[1]  #
			iffix1 <- which(freqs[a,first:ncol(freqs)]==copies)[1] #
			iffix0 <- which(freqs[a,first:ncol(freqs)]==0)[1]  #
			last <- ifelse(any(c(iffix1,iffix0)>0), min(c(first+iffix1,first+iffix0),na.rm=T),NA) #individually can be NA if segregating or #
			origingen[[l]][[a]]<- first # NOTE gives first generation EVEN for alleles segregating at the final timestep#
			soj[[l]][a] <- last-first #returns NA when segregating at final time#
			seg <- is.na(soj[[l]][a] )#
			if(seg==T){#
				fstate[[l]][a] <- "seg"#
			} else if(!is.na(iffix1) & last == (iffix1+first)) {#
				fstate[[l]][a] <- "fixed" #at least at one point#
			} else{fstate[[l]][a] <- "lost"} #
		}#
		#get first > 0, get first == 1 or next ==0  and then diff bt 2#
	}#
	return(list(soj=soj, effs = fullunique, fstate = fstate, origingen = origingen,finalfrq =finalfrq))#
}
soj4bP <- sojT(test.4b$Plant)
str(soj4bP)
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,1,0))#
plot(gens-(unlist(soj4bP$origingen))[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))]~#
	  unlist(soj4bP$effs)[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))], #
	  col=rgb( unlist(soj4bP$finalfrq) [ unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))],0,0), #
		xlim=c(-0.8,0.8),ylim=c(0,gens), ylab="",xlab="")#
	abline(v=0)#
 	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Sojourn (gens)",side=2,line=2,adj=-1.08)
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,1,0))#
plot(gens-(unlist(soj4bP$origingen))[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))]~#
	  unlist(soj4bP$finalfrq) [ unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))],  #
	  cex= unlist(soj4bP$effs)[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))]#
		xlim=c(-0.8,0.8),ylim=c(0,gens), ylab="",xlab="")
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,1,0))#
plot(gens-(unlist(soj4bP$origingen))[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))]~#
	  unlist(soj4bP$finalfrq) [ unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))],  #
	  cex= unlist(soj4bP$effs)[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))],#
		xlim=c(-0.8,0.8),ylim=c(0,gens), ylab="",xlab="")
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,1,0))#
plot(gens-(unlist(soj4bP$origingen))[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))]~#
	  unlist(soj4bP$finalfrq) [ unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))],  #
	  cex= unlist(soj4bP$effs)[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))] + 0.5,#
		xlim=c(0,1),ylim=c(0,gens), ylab="",xlab="")
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,1,0))#
plot(gens-(unlist(soj4bP$origingen))[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))]~#
	  unlist(soj4bP$finalfrq) [ unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))],  #
	  cex= unlist(soj4bP$effs)[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))] + 0.5,#
	  pch=16, col=rgb(0,0.5,0,alpha=0.5)#
		xlim=c(0,1),ylim=c(0,gens), ylab="",xlab="")
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,1,0))#
plot(gens-(unlist(soj4bP$origingen))[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))]~#
	  unlist(soj4bP$finalfrq) [ unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))],  #
	  cex= unlist(soj4bP$effs)[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))] + 0.5,#
	  pch=16, col=rgb(0,0.5,0,alpha=0.5),#
		xlim=c(0,1),ylim=c(0,gens), ylab="",xlab="")
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,1,0))#
plot(gens-(unlist(soj4bP$origingen))[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))]~#
	  unlist(soj4bP$finalfrq) [ unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))],  #
	  cex= unlist(soj4bP$effs)[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))] + 1,#
	  pch=16, col=rgb(0,0.5,0,alpha=0.5),#
		xlim=c(0,1),ylim=c(0,gens), ylab="",xlab="")
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,1,0))#
plot(gens-(unlist(soj4bP$origingen))[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))]~#
	  unlist(soj4bP$finalfrq) [ unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))],  #
	  cex= range01(unlist(soj4bP$effs)[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))] ),#
	  pch=16, col=rgb(0,0.5,0,alpha=0.5),#
		xlim=c(0,1),ylim=c(0,gens), ylab="",xlab="")
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,1,0))#
plot(gens-(unlist(soj4bP$origingen))[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))]~#
	  unlist(soj4bP$finalfrq) [ unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))],  #
	  cex= abs(unlist(soj4bP$effs)[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))] )/0.8,#
	  pch=16, col=rgb(0,0.5,0,alpha=0.5),#
		xlim=c(0,1),ylim=c(0,gens), ylab="",xlab="")
range(abs(unlist(soj4bP$effs)[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))] ))
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,1,0))#
plot(gens-(unlist(soj4bP$origingen))[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))]~#
	  unlist(soj4bP$finalfrq) [ unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))],  #
	  cex= abs(unlist(soj4bP$effs)[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))] )/0.8 + 1,#
	  pch=16, col=rgb(0,0.5,0,alpha=0.5),#
		xlim=c(0,1),ylim=c(0,gens), ylab="",xlab="")
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,1,0))#
plot( unlist(soj4bP$finalfrq) [ unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))] ~  #
	  unlist(soj4bP$effs)[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))] ),#
	  pch=16, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( gens-(unlist(soj4bP$origingen))[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))]/300,0,0),#
		xlim=c(0,1),ylim=c(0,gens), ylab="",xlab=""#
	)
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,1,0))#
plot( unlist(soj4bP$finalfrq) [ unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))] ~  #
	  unlist(soj4bP$effs)[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))] ,#
	  pch=16, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( gens-(unlist(soj4bP$origingen))[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))]/300,0,0),#
		xlim=c(0,1),ylim=c(0,gens), ylab="",xlab=""#
	)
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,1,0))#
plot( unlist(soj4bP$finalfrq) [ unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))] ~  #
	  unlist(soj4bP$effs)[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))] ,#
	  pch=16, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( gens-(unlist(soj4bP$origingen))[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))]/gens,0,0),#
		xlim=c(-0.8,0.8),ylim=c(0,1), ylab="",xlab=""#
	)
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,1,0))#
plot( unlist(soj4bP$finalfrq) [ unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))] ~  #
	  unlist(soj4bP$effs)[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))] ,#
	  pch=16, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4bP$origingen))[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))]/gens,0,0),#
		xlim=c(-0.8,0.8),ylim=c(0,1), ylab="",xlab=""#
	)
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,1,0))#
plot( unlist(soj4bP$finalfrq) [ unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))] ~  #
	  unlist(soj4bP$effs)[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))] ,#
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4bP$origingen))[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))]/gens,0,0),#
		xlim=c(-0.8,0.8),ylim=c(0,1), ylab="",xlab=""#
	)
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,1,0))#
plot( unlist(soj4bP$finalfrq) [ unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))] ~  #
	  unlist(soj4bP$effs)[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))] ,#
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4bP$origingen))[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))]/gens,0,0),#
		xlim=c(-0.8,0.8),ylim=c(0,1), ylab="",xlab="")#
	abline(v=0)#
 	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Derived allele frequency",side=2,line=2,adj=-1.08)#
plot(unlist(soj4bffP$finalfrq) [ unlist(soj4bffP$effs)!=0 & is.na(unlist(soj4bffP$soj))] ~  #
	  unlist(soj4bffP$effs)[unlist(soj4bffP$effs)!=0 & is.na(unlist(soj4bffP$soj))] ,#
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4bffP$origingen))[unlist(soj4bffP$effs)!=0 & is.na(unlist(soj4bffP$soj))]/gens,0,0),#
		xlim=c(-0.8,0.8),ylim=c(0,1), ylab="",xlab="")#
	abline(v=0)#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
plot( unlist(soj4aP$finalfrq) [ unlist(soj4aP$effs)!=0 & is.na(unlist(soj4aP$soj))] ~  #
	  unlist(soj4aP$effs)[unlist(soj4aP$effs)!=0 & is.na(unlist(soj4aP$soj))] ,#
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4aP$origingen))[unlist(soj4aP$effs)!=0 & is.na(unlist(soj4aP$soj))]/gens,0,0),#
		xlim=c(-0.8,0.8),ylim=c(0,1), ylab="",xlab="")#
	abline(v=0)#
	mtext("Different optima",side=3,line=3)#
	mtext("Equal links to fitness",side=3,line=0.5)#
plot(unlist(soj4affP$finalfrq) [ unlist(soj4affP$effs)!=0 & is.na(unlist(soj4affP$soj))] ~  #
	  unlist(soj4affP$effs)[unlist(soj4affP$effs)!=0 & is.na(unlist(soj4affP$soj))] ,#
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4affP$origingen))[unlist(soj4affP$effs)!=0 & is.na(unlist(soj4affP$soj))]/gens,0,0),#
		xlim=c(-0.8,0.8),ylim=c(0,1), ylab="",xlab="")#
	abline(v=0)#
 	mtext("Effect size",side=1,line=2)#
plot( unlist(soj4fP$finalfrq) [ unlist(soj4fP$effs)!=0 & is.na(unlist(soj4fP$soj))] ~  #
	  unlist(soj4fP$effs)[unlist(soj4fP$effs)!=0 & is.na(unlist(soj4fP$soj))] ,#
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4fP$origingen))[unlist(soj4fP$effs)!=0 & is.na(unlist(soj4fP$soj))]/gens,0,0),#
		xlim=c(-0.8,0.8),ylim=c(0,1), ylab="",xlab="")#
	abline(v=0)#
	mtext("Different optima",side=3,line=3)#
	mtext("Equal links to fitness",side=3,line=0.5)#
plot(unlist(soj4fffP$finalfrq) [ unlist(soj4fffP$effs)!=0 & is.na(unlist(soj4fffP$soj))] ~  #
	  unlist(soj4fffP$effs)[unlist(soj4fffP$effs)!=0 & is.na(unlist(soj4fffP$soj))] ,#
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4fffP$origingen))[unlist(soj4fffP$effs)!=0 & is.na(unlist(soj4fffP$soj))]/gens,0,0),#
		xlim=c(-0.8,0.8),ylim=c(0,1), ylab="",xlab="")#
	abline(v=0)
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,1,0))#
plot( unlist(soj4bP$finalfrq) [ unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))] ~  #
	  unlist(soj4bP$effs)[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))] ,#
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4bP$origingen))[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))]/gens,0,0),#
		xlim=c(-0.8,0.8),ylim=c(0,1), ylab="",xlab="")#
	abline(v=0)#
 	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Derived allele frequency",side=2,line=2,adj=-1.08)#
plot(unlist(soj4bffP$finalfrq) [ unlist(soj4bffP$effs)!=0 & is.na(unlist(soj4bffP$soj))] ~  #
	  unlist(soj4bffP$effs)[unlist(soj4bffP$effs)!=0 & is.na(unlist(soj4bffP$soj))] ,#
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4bffP$origingen))[unlist(soj4bffP$effs)!=0 & is.na(unlist(soj4bffP$soj))]/gens,0,0),#
		xlim=c(-0.8,0.8),ylim=c(0,1), ylab="",xlab="")#
	abline(v=0)#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)
plot( unlist(soj4fP$finalfrq) [ unlist(soj4fP$effs)!=0 & is.na(unlist(soj4fP$soj))] ~  #
	  unlist(soj4fP$effs)[unlist(soj4fP$effs)!=0 & is.na(unlist(soj4fP$soj))] ,#
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4fP$origingen))[unlist(soj4fP$effs)!=0 & is.na(unlist(soj4fP$soj))]/gens,0,0),#
		xlim=c(-0.8,0.8),ylim=c(0,1), ylab="",xlab="")#
	abline(v=0)#
	mtext("Different optima",side=3,line=3)#
	mtext("Equal links to fitness",side=3,line=0.5)
soj4bM <- sojT(test.4b$Micr,type="micr")#
soj4bffP <- sojT(test.4bff$Plant)#
soj4bffM <- sojT(test.4bff$Micr,type="micr")#
soj4aP <- sojT(test.4a$Plant)#
soj4aM <- sojT(test.4a$Micr,type="micr")#
soj4affP <- sojT(test.4aff$Plant)#
soj4affM <- sojT(test.4aff$Micr,type="micr")#
soj4fP <- sojT(test.4f$Plant)#
soj4fM <- sojT(test.4f$Micr,type="micr")#
soj4fffP <- sojT(test.4fff$Plant)#
soj4fffM <- sojT(test.4fff$Micr,type="micr")
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,1,0))#
plot( unlist(soj4bP$finalfrq) [ unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))] ~  #
	  unlist(soj4bP$effs)[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))] ,#
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4bP$origingen))[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))]/gens,0,0),#
		xlim=c(-0.8,0.8),ylim=c(0,1), ylab="",xlab="")#
	abline(v=0)#
 	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Derived allele frequency",side=2,line=2,adj=-1.08)#
plot(unlist(soj4bffP$finalfrq) [ unlist(soj4bffP$effs)!=0 & is.na(unlist(soj4bffP$soj))] ~  #
	  unlist(soj4bffP$effs)[unlist(soj4bffP$effs)!=0 & is.na(unlist(soj4bffP$soj))] ,#
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4bffP$origingen))[unlist(soj4bffP$effs)!=0 & is.na(unlist(soj4bffP$soj))]/gens,0,0),#
		xlim=c(-0.8,0.8),ylim=c(0,1), ylab="",xlab="")#
	abline(v=0)#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)
plot( unlist(soj4fP$finalfrq) [ unlist(soj4fP$effs)!=0 & is.na(unlist(soj4fP$soj))] ~  #
	  unlist(soj4fP$effs)[unlist(soj4fP$effs)!=0 & is.na(unlist(soj4fP$soj))] ,#
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4fP$origingen))[unlist(soj4fP$effs)!=0 & is.na(unlist(soj4fP$soj))]/gens,0,0),#
		xlim=c(-0.8,0.8),ylim=c(0,1), ylab="",xlab="")#
	abline(v=0)#
	mtext("Different optima",side=3,line=3)#
	mtext("Equal links to fitness",side=3,line=0.5)#
plot(unlist(soj4fffP$finalfrq) [ unlist(soj4fffP$effs)!=0 & is.na(unlist(soj4fffP$soj))] ~  #
	  unlist(soj4fffP$effs)[unlist(soj4fffP$effs)!=0 & is.na(unlist(soj4fffP$soj))] ,#
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4fffP$origingen))[unlist(soj4fffP$effs)!=0 & is.na(unlist(soj4fffP$soj))]/gens,0,0),#
		xlim=c(-0.8,0.8),ylim=c(0,1), ylab="",xlab="")#
	abline(v=0)
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,1,0))#
plot(  unlist(soj4bP$effs)[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))]~  #
	  unlist(soj4bP$finalfrq) [ unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))] ,#
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4bP$origingen))[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))]/gens,0,0),#
		xlim=c(-0.8,0.8),ylim=c(0,1), ylab="",xlab="")#
	abline(v=0)#
 	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Derived allele frequency",side=2,line=2,adj=-1.08)
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,1,0))#
plot(  unlist(soj4bP$effs)[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))]~  #
	  unlist(soj4bP$finalfrq) [ unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))] ,#
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4bP$origingen))[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))]/gens,0,0),#
		ylim=c(-0.8,0.8),xlim=c(0,1), ylab="",xlab="")#
	abline(v=0)#
 	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Derived allele frequency",side=2,line=2,adj=-1.08)
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,1,0))#
plot(  unlist(soj4bP$effs)[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))]~  #
	  unlist(soj4bP$finalfrq) [ unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))] ,#
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4bP$origingen))[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))]/gens,0,0),#
		ylim=c(-0.8,0.8),xlim=c(0,1), ylab="",xlab="")#
	abline(h=0)#
 	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Derived allele frequency",side=2,line=2,adj=-1.08)
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,1,0))#
plot( unlist(soj4bP$effs)[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))] ~#
	unlist(soj4bP$finalfrq) [ unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))],#
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4bP$origingen))[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))]/gens,0,0),#
		xlim=c(-0.8,0.8),ylim=c(0,1), ylab="",xlab="")#
	abline(v=0)#
 	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Derived allele frequency",side=2,line=2,adj=-1.08)#
plot( unlist(soj4bffP$effs)[unlist(soj4bffP$effs)!=0 & is.na(unlist(soj4bffP$soj))] ~#
	unlist(soj4bffP$finalfrq) [ unlist(soj4bffP$effs)!=0 & is.na(unlist(soj4bffP$soj))],#
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4bffP$origingen))[unlist(soj4bffP$effs)!=0 & is.na(unlist(soj4bffP$soj))]/gens,0,0),#
		xlim=c(-0.8,0.8),ylim=c(0,1), ylab="",xlab="")#
	abline(v=0)#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
plot(unlist(soj4aP$effs)[unlist(soj4aP$effs)!=0 & is.na(unlist(soj4aP$soj))]~#
	 unlist(soj4aP$finalfrq) [ unlist(soj4aP$effs)!=0 & is.na(unlist(soj4aP$soj))],#
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4aP$origingen))[unlist(soj4aP$effs)!=0 & is.na(unlist(soj4aP$soj))]/gens,0,0),#
		xlim=c(-0.8,0.8),ylim=c(0,1), ylab="",xlab="")#
	abline(v=0)#
	mtext("Different optima",side=3,line=3)#
	mtext("Equal links to fitness",side=3,line=0.5)#
plot( unlist(soj4affP$effs)[unlist(soj4affP$effs)!=0 & is.na(unlist(soj4affP$soj))]~#
	unlist(soj4affP$finalfrq) [ unlist(soj4affP$effs)!=0 & is.na(unlist(soj4affP$soj))],#
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4affP$origingen))[unlist(soj4affP$effs)!=0 & is.na(unlist(soj4affP$soj))]/gens,0,0),#
		xlim=c(-0.8,0.8),ylim=c(0,1), ylab="",xlab="")#
	abline(v=0)#
 	mtext("Effect size",side=1,line=2)#
plot( unlist(soj4fP$effs)[unlist(soj4fP$effs)!=0 & is.na(unlist(soj4fP$soj))]~#
	unlist(soj4fP$finalfrq) [ unlist(soj4fP$effs)!=0 & is.na(unlist(soj4fP$soj))] ~  #
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4fP$origingen))[unlist(soj4fP$effs)!=0 & is.na(unlist(soj4fP$soj))]/gens,0,0),#
		xlim=c(-0.8,0.8),ylim=c(0,1), ylab="",xlab="")#
	abline(v=0)#
	mtext("Different optima",side=3,line=3)#
	mtext("Equal links to fitness",side=3,line=0.5)#
plot(unlist(soj4fffP$effs)[unlist(soj4fffP$effs)!=0 & is.na(unlist(soj4fffP$soj))]~#
	unlist(soj4fffP$finalfrq) [ unlist(soj4fffP$effs)!=0 & is.na(unlist(soj4fffP$soj))] ~  #
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4fffP$origingen))[unlist(soj4fffP$effs)!=0 & is.na(unlist(soj4fffP$soj))]/gens,0,0),#
		xlim=c(-0.8,0.8),ylim=c(0,1), ylab="",xlab="")#
	abline(v=0)
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,1,0))#
plot( unlist(soj4bP$effs)[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))] ~#
	unlist(soj4bP$finalfrq) [ unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))],#
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4bP$origingen))[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))]/gens,0,0),#
		xlim=c(-0.8,0.8),ylim=c(0,1), ylab="",xlab="")#
	abline(v=0)#
 	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Derived allele frequency",side=2,line=2,adj=-1.08)
plot( unlist(soj4bffP$effs)[unlist(soj4bffP$effs)!=0 & is.na(unlist(soj4bffP$soj))] ~#
	unlist(soj4bffP$finalfrq) [ unlist(soj4bffP$effs)!=0 & is.na(unlist(soj4bffP$soj))],#
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4bffP$origingen))[unlist(soj4bffP$effs)!=0 & is.na(unlist(soj4bffP$soj))]/gens,0,0),#
		xlim=c(-0.8,0.8),ylim=c(0,1), ylab="",xlab="")#
	abline(v=0)#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,1,0))#
plot( unlist(soj4bP$effs)[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))] ~#
	unlist(soj4bP$finalfrq) [ unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))],#
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4bP$origingen))[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))]/gens,0,0),#
		ylim=c(-0.8,0.8),xlim=c(0,1), ylab="",xlab="")#
	abline(v=0)#
 	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Derived allele frequency",side=2,line=2,adj=-1.08)#
plot( unlist(soj4bffP$effs)[unlist(soj4bffP$effs)!=0 & is.na(unlist(soj4bffP$soj))] ~#
	unlist(soj4bffP$finalfrq) [ unlist(soj4bffP$effs)!=0 & is.na(unlist(soj4bffP$soj))],#
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4bffP$origingen))[unlist(soj4bffP$effs)!=0 & is.na(unlist(soj4bffP$soj))]/gens,0,0),#
		ylim=c(-0.8,0.8),xlim=c(0,1), ylab="",xlab="")#
	abline(v=0)#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,1,0))#
plot( unlist(soj4bP$effs)[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))] ~#
	unlist(soj4bP$finalfrq) [ unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))],#
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4bP$origingen))[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))]/gens,0,0),#
		ylim=c(-0.8,0.8),xlim=c(0,1), ylab="",xlab="")#
	abline(h=0)#
 	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Derived allele frequency",side=2,line=2,adj=-1.08)#
plot( unlist(soj4bffP$effs)[unlist(soj4bffP$effs)!=0 & is.na(unlist(soj4bffP$soj))] ~#
	unlist(soj4bffP$finalfrq) [ unlist(soj4bffP$effs)!=0 & is.na(unlist(soj4bffP$soj))],#
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4bffP$origingen))[unlist(soj4bffP$effs)!=0 & is.na(unlist(soj4bffP$soj))]/gens,0,0),#
		ylim=c(-0.8,0.8),xlim=c(0,1), ylab="",xlab="")#
	abline(h=0)#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)
plot( unlist(soj4fP$effs)[unlist(soj4fP$effs)!=0 & is.na(unlist(soj4fP$soj))]~#
	unlist(soj4fP$finalfrq) [ unlist(soj4fP$effs)!=0 & is.na(unlist(soj4fP$soj))] ~  #
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4fP$origingen))[unlist(soj4fP$effs)!=0 & is.na(unlist(soj4fP$soj))]/gens,0,0),#
		ylim=c(-0.8,0.8),xlim=c(0,1), ylab="",xlab="")#
	abline(h=0)#
	mtext("Different optima",side=3,line=3)#
	mtext("Equal links to fitness",side=3,line=0.5)#
plot(unlist(soj4fffP$effs)[unlist(soj4fffP$effs)!=0 & is.na(unlist(soj4fffP$soj))]~#
	unlist(soj4fffP$finalfrq) [ unlist(soj4fffP$effs)!=0 & is.na(unlist(soj4fffP$soj))] ~  #
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4fffP$origingen))[unlist(soj4fffP$effs)!=0 & is.na(unlist(soj4fffP$soj))]/gens,0,0),#
		ylim=c(-0.8,0.8),xlim=c(0,1), ylab="",xlab="")#
	abline(h=0)
plot( unlist(soj4fP$effs)[unlist(soj4fP$effs)!=0 & is.na(unlist(soj4fP$soj))]~#
	unlist(soj4fP$finalfrq) [ unlist(soj4fP$effs)!=0 & is.na(unlist(soj4fP$soj))],  #
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4fP$origingen))[unlist(soj4fP$effs)!=0 & is.na(unlist(soj4fP$soj))]/gens,0,0),#
		ylim=c(-0.8,0.8),xlim=c(0,1), ylab="",xlab="")#
	abline(h=0)#
	mtext("Different optima",side=3,line=3)#
	mtext("Equal links to fitness",side=3,line=0.5)#
plot(unlist(soj4fffP$effs)[unlist(soj4fffP$effs)!=0 & is.na(unlist(soj4fffP$soj))]~#
	unlist(soj4fffP$finalfrq) [ unlist(soj4fffP$effs)!=0 & is.na(unlist(soj4fffP$soj))],#
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4fffP$origingen))[unlist(soj4fffP$effs)!=0 & is.na(unlist(soj4fffP$soj))]/gens,0,0),#
		ylim=c(-0.8,0.8),xlim=c(0,1), ylab="",xlab="")#
	abline(h=0)
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,1,0))#
plot( unlist(soj4bP$effs)[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))] ~#
	unlist(soj4bP$finalfrq) [ unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))],#
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4bP$origingen))[unlist(soj4bP$effs)!=0 & is.na(unlist(soj4bP$soj))]/gens,0,0),#
		ylim=c(-0.8,0.8),xlim=c(0,1), ylab="",xlab="")#
	abline(h=0)#
 	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Effect size",side=2,line=2,adj=-1.08)#
plot( unlist(soj4bffP$effs)[unlist(soj4bffP$effs)!=0 & is.na(unlist(soj4bffP$soj))] ~#
	unlist(soj4bffP$finalfrq) [ unlist(soj4bffP$effs)!=0 & is.na(unlist(soj4bffP$soj))],#
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4bffP$origingen))[unlist(soj4bffP$effs)!=0 & is.na(unlist(soj4bffP$soj))]/gens,0,0),#
		ylim=c(-0.8,0.8),xlim=c(0,1), ylab="",xlab="")#
	abline(h=0)#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)
plot( unlist(soj4fP$effs)[unlist(soj4fP$effs)!=0 & is.na(unlist(soj4fP$soj))]~#
	unlist(soj4fP$finalfrq) [ unlist(soj4fP$effs)!=0 & is.na(unlist(soj4fP$soj))],  #
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4fP$origingen))[unlist(soj4fP$effs)!=0 & is.na(unlist(soj4fP$soj))]/gens,0,0),#
		ylim=c(-0.8,0.8),xlim=c(0,1), ylab="",xlab="")#
	abline(h=0)#
	mtext("Different optima",side=3,line=3)#
	mtext("Equal links to fitness",side=3,line=0.5)#
plot(unlist(soj4fffP$effs)[unlist(soj4fffP$effs)!=0 & is.na(unlist(soj4fffP$soj))]~#
	unlist(soj4fffP$finalfrq) [ unlist(soj4fffP$effs)!=0 & is.na(unlist(soj4fffP$soj))],#
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4fffP$origingen))[unlist(soj4fffP$effs)!=0 & is.na(unlist(soj4fffP$soj))]/gens,0,0),#
		ylim=c(-0.8,0.8),xlim=c(0,1), ylab="",xlab="")#
	abline(h=0)
mtext("Derived allele frequency",side=1,line=2)
plot( unlist(soj4fP$effs)[unlist(soj4fP$effs)!=0 & is.na(unlist(soj4fP$soj))]~#
	unlist(soj4fP$finalfrq) [ unlist(soj4fP$effs)!=0 & is.na(unlist(soj4fP$soj))],  #
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4fP$origingen))[unlist(soj4fP$effs)!=0 & is.na(unlist(soj4fP$soj))]/gens,0,0),#
		ylim=c(-0.8,0.8),xlim=c(0,1), ylab="",xlab="")#
	abline(h=0)#
	mtext("Different optima",side=3,line=3)#
	mtext("Equal links to fitness",side=3,line=0.5)#
plot(unlist(soj4fffP$effs)[unlist(soj4fffP$effs)!=0 & is.na(unlist(soj4fffP$soj))]~#
	unlist(soj4fffP$finalfrq) [ unlist(soj4fffP$effs)!=0 & is.na(unlist(soj4fffP$soj))],#
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4fffP$origingen))[unlist(soj4fffP$effs)!=0 & is.na(unlist(soj4fffP$soj))]/gens,0,0),#
		ylim=c(-0.8,0.8),xlim=c(0,1), ylab="",xlab="")#
	abline(h=0)
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,1,0))#
plot( unlist(soj4bM$effs)[unlist(soj4bM$effs)!=0 & is.na(unlist(soj4bM$soj))] ~#
	unlist(soj4bM$finalfrq) [ unlist(soj4bM$effs)!=0 & is.na(unlist(soj4bM$soj))],#
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4bM$origingen))[unlist(soj4bM$effs)!=0 & is.na(unlist(soj4bM$soj))]/gens,0,0),#
		ylim=c(-0.8,0.8),xlim=c(0,1), ylab="",xlab="")#
	abline(h=0)#
 	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Effect size",side=2,line=2,adj=-1.08)#
plot( unlist(soj4bffM$effs)[unlist(soj4bffM$effs)!=0 & is.na(unlist(soj4bffM$soj))] ~#
	unlist(soj4bffM$finalfrq) [ unlist(soj4bffM$effs)!=0 & is.na(unlist(soj4bffM$soj))],#
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4bffM$origingen))[unlist(soj4bffM$effs)!=0 & is.na(unlist(soj4bffM$soj))]/gens,0,0),#
		ylim=c(-0.8,0.8),xlim=c(0,1), ylab="",xlab="")#
	abline(h=0)#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)
plot( unlist(soj4fM$effs)[unlist(soj4fM$effs)!=0 & is.na(unlist(soj4fM$soj))]~#
	unlist(soj4fM$finalfrq) [ unlist(soj4fM$effs)!=0 & is.na(unlist(soj4fM$soj))],  #
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4fM$origingen))[unlist(soj4fM$effs)!=0 & is.na(unlist(soj4fM$soj))]/gens,0,0),#
		ylim=c(-0.8,0.8),xlim=c(0,1), ylab="",xlab="")#
	abline(h=0)#
	mtext("Different optima",side=3,line=3)#
	mtext("Equal links to fitness",side=3,line=0.5)#
plot(unlist(soj4fffM$effs)[unlist(soj4fffM$effs)!=0 & is.na(unlist(soj4fffM$soj))]~#
	unlist(soj4fffM$finalfrq) [ unlist(soj4fffM$effs)!=0 & is.na(unlist(soj4fffM$soj))],#
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4fffM$origingen))[unlist(soj4fffM$effs)!=0 & is.na(unlist(soj4fffM$soj))]/gens,0,0),#
		ylim=c(-0.8,0.8),xlim=c(0,1), ylab="",xlab="")#
	abline(h=0)
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,1,0))#
plot( unlist(soj4bM$effs)[unlist(soj4bM$effs)!=0 & is.na(unlist(soj4bM$soj))] ~#
	unlist(soj4bM$finalfrq) [ unlist(soj4bM$effs)!=0 & is.na(unlist(soj4bM$soj))],#
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4bM$origingen))[unlist(soj4bM$effs)!=0 & is.na(unlist(soj4bM$soj))]/gens,0,0),#
		ylim=c(-0.5,0.8),xlim=c(0,1), ylab="",xlab="")#
	abline(h=0)#
 	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Effect size",side=2,line=2,adj=-1.08)#
plot( unlist(soj4bffM$effs)[unlist(soj4bffM$effs)!=0 & is.na(unlist(soj4bffM$soj))] ~#
	unlist(soj4bffM$finalfrq) [ unlist(soj4bffM$effs)!=0 & is.na(unlist(soj4bffM$soj))],#
	  pch=1, #col=rgb(0,0.5,0,alpha=0.5),#
	col = rgb( (unlist(soj4bffM$origingen))[unlist(soj4bffM$effs)!=0 & is.na(unlist(soj4bffM$soj))]/gens,0,0),#
		ylim=c(-0.5,0.8),xlim=c(0,1), ylab="",xlab="")#
	abline(h=0)#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)
log(c(1:10)/10)
seq(from =0, to =1, length.out=10)
ls()
par(mfrow=c(3,3))#
par(mar=c(1,1,1,1))#
par(oma=c(4,5,2,1))#
for(i in 1:3){#
plot( traitfit.4b[[i]]$rfitplnt~traitfit.4b[[i]]$rfitmicr,col=rgb(0,0,0), pch=1,xlim=c(0,0.0023),ylim=c(0,0.0023),xaxt="n",cex=0.5)#
	points( traitfit.4bff[[i]]$rfitplnt~traitfit.4bff[[i]]$rfitmicr,col=rgb(0.5,0.5,0.5),pch=1 ,cex=0.5)#
	if(i==1){mtext("No link to microbe fitness",side=2,line=3.5)}#
# 	text(0.02,y=0.01, paste("Direct, rho=", round(cor(traitfit.4b[[i]]$rfitplnt,traitfit.4b[[i]]$rfitmicr),digits=2),sep="") ) #
		#because there's no error here, this is actually perfectly correlated! the link is weaker than the error, but it can't be infinite, so...#
	text(0.0015,y=0.0002,paste("Indirect, rho=", round(cor(traitfit.4bff[[i]]$rfitplnt,traitfit.4bff[[i]]$rfitmicr),digits=2),sep="") )#
	mtext(paste("Generation ",genvec[[i]],sep=""),side=3,line=1.5)#
}
for(i in 1:3){#
plot( traitfit.4f[[i]]$rfitplnt~traitfit.4f[[i]]$rfitmicr,col=rgb(0,0,0), pch=1,xlim=c(0,0.0023),ylim=c(0,0.0023),cex=0.5)#
	points( traitfit.4fff[[i]]$rfitplnt~traitfit.4fff[[i]]$rfitmicr,col=rgb(0.5,0.5,0.5),pch=1 ,cex=0.5)#
	if(i==1){mtext("Same optima",side=2,line=3.5)}#
	if(i==2){mtext("Relative fitness of microbe",side=1,line=2)}#
	text(0.0015,y=0.0005, paste("Direct, rho=", round(cor(traitfit.4f[[i]]$rfitplnt,traitfit.4f[[i]]$rfitmicr),digits=2),sep="") )#
	text(0.0015,y=0.0002,paste("Indirect, rho=", round(cor(traitfit.4fff[[i]]$rfitplnt,traitfit.4fff[[i]]$rfitmicr),digits=2),sep="") )#
	legend(0,0.0020,c("Direct only","With +FF"),pch=c(16,21),col=rgb(0,0,0),pt.bg=rgb(0.5,0.5,0.5),pt.cex=c(2.5,1),bty="n")#
}
par(mfrow=c(3,3))#
par(mar=c(1,1,1,1))#
par(oma=c(4,5,2,1))#
for(i in 1:3){#
plot( traitfit.4b[[i]]$rfitplnt~traitfit.4b[[i]]$rfitmicr,col=rgb(0,0,0), pch=1,xlim=c(0,0.0023),ylim=c(0,0.0023),xaxt="n",cex=0.5)#
	points( traitfit.4bff[[i]]$rfitplnt~traitfit.4bff[[i]]$rfitmicr,col=rgb(0.5,0.5,0.5),pch=1 ,cex=0.5)#
	if(i==1){mtext("No link to microbe fitness",side=2,line=3.5)}#
# 	text(0.02,y=0.01, paste("Direct, rho=", round(cor(traitfit.4b[[i]]$rfitplnt,traitfit.4b[[i]]$rfitmicr),digits=2),sep="") ) #
		#because there's no error here, this is actually perfectly correlated! the link is weaker than the error, but it can't be infinite, so...#
	text(0.0015,y=0.0002,paste("Indirect, rho=", round(cor(traitfit.4bff[[i]]$rfitplnt,traitfit.4bff[[i]]$rfitmicr),digits=2),sep="") )#
	mtext(paste("Generation ",genvec[[i]],sep=""),side=3,line=1.5)#
}
for(i in 1:3){#
plot( traitfit.4f[[i]]$rfitplnt~traitfit.4f[[i]]$rfitmicr,col=rgb(0,0,0), pch=1,xlim=c(0,0.0023),ylim=c(0,0.0023),cex=0.5)#
	points( traitfit.4fff[[i]]$rfitplnt~traitfit.4fff[[i]]$rfitmicr,col=rgb(0.5,0.5,0.5),pch=1 ,cex=0.5)#
	if(i==1){mtext("Same optima",side=2,line=3.5)}#
	if(i==2){mtext("Relative fitness of microbe",side=1,line=2)}#
	text(0.0015,y=0.0005, paste("Direct, rho=", round(cor(traitfit.4f[[i]]$rfitplnt,traitfit.4f[[i]]$rfitmicr),digits=2),sep="") )#
	text(0.0015,y=0.0002,paste("Indirect, rho=", round(cor(traitfit.4fff[[i]]$rfitplnt,traitfit.4fff[[i]]$rfitmicr),digits=2),sep="") )#
# 	legend(0,0.0018,c("Direct only","With +FF"),pch=c(16,21),col=rgb(0,0,0),pt.bg=rgb(0.5,0.5,0.5),pt.cex=c(2.5,1),bty="n")#
	legend(0,0.0018,c("Direct only","With +FF"),col=c(rgb(0,0,0),rgb(0.5,0.5,0.5)),bty="n")#
}
mtext("Relative fitness of host",side=2,line=2)
legend(0,0.0018,c("Direct only","With +FF"),pch=1,col=c(rgb(0,0,0),rgb(0.5,0.5,0.5)),bty="n")
pdf("~/tmp.pdf",sep=""),height=6,width=7)#
par(mfrow=c(3,3))#
par(mar=c(1,1,1,1))#
par(oma=c(4,5,2,1))#
for(i in 1:3){#
plot( traitfit.4b[[i]]$rfitplnt~traitfit.4b[[i]]$rfitmicr,col=rgb(0,0,0), pch=1,xlim=c(0,0.0023),ylim=c(0,0.0023),xaxt="n",cex=0.5)#
	points( traitfit.4bff[[i]]$rfitplnt~traitfit.4bff[[i]]$rfitmicr,col=rgb(0.5,0.5,0.5),pch=1 ,cex=0.5)#
	if(i==1){mtext("No link to microbe fitness",side=2,line=3.5)}#
# 	text(0.02,y=0.01, paste("Direct, rho=", round(cor(traitfit.4b[[i]]$rfitplnt,traitfit.4b[[i]]$rfitmicr),digits=2),sep="") ) #
		#because there's no error here, this is actually perfectly correlated! the link is weaker than the error, but it can't be infinite, so...#
	text(0.0015,y=0.0002,paste("Indirect, rho=", round(cor(traitfit.4bff[[i]]$rfitplnt,traitfit.4bff[[i]]$rfitmicr),digits=2),sep="") )#
	mtext(paste("Generation ",genvec[[i]],sep=""),side=3,line=1.5)#
}
pdf("~/tmp.pdf",height=6,width=7)#
par(mfrow=c(3,3))#
par(mar=c(1,1,1,1))#
par(oma=c(4,5,2,1))#
for(i in 1:3){#
plot( traitfit.4b[[i]]$rfitplnt~traitfit.4b[[i]]$rfitmicr,col=rgb(0,0,0), pch=1,xlim=c(0,0.0023),ylim=c(0,0.0023),xaxt="n",cex=0.5)#
	points( traitfit.4bff[[i]]$rfitplnt~traitfit.4bff[[i]]$rfitmicr,col=rgb(0.5,0.5,0.5),pch=1 ,cex=0.5)#
	if(i==1){mtext("No link to microbe fitness",side=2,line=3.5)}#
# 	text(0.02,y=0.01, paste("Direct, rho=", round(cor(traitfit.4b[[i]]$rfitplnt,traitfit.4b[[i]]$rfitmicr),digits=2),sep="") ) #
		#because there's no error here, this is actually perfectly correlated! the link is weaker than the error, but it can't be infinite, so...#
	text(0.0015,y=0.0002,paste("Indirect, rho=", round(cor(traitfit.4bff[[i]]$rfitplnt,traitfit.4bff[[i]]$rfitmicr),digits=2),sep="") )#
	mtext(paste("Generation ",genvec[[i]],sep=""),side=3,line=1.5)#
}
for(i in 1:3){#
plot( traitfit.4f[[i]]$rfitplnt~traitfit.4f[[i]]$rfitmicr,col=rgb(0,0,0), pch=1,xlim=c(0,0.0023),ylim=c(0,0.0023),cex=0.5)#
	points( traitfit.4fff[[i]]$rfitplnt~traitfit.4fff[[i]]$rfitmicr,col=rgb(0.5,0.5,0.5),pch=1 ,cex=0.5)#
	if(i==1){mtext("Same optima",side=2,line=3.5)}#
	if(i==2){mtext("Relative fitness of microbe",side=1,line=2)}#
	text(0.0018,y=0.0005, paste("Direct, rho=", round(cor(traitfit.4f[[i]]$rfitplnt,traitfit.4f[[i]]$rfitmicr),digits=2),sep="") )#
	text(0.0018,y=0.0002,paste("Indirect, rho=", round(cor(traitfit.4fff[[i]]$rfitplnt,traitfit.4fff[[i]]$rfitmicr),digits=2),sep="") )#
# 	legend(0,0.0018,c("Direct only","With +FF"),pch=c(16,21),col=rgb(0,0,0),pt.bg=rgb(0.5,0.5,0.5),pt.cex=c(2.5,1),bty="n")#
	legend(0,0.0018,c("Direct only","With +FF"),pch=16,col=c(rgb(0,0,0),rgb(0.5,0.5,0.5)),bty="n")#
}#
 dev.off()
plot( traitfit.4f[[i]]$rfitplnt~traitfit.4f[[i]]$rfitmicr,col=rgb(0,0,0), pch=1,xlim=c(0,0.0023),ylim=c(0,0.0023),cex=0.5)#
	points( traitfit.4fff[[i]]$rfitplnt~traitfit.4fff[[i]]$rfitmicr,col=rgb(0.5,0.5,0.5),pch=1 ,cex=0.5)#
	if(i==1){mtext("Same optima",side=2,line=3.5)}#
	if(i==2){mtext("Relative fitness of microbe",side=1,line=2)}#
	text(0.0018,y=0.0005, bquote(rho==.round(cor(traitfit.4f[[i]]$rfitplnt,traitfit.4f[[i]]$rfitmicr),digits=2)) )#
	text(0.0018,y=0.0002,paste("Indirect, rho=", round(cor(traitfit.4fff[[i]]$rfitplnt,traitfit.4fff[[i]]$rfitmicr),digits=2),sep="") )#
# 	legend(0,0.0018,c("Direct only","With +FF"),pch=c(16,21),col=rgb(0,0,0),pt.bg=rgb(0.5,0.5,0.5),pt.cex=c(2.5,1),bty="n")#
	legend(0,0.0018,c("Direct only","With +FF"),pch=16,col=c(rgb(0,0,0),rgb(0.5,0.5,0.5)),bty="n")#
}
for(i in 1:3){#
plot( traitfit.4f[[i]]$rfitplnt~traitfit.4f[[i]]$rfitmicr,col=rgb(0,0,0), pch=1,xlim=c(0,0.0023),ylim=c(0,0.0023),cex=0.5)#
	points( traitfit.4fff[[i]]$rfitplnt~traitfit.4fff[[i]]$rfitmicr,col=rgb(0.5,0.5,0.5),pch=1 ,cex=0.5)#
	if(i==1){mtext("Same optima",side=2,line=3.5)}#
	if(i==2){mtext("Relative fitness of microbe",side=1,line=2)}#
	rhoD <- round(cor(traitfit.4f[[i]]$rfitplnt,traitfit.4f[[i]]$rfitmicr),digits=2)#
	text(0.0018,y=0.0005, bquote(rho==.rhoD ))#
	text(0.0018,y=0.0002,paste("Indirect, rho=", round(cor(traitfit.4fff[[i]]$rfitplnt,traitfit.4fff[[i]]$rfitmicr),digits=2),sep="") )#
# 	legend(0,0.0018,c("Direct only","With +FF"),pch=c(16,21),col=rgb(0,0,0),pt.bg=rgb(0.5,0.5,0.5),pt.cex=c(2.5,1),bty="n")#
	legend(0,0.0018,c("Direct only","With +FF"),pch=16,col=c(rgb(0,0,0),rgb(0.5,0.5,0.5)),bty="n")#
}
plot( traitfit.4f[[i]]$rfitplnt~traitfit.4f[[i]]$rfitmicr,col=rgb(0,0,0), pch=1,xlim=c(0,0.0023),ylim=c(0,0.0023),cex=0.5)#
	points( traitfit.4fff[[i]]$rfitplnt~traitfit.4fff[[i]]$rfitmicr,col=rgb(0.5,0.5,0.5),pch=1 ,cex=0.5)#
	if(i==1){mtext("Same optima",side=2,line=3.5)}#
	if(i==2){mtext("Relative fitness of microbe",side=1,line=2)}#
	rhoD <- round(cor(traitfit.4f[[i]]$rfitplnt,traitfit.4f[[i]]$rfitmicr),digits=2)#
	text(0.0018,y=0.0005, bquote(rho==.(rhoD) ))#
	text(0.0018,y=0.0002,paste("Indirect, rho=", round(cor(traitfit.4fff[[i]]$rfitplnt,traitfit.4fff[[i]]$rfitmicr),digits=2),sep="") )#
# 	legend(0,0.0018,c("Direct only","With +FF"),pch=c(16,21),col=rgb(0,0,0),pt.bg=rgb(0.5,0.5,0.5),pt.cex=c(2.5,1),bty="n")#
	legend(0,0.0018,c("Direct only","With +FF"),pch=16,col=c(rgb(0,0,0),rgb(0.5,0.5,0.5)),bty="n")
pdf("~/tmp.pdf",height=6,width=7)#
par(mfrow=c(3,3))#
par(mar=c(1,1,1,1))#
par(oma=c(4,5,2,1))#
for(i in 1:3){#
plot( traitfit.4b[[i]]$rfitplnt~traitfit.4b[[i]]$rfitmicr,col=rgb(0,0,0), pch=1,xlim=c(0,0.0023),ylim=c(0,0.0023),xaxt="n",cex=0.5)#
	points( traitfit.4bff[[i]]$rfitplnt~traitfit.4bff[[i]]$rfitmicr,col=rgb(0.5,0.5,0.5),pch=1 ,cex=0.5)#
	if(i==1){mtext("No link to microbe fitness",side=2,line=3.5)}#
# 	text(0.02,y=0.01, paste("Direct, rho=", round(cor(traitfit.4b[[i]]$rfitplnt,traitfit.4b[[i]]$rfitmicr),digits=2),sep="") ) #
		#because there's no error here, this is actually perfectly correlated! the link is weaker than the error, but it can't be infinite, so...#
	rhoD <- round(cor(traitfit.4b[[i]]$rfitplnt,traitfit.4b[[i]]$rfitmicr),digits=2)#
	rhoI <- round(cor(traitfit.4bff[[i]]$rfitplnt,traitfit.4bff[[i]]$rfitmicr),digits=2)#
	text(0.0018,y=0.0005, bquote(rho==.(rhoD) ))#
	text(0.0018,y=0.0002, bquote(rho==.(rhoI) ),col=rgb(0.5,0.5,0.5))#
}
for(i in 1:3){#
plot( traitfit.4f[[i]]$rfitplnt~traitfit.4f[[i]]$rfitmicr,col=rgb(0,0,0), pch=1,xlim=c(0,0.0023),ylim=c(0,0.0023),cex=0.5)#
	points( traitfit.4fff[[i]]$rfitplnt~traitfit.4fff[[i]]$rfitmicr,col=rgb(0.5,0.5,0.5),pch=1 ,cex=0.5)#
	if(i==1){mtext("Same optima",side=2,line=3.5)}#
	if(i==2){mtext("Relative fitness of microbe",side=1,line=2)}#
	rhoD <- round(cor(traitfit.4f[[i]]$rfitplnt,traitfit.4f[[i]]$rfitmicr),digits=2)#
	rhoI <- round(cor(traitfit.4fff[[i]]$rfitplnt,traitfit.4fff[[i]]$rfitmicr),digits=2)#
	text(0.0018,y=0.0005, bquote(rho==.(rhoD) ))#
	text(0.0018,y=0.0002, bquote(rho==.(rhoI) ),col=rgb(0.5,0.5,0.5))#
# 	legend(0,0.0018,c("Direct only","With +FF"),pch=c(16,21),col=rgb(0,0,0),pt.bg=rgb(0.5,0.5,0.5),pt.cex=c(2.5,1),bty="n")#
	legend(0,0.0018,c("Direct only","With +FF"),pch=16,col=c(rgb(0,0,0),rgb(0.5,0.5,0.5)),bty="n")#
}#
 dev.off()
pdf("~/tmp.pdf",height=6,width=7)#
par(mfrow=c(3,3))#
par(mar=c(1,1,1,1))#
par(oma=c(4,5,2,1))#
for(i in 1:3){#
plot( traitfit.4b[[i]]$rfitplnt~traitfit.4b[[i]]$rfitmicr,col=rgb(0,0,0), pch=1,xlim=c(0,0.0023),ylim=c(0,0.0023),xaxt="n",cex=0.5)#
	points( traitfit.4bff[[i]]$rfitplnt~traitfit.4bff[[i]]$rfitmicr,col=rgb(0.5,0.5,0.5),pch=1 ,cex=0.5)#
	if(i==1){mtext("No link to microbe fitness",side=2,line=3.5)}#
# 	rhoD <- round(cor(traitfit.4b[[i]]$rfitplnt,traitfit.4b[[i]]$rfitmicr),digits=2)#
	rhoI <- round(cor(traitfit.4bff[[i]]$rfitplnt,traitfit.4bff[[i]]$rfitmicr),digits=2)#
# 	text(0.0018,y=0.0005, bquote(rho==.(rhoD) ))#
		#because there's no error here, this is actually perfectly correlated! the link is weaker than the error, but it can't be infinite, so...#
	text(0.0018,y=0.0002, bquote(rho==.(rhoI) ),col=rgb(0.75,0.75,0.75))#
}
for(i in 1:3){#
plot( traitfit.4f[[i]]$rfitplnt~traitfit.4f[[i]]$rfitmicr,col=rgb(0,0,0), pch=1,xlim=c(0,0.0023),ylim=c(0,0.0023),cex=0.5)#
	points( traitfit.4fff[[i]]$rfitplnt~traitfit.4fff[[i]]$rfitmicr,col=rgb(0.5,0.5,0.5),pch=1 ,cex=0.5)#
	if(i==1){mtext("Same optima",side=2,line=3.5)}#
	if(i==2){mtext("Relative fitness of microbe",side=1,line=2)}#
	rhoD <- round(cor(traitfit.4f[[i]]$rfitplnt,traitfit.4f[[i]]$rfitmicr),digits=2)#
	rhoI <- round(cor(traitfit.4fff[[i]]$rfitplnt,traitfit.4fff[[i]]$rfitmicr),digits=2)#
	text(0.0018,y=0.0005, bquote(rho==.(rhoD) ))#
	text(0.0018,y=0.0002, bquote(rho==.(rhoI) ),col=rgb(0.75,0.75,0.75))#
# 	legend(0,0.0018,c("Direct only","With +FF"),pch=c(16,21),col=rgb(0,0,0),pt.bg=rgb(0.5,0.5,0.5),pt.cex=c(2.5,1),bty="n")#
	if(i==3){legend(0,0.0022,c("Direct only","With +FF"),pch=16,col=c(rgb(0,0,0),rgb(0.5,0.5,0.5)),bty="n")}#
}#
 dev.off()
pdf("~/tmp.pdf",height=6,width=7)#
par(mfrow=c(3,3))#
par(mar=c(1,1,1,1))#
par(oma=c(4,5,2,1))#
for(i in 1:3){#
plot( traitfit.4b[[i]]$rfitplnt~traitfit.4b[[i]]$rfitmicr,col=rgb(0,0,0), pch=1,xlim=c(0,0.0023),ylim=c(0,0.0023),xaxt="n",cex=0.5)#
	points( traitfit.4bff[[i]]$rfitplnt~traitfit.4bff[[i]]$rfitmicr,col=rgb(0.5,0.5,0.5),pch=1 ,cex=0.5)#
	if(i==1){mtext("No link to microbe fitness",side=2,line=3.5)}#
# 	rhoD <- round(cor(traitfit.4b[[i]]$rfitplnt,traitfit.4b[[i]]$rfitmicr),digits=2)#
	rhoI <- round(cor(traitfit.4bff[[i]]$rfitplnt,traitfit.4bff[[i]]$rfitmicr),digits=2)#
# 	text(0.0018,y=0.0005, bquote(rho==.(rhoD) ))#
		#because there's no error here, this is actually perfectly correlated! the link is weaker than the error, but it can't be infinite, so...#
	text(0.0018,y=0.0002, bquote(rho==.(rhoI) ),col=rgb(0.25,0.25,0.25))#
}
for(i in 1:3){#
plot( traitfit.4f[[i]]$rfitplnt~traitfit.4f[[i]]$rfitmicr,col=rgb(0,0,0), pch=1,xlim=c(0,0.0023),ylim=c(0,0.0023),cex=0.5)#
	points( traitfit.4fff[[i]]$rfitplnt~traitfit.4fff[[i]]$rfitmicr,col=rgb(0.5,0.5,0.5),pch=1 ,cex=0.5)#
	if(i==1){mtext("Same optima",side=2,line=3.5)}#
	if(i==2){mtext("Relative fitness of microbe",side=1,line=2)}#
	rhoD <- round(cor(traitfit.4f[[i]]$rfitplnt,traitfit.4f[[i]]$rfitmicr),digits=2)#
	rhoI <- round(cor(traitfit.4fff[[i]]$rfitplnt,traitfit.4fff[[i]]$rfitmicr),digits=2)#
	text(0.0018,y=0.0005, bquote(rho==.(rhoD) ))#
	text(0.0018,y=0.0002, bquote(rho==.(rhoI) ),col=rgb(0.25,0.25,0.25))#
# 	legend(0,0.0018,c("Direct only","With +FF"),pch=c(16,21),col=rgb(0,0,0),pt.bg=rgb(0.5,0.5,0.5),pt.cex=c(2.5,1),bty="n")#
	if(i==3){legend(0,0.0024,c("Direct only","With +FF"),pch=16,col=c(rgb(0,0,0),rgb(0.5,0.5,0.5)),bty="n")}#
}
dev.off()
plot( traitfit.4f[[i]]$rfitplnt~traitfit.4f[[i]]$rfitmicr,col=rgb(0,0,0), pch=1,xlim=c(0,0.023),ylim=c(0,0.023),cex=0.5)#
	points( traitfit.4fff[[i]]$rfitplnt~traitfit.4fff[[i]]$rfitmicr,col=rgb(0.5,0.5,0.5),pch=1 ,cex=0.5)#
	if(i==1){mtext("Same optima",side=2,line=3.5)}#
	if(i==2){mtext("Relative fitness of microbe",side=1,line=2)}#
	rhoD <- round(cor(traitfit.4f[[i]]$rfitplnt,traitfit.4f[[i]]$rfitmicr),digits=2)#
	rhoI <- round(cor(traitfit.4fff[[i]]$rfitplnt,traitfit.4fff[[i]]$rfitmicr),digits=2)#
	text(0.0018,y=0.0005, bquote(rho==.(rhoD) ))#
	text(0.0018,y=0.0002, bquote(rho==.(rhoI) ),col=rgb(0.4,0.4,0.4))#
# 	legend(0,0.0018,c("Direct only","With +FF"),pch=c(16,21),col=rgb(0,0,0),pt.bg=rgb(0.5,0.5,0.5),pt.cex=c(2.5,1),bty="n")#
	if(i==3){legend(0,0.0024,c("Direct only","With +FF"),pch=16,col=c(rgb(0,0,0),rgb(0.5,0.5,0.5)),bty="n")}
plot( traitfit.4f[[i]]$rfitplnt~traitfit.4f[[i]]$rfitmicr,col=rgb(0,0,0), pch=1,xlim=c(0,0.023),ylim=c(0,0.023),cex=1)#
	points( traitfit.4fff[[i]]$rfitplnt~traitfit.4fff[[i]]$rfitmicr,col=rgb(0.5,0.5,0.5),pch=1 ,cex=1)#
	if(i==1){mtext("Same optima",side=2,line=3.5)}#
	if(i==2){mtext("Relative fitness of microbe",side=1,line=2)}#
	rhoD <- round(cor(traitfit.4f[[i]]$rfitplnt,traitfit.4f[[i]]$rfitmicr),digits=2)#
	rhoI <- round(cor(traitfit.4fff[[i]]$rfitplnt,traitfit.4fff[[i]]$rfitmicr),digits=2)#
	text(0.0018,y=0.0005, bquote(rho==.(rhoD) ))#
	text(0.0018,y=0.0002, bquote(rho==.(rhoI) ),col=rgb(0.4,0.4,0.4))#
# 	legend(0,0.0018,c("Direct only","With +FF"),pch=c(16,21),col=rgb(0,0,0),pt.bg=rgb(0.5,0.5,0.5),pt.cex=c(2.5,1),bty="n")#
	if(i==3){legend(0,0.0024,c("Direct only","With +FF"),pch=16,col=c(rgb(0,0,0),rgb(0.5,0.5,0.5)),bty="n")}
plot( traitfit.4f[[i]]$rfitplnt~traitfit.4f[[i]]$rfitmicr,col=rgb(0,0,0), pch=3,xlim=c(0,0.023),ylim=c(0,0.023),cex=0.5)#
	points( traitfit.4fff[[i]]$rfitplnt~traitfit.4fff[[i]]$rfitmicr,col=rgb(0.5,0.5,0.5),pch=6 ,cex=0.5)#
	if(i==1){mtext("Same optima",side=2,line=3.5)}#
	if(i==2){mtext("Relative fitness of microbe",side=1,line=2)}#
	rhoD <- round(cor(traitfit.4f[[i]]$rfitplnt,traitfit.4f[[i]]$rfitmicr),digits=2)#
	rhoI <- round(cor(traitfit.4fff[[i]]$rfitplnt,traitfit.4fff[[i]]$rfitmicr),digits=2)#
	text(0.0018,y=0.0005, bquote(rho==.(rhoD) ))#
	text(0.0018,y=0.0002, bquote(rho==.(rhoI) ),col=rgb(0.4,0.4,0.4))#
# 	legend(0,0.0018,c("Direct only","With +FF"),pch=c(16,21),col=rgb(0,0,0),pt.bg=rgb(0.5,0.5,0.5),pt.cex=c(2.5,1),bty="n")#
	if(i==3){legend(0,0.0024,c("Direct only","With +FF"),pch=16,col=c(rgb(0,0,0),rgb(0.5,0.5,0.5)),bty="n")}#
}
plot( traitfit.4f[[i]]$rfitplnt~traitfit.4f[[i]]$rfitmicr,col=rgb(0,0,0), pch=2,xlim=c(0,0.023),ylim=c(0,0.023),cex=1)#
	points( traitfit.4fff[[i]]$rfitplnt~traitfit.4fff[[i]]$rfitmicr,col=rgb(0.5,0.5,0.5),pch=6 ,cex=1)#
	if(i==1){mtext("Same optima",side=2,line=3.5)}#
	if(i==2){mtext("Relative fitness of microbe",side=1,line=2)}#
	rhoD <- round(cor(traitfit.4f[[i]]$rfitplnt,traitfit.4f[[i]]$rfitmicr),digits=2)#
	rhoI <- round(cor(traitfit.4fff[[i]]$rfitplnt,traitfit.4fff[[i]]$rfitmicr),digits=2)#
	text(0.0018,y=0.0005, bquote(rho==.(rhoD) ))#
	text(0.0018,y=0.0002, bquote(rho==.(rhoI) ),col=rgb(0.4,0.4,0.4))#
# 	legend(0,0.0018,c("Direct only","With +FF"),pch=c(16,21),col=rgb(0,0,0),pt.bg=rgb(0.5,0.5,0.5),pt.cex=c(2.5,1),bty="n")#
	if(i==3){legend(0,0.0024,c("Direct only","With +FF"),pch=16,col=c(rgb(0,0,0),rgb(0.5,0.5,0.5)),bty="n")}#
}
plot( traitfit.4f[[i]]$rfitplnt~traitfit.4f[[i]]$rfitmicr,col=rgb(0,0,0,alpha=0.5), bg=rgb(0,0,0,alpha=0.1), pch=24,xlim=c(0,0.023),ylim=c(0,0.023),cex=1)#
	points( traitfit.4fff[[i]]$rfitplnt~traitfit.4fff[[i]]$rfitmicr,col=rgb(0.5,0.5,0.5,alpha=0.5),col=rgb(0.5,0.5,0.5,alpha=0.1),pch=25 ,cex=1)#
	if(i==1){mtext("Same optima",side=2,line=3.5)}#
	if(i==2){mtext("Relative fitness of microbe",side=1,line=2)}#
	rhoD <- round(cor(traitfit.4f[[i]]$rfitplnt,traitfit.4f[[i]]$rfitmicr),digits=2)#
	rhoI <- round(cor(traitfit.4fff[[i]]$rfitplnt,traitfit.4fff[[i]]$rfitmicr),digits=2)#
	text(0.0018,y=0.0005, bquote(rho==.(rhoD) ))#
	text(0.0018,y=0.0002, bquote(rho==.(rhoI) ),col=rgb(0.4,0.4,0.4))#
# 	legend(0,0.0018,c("Direct only","With +FF"),pch=c(16,21),col=rgb(0,0,0),pt.bg=rgb(0.5,0.5,0.5),pt.cex=c(2.5,1),bty="n")#
	if(i==3){legend(0,0.0024,c("Direct only","With +FF"),pch=16,col=c(rgb(0,0,0),rgb(0.5,0.5,0.5)),bty="n")}
plot( traitfit.4f[[i]]$rfitplnt~traitfit.4f[[i]]$rfitmicr,col=rgb(0,0,0,alpha=0.5), bg=rgb(0,0,0,alpha=0.1), pch=24,xlim=c(0,0.023),ylim=c(0,0.023),cex=1)#
	points( traitfit.4fff[[i]]$rfitplnt~traitfit.4fff[[i]]$rfitmicr,col=rgb(0.5,0.5,0.5,alpha=0.5),bg=rgb(0.5,0.5,0.5,alpha=0.1),pch=25 ,cex=1)#
	if(i==1){mtext("Same optima",side=2,line=3.5)}#
	if(i==2){mtext("Relative fitness of microbe",side=1,line=2)}#
	rhoD <- round(cor(traitfit.4f[[i]]$rfitplnt,traitfit.4f[[i]]$rfitmicr),digits=2)#
	rhoI <- round(cor(traitfit.4fff[[i]]$rfitplnt,traitfit.4fff[[i]]$rfitmicr),digits=2)#
	text(0.0018,y=0.0005, bquote(rho==.(rhoD) ))#
	text(0.0018,y=0.0002, bquote(rho==.(rhoI) ),col=rgb(0.4,0.4,0.4))#
# 	legend(0,0.0018,c("Direct only","With +FF"),pch=c(16,21),col=rgb(0,0,0),pt.bg=rgb(0.5,0.5,0.5),pt.cex=c(2.5,1),bty="n")#
	if(i==3){legend(0,0.0024,c("Direct only","With +FF"),pch=16,col=c(rgb(0,0,0),rgb(0.5,0.5,0.5)),bty="n")}
plot( traitfit.4f[[i]]$rfitplnt~traitfit.4f[[i]]$rfitmicr,col=rgb(0,0,0,alpha=0.25), bg=rgb(0,0,0,alpha=0.1), pch=24,xlim=c(0,0.023),ylim=c(0,0.023),cex=1)#
	points( traitfit.4fff[[i]]$rfitplnt~traitfit.4fff[[i]]$rfitmicr,col=rgb(0.5,0.5,0.5,alpha=0.25),bg=rgb(0.5,0.5,0.5,alpha=0.1),pch=25 ,cex=1)#
	if(i==1){mtext("Same optima",side=2,line=3.5)}#
	if(i==2){mtext("Relative fitness of microbe",side=1,line=2)}#
	rhoD <- round(cor(traitfit.4f[[i]]$rfitplnt,traitfit.4f[[i]]$rfitmicr),digits=2)#
	rhoI <- round(cor(traitfit.4fff[[i]]$rfitplnt,traitfit.4fff[[i]]$rfitmicr),digits=2)#
	text(0.0018,y=0.0005, bquote(rho==.(rhoD) ))#
	text(0.0018,y=0.0002, bquote(rho==.(rhoI) ),col=rgb(0.4,0.4,0.4))#
# 	legend(0,0.0018,c("Direct only","With +FF"),pch=c(16,21),col=rgb(0,0,0),pt.bg=rgb(0.5,0.5,0.5),pt.cex=c(2.5,1),bty="n")#
	if(i==3){legend(0,0.0024,c("Direct only","With +FF"),pch=16,col=c(rgb(0,0,0),rgb(0.5,0.5,0.5)),bty="n")}
plot( traitfit.4f[[i]]$rfitplnt~traitfit.4f[[i]]$rfitmicr,col=rgb(0,0,0,alpha=0.25), bg=rgb(0,0,0,alpha=0.1), pch=24,xlim=c(0,0.023),ylim=c(0,0.023),cex=1.5)#
	points( traitfit.4fff[[i]]$rfitplnt~traitfit.4fff[[i]]$rfitmicr,col=rgb(0.5,0.5,0.5,alpha=0.25),bg=rgb(0.5,0.5,0.5,alpha=0.1),pch=25 ,cex=1.5)#
	if(i==1){mtext("Same optima",side=2,line=3.5)}#
	if(i==2){mtext("Relative fitness of microbe",side=1,line=2)}#
	rhoD <- round(cor(traitfit.4f[[i]]$rfitplnt,traitfit.4f[[i]]$rfitmicr),digits=2)#
	rhoI <- round(cor(traitfit.4fff[[i]]$rfitplnt,traitfit.4fff[[i]]$rfitmicr),digits=2)#
	text(0.0018,y=0.0005, bquote(rho==.(rhoD) ))#
	text(0.0018,y=0.0002, bquote(rho==.(rhoI) ),col=rgb(0.4,0.4,0.4))#
# 	legend(0,0.0018,c("Direct only","With +FF"),pch=c(16,21),col=rgb(0,0,0),pt.bg=rgb(0.5,0.5,0.5),pt.cex=c(2.5,1),bty="n")#
	if(i==3){legend(0,0.0024,c("Direct only","With +FF"),pch=16,col=c(rgb(0,0,0),rgb(0.5,0.5,0.5)),bty="n")}
plot( traitfit.4f[[i]]$rfitplnt~traitfit.4f[[i]]$rfitmicr,col=rgb(0,0,0,alpha=0.5), bg=rgb(0,0,0,alpha=0.1), pch=24,xlim=c(0,0.023),ylim=c(0,0.023),cex=1.5)#
	points( traitfit.4fff[[i]]$rfitplnt~traitfit.4fff[[i]]$rfitmicr,col=rgb(0.5,0.5,0.5,alpha=0.5),bg=rgb(0.5,0.5,0.5,alpha=0.1),pch=25 ,cex=1.5)#
	if(i==1){mtext("Same optima",side=2,line=3.5)}#
	if(i==2){mtext("Relative fitness of microbe",side=1,line=2)}#
	rhoD <- round(cor(traitfit.4f[[i]]$rfitplnt,traitfit.4f[[i]]$rfitmicr),digits=2)#
	rhoI <- round(cor(traitfit.4fff[[i]]$rfitplnt,traitfit.4fff[[i]]$rfitmicr),digits=2)#
	text(0.0018,y=0.0005, bquote(rho==.(rhoD) ))#
	text(0.0018,y=0.0002, bquote(rho==.(rhoI) ),col=rgb(0.4,0.4,0.4))#
# 	legend(0,0.0018,c("Direct only","With +FF"),pch=c(16,21),col=rgb(0,0,0),pt.bg=rgb(0.5,0.5,0.5),pt.cex=c(2.5,1),bty="n")#
	if(i==3){legend(0,0.0024,c("Direct only","With +FF"),pch=16,col=c(rgb(0,0,0),rgb(0.5,0.5,0.5)),bty="n")}
plot( traitfit.4f[[i]]$rfitplnt~traitfit.4f[[i]]$rfitmicr,col=rgb(0,0,0,alpha=0.5), bg=rgb(0,0,0,alpha=0.1), pch=24,xlim=c(0,0.023),ylim=c(0,0.023),cex=1.5)#
	points( traitfit.4fff[[i]]$rfitplnt~traitfit.4fff[[i]]$rfitmicr,col=rgb(0.5,0.5,0.5,alpha=0.5),bg=rgb(0.5,0.5,0.5,alpha=0.1),pch=25 ,cex=1.5)#
	if(i==1){mtext("Same optima",side=2,line=3.5)}#
	if(i==2){mtext("Relative fitness of microbe",side=1,line=2)}#
	rhoD <- round(cor(traitfit.4f[[i]]$rfitplnt,traitfit.4f[[i]]$rfitmicr),digits=2)#
	rhoI <- round(cor(traitfit.4fff[[i]]$rfitplnt,traitfit.4fff[[i]]$rfitmicr),digits=2)#
	text(0.0018,y=0.0005, bquote(rho==.(rhoD) ))#
	text(0.0018,y=0.0002, bquote(rho==.(rhoI) ),col=rgb(0.4,0.4,0.4))#
# 	legend(0,0.0018,c("Direct only","With +FF"),pch=c(16,21),col=rgb(0,0,0),pt.bg=rgb(0.5,0.5,0.5),pt.cex=c(2.5,1),bty="n")#
	if(i==3){legend(0,0.0024,c("Direct only","With +FF"),pch=c(24,25),col=c(rgb(0,0,0),rgb(0.5,0.5,0.5),alpha=0.5),bg=col=c(rgb(0,0,0),rgb(0.5,0.5,0.5),alpha=0.1),bty="n")}
plot( traitfit.4f[[i]]$rfitplnt~traitfit.4f[[i]]$rfitmicr,col=rgb(0,0,0,alpha=0.5), bg=rgb(0,0,0,alpha=0.1), pch=24,xlim=c(0,0.023),ylim=c(0,0.023),cex=1.5)#
	points( traitfit.4fff[[i]]$rfitplnt~traitfit.4fff[[i]]$rfitmicr,col=rgb(0.5,0.5,0.5,alpha=0.5),bg=rgb(0.5,0.5,0.5,alpha=0.1),pch=25 ,cex=1.5)#
	if(i==1){mtext("Same optima",side=2,line=3.5)}#
	if(i==2){mtext("Relative fitness of microbe",side=1,line=2)}#
	rhoD <- round(cor(traitfit.4f[[i]]$rfitplnt,traitfit.4f[[i]]$rfitmicr),digits=2)#
	rhoI <- round(cor(traitfit.4fff[[i]]$rfitplnt,traitfit.4fff[[i]]$rfitmicr),digits=2)#
	text(0.0018,y=0.0005, bquote(rho==.(rhoD) ))#
	text(0.0018,y=0.0002, bquote(rho==.(rhoI) ),col=rgb(0.4,0.4,0.4))#
# 	legend(0,0.0018,c("Direct only","With +FF"),pch=c(16,21),col=rgb(0,0,0),pt.bg=rgb(0.5,0.5,0.5),pt.cex=c(2.5,1),bty="n")#
	if(i==3){legend(0,0.0024,c("Direct only","With +FF"),pch=c(24,25),col=c(rgb(0,0,0,alpha=0.5),rgb(0.5,0.5,0.5,alpha=0.5)),bg=col=c(rgb(0,0,0,alpha=0.5),rgb(0.5,0.5,0.5,alpha=0.1)),bty="n")}
plot( traitfit.4f[[i]]$rfitplnt~traitfit.4f[[i]]$rfitmicr,col=rgb(0,0,0,alpha=0.5), bg=rgb(0,0,0,alpha=0.1), pch=24,xlim=c(0,0.023),ylim=c(0,0.023),cex=1.5)#
	points( traitfit.4fff[[i]]$rfitplnt~traitfit.4fff[[i]]$rfitmicr,col=rgb(0.5,0.5,0.5,alpha=0.5),bg=rgb(0.5,0.5,0.5,alpha=0.1),pch=25 ,cex=1.5)#
	if(i==1){mtext("Same optima",side=2,line=3.5)}#
	if(i==2){mtext("Relative fitness of microbe",side=1,line=2)}#
	rhoD <- round(cor(traitfit.4f[[i]]$rfitplnt,traitfit.4f[[i]]$rfitmicr),digits=2)#
	rhoI <- round(cor(traitfit.4fff[[i]]$rfitplnt,traitfit.4fff[[i]]$rfitmicr),digits=2)#
	text(0.0018,y=0.0005, bquote(rho==.(rhoD) ))#
	text(0.0018,y=0.0002, bquote(rho==.(rhoI) ),col=rgb(0.4,0.4,0.4))#
# 	legend(0,0.0018,c("Direct only","With +FF"),pch=c(16,21),col=rgb(0,0,0),pt.bg=rgb(0.5,0.5,0.5),pt.cex=c(2.5,1),bty="n")#
	if(i==3){legend(0,0.0024,c("Direct only","With +FF"),pch=c(24,25),col=c(rgb(0,0,0,alpha=0.5),rgb(0.5,0.5,0.5,alpha=0.5)),bg=c(rgb(0,0,0,alpha=0.5),rgb(0.5,0.5,0.5,alpha=0.1)),bty="n")}#
#
# plot( trait.b$rfitplnt~trait.b$rfitmicr,col=rgb(0,0,0),pch=1 ,xlim=c(0,0.015) ,ylim=c(0,0.015),xaxt="n",yaxt="n",cex=0.5)
plot( traitfit.4f[[i]]$rfitplnt~traitfit.4f[[i]]$rfitmicr,col=rgb(0,0,0,alpha=0.25), bg=rgb(0,0,0,alpha=0.1), pch=21,xlim=c(0,0.023),ylim=c(0,0.023),cex=2.5)#
	points( traitfit.4fff[[i]]$rfitplnt~traitfit.4fff[[i]]$rfitmicr,col=rgb(0.5,0.5,0.5,alpha=0.75),bg=rgb(0.5,0.5,0.5,alpha=0.1),pch=16 ,cex=1.5)#
	if(i==1){mtext("Same optima",side=2,line=3.5)}#
	if(i==2){mtext("Relative fitness of microbe",side=1,line=2)}#
	rhoD <- round(cor(traitfit.4f[[i]]$rfitplnt,traitfit.4f[[i]]$rfitmicr),digits=2)#
	rhoI <- round(cor(traitfit.4fff[[i]]$rfitplnt,traitfit.4fff[[i]]$rfitmicr),digits=2)#
	text(0.0018,y=0.0005, bquote(rho==.(rhoD) ))#
	text(0.0018,y=0.0002, bquote(rho==.(rhoI) ),col=rgb(0.4,0.4,0.4))#
# 	legend(0,0.0018,c("Direct only","With +FF"),pch=c(16,21),col=rgb(0,0,0),pt.bg=rgb(0.5,0.5,0.5),pt.cex=c(2.5,1),bty="n")#
	if(i==3){legend(0,0.0024,c("Direct only","With +FF"),pch=c(24,25),col=c(rgb(0,0,0,alpha=0.5),rgb(0.5,0.5,0.5,alpha=0.5)),bg=c(rgb(0,0,0,alpha=0.5),rgb(0.5,0.5,0.5,alpha=0.1)),bty="n")}
plot( traitfit.4f[[i]]$rfitplnt~traitfit.4f[[i]]$rfitmicr,col=rgb(0,0,0,alpha=0.25), bg=rgb(0,0,0,alpha=0.1), pch=1,xlim=c(0,0.023),ylim=c(0,0.023),cex=2.5)#
	points( traitfit.4fff[[i]]$rfitplnt~traitfit.4fff[[i]]$rfitmicr,col=rgb(0.5,0.5,0.5,alpha=0.75),bg=rgb(0.5,0.5,0.5,alpha=0.1),pch=16 ,cex=1.5)#
	if(i==1){mtext("Same optima",side=2,line=3.5)}#
	if(i==2){mtext("Relative fitness of microbe",side=1,line=2)}#
	rhoD <- round(cor(traitfit.4f[[i]]$rfitplnt,traitfit.4f[[i]]$rfitmicr),digits=2)#
	rhoI <- round(cor(traitfit.4fff[[i]]$rfitplnt,traitfit.4fff[[i]]$rfitmicr),digits=2)#
	text(0.0018,y=0.0005, bquote(rho==.(rhoD) ))#
	text(0.0018,y=0.0002, bquote(rho==.(rhoI) ),col=rgb(0.4,0.4,0.4))#
# 	legend(0,0.0018,c("Direct only","With +FF"),pch=c(16,21),col=rgb(0,0,0),pt.bg=rgb(0.5,0.5,0.5),pt.cex=c(2.5,1),bty="n")#
	if(i==3){legend(0,0.0024,c("Direct only","With +FF"),pch=c(24,25),col=c(rgb(0,0,0,alpha=0.5),rgb(0.5,0.5,0.5,alpha=0.5)),bg=c(rgb(0,0,0,alpha=0.5),rgb(0.5,0.5,0.5,alpha=0.1)),bty="n")}
plot( traitfit.4f[[i]]$rfitplnt~traitfit.4f[[i]]$rfitmicr,col=rgb(0,0,0,alpha=1), bg=rgb(0,0,0,alpha=0.1), pch=1,xlim=c(0,0.023),ylim=c(0,0.023),cex=2.5)#
	points( traitfit.4fff[[i]]$rfitplnt~traitfit.4fff[[i]]$rfitmicr,col=rgb(0.5,0.5,0.5,alpha=1),bg=rgb(0.5,0.5,0.5,alpha=0.1),pch=1 ,cex=1.5)#
	if(i==1){mtext("Same optima",side=2,line=3.5)}#
	if(i==2){mtext("Relative fitness of microbe",side=1,line=2)}#
	rhoD <- round(cor(traitfit.4f[[i]]$rfitplnt,traitfit.4f[[i]]$rfitmicr),digits=2)#
	rhoI <- round(cor(traitfit.4fff[[i]]$rfitplnt,traitfit.4fff[[i]]$rfitmicr),digits=2)#
	text(0.0018,y=0.0005, bquote(rho==.(rhoD) ))#
	text(0.0018,y=0.0002, bquote(rho==.(rhoI) ),col=rgb(0.4,0.4,0.4))#
# 	legend(0,0.0018,c("Direct only","With +FF"),pch=c(16,21),col=rgb(0,0,0),pt.bg=rgb(0.5,0.5,0.5),pt.cex=c(2.5,1),bty="n")#
	if(i==3){legend(0,0.0024,c("Direct only","With +FF"),pch=c(24,25),col=c(rgb(0,0,0,alpha=0.5),rgb(0.5,0.5,0.5,alpha=0.5)),bg=c(rgb(0,0,0,alpha=0.5),rgb(0.5,0.5,0.5,alpha=0.1)),bty="n")}
xlims <- if(i==1){c(c(0,3.5))} else {c(1.4,3.6)}#
 plot( traitfit.4b[[i]]$rfitplnt~traitfit.4b[[i]]$traitexp,col=rgb(0,0.5,0,alpha=0.25), pch=16,xlim=xlims,ylim=c(0,0.0023),xaxt="n",cex=2.5)#
	points( traitfit.4b[[i]]$rfitmicr~traitfit.4b[[i]]$traitexp,col=rgb(0.5,0,0.5,alpha=0.5),pch=16 ,cex=2)#
	points( traitfit.4bff[[i]]$rfitplnt~traitfit.4bff[[i]]$traitexp,bg=rgb(0,0.5,0,alpha=1),col=rgb(0,0,0),pch=21 ,cex=1.5)#
	points( traitfit.4bff[[i]]$rfitmicr~traitfit.4bff[[i]]$traitexp,bg=rgb(0.5,0,0.5,alpha=1),col=rgb(0,0,0),pch=21 ,cex=1)#
	if(i==1){mtext("Relative fitness",side=2,line=2)}#
	if(i==1){mtext("Microbe link none/indirect",side=2,line=3.5)}#
	mtext(paste("Generation ",genvec[[i]],sep=""),side=3,line=1.5)#
	abline(v=3,col=rgb(0,0.5,0,alpha=0.5),lwd=5)
xlims <- if(i==1){c(c(0,3.5))} else {c(1.4,3.6)}#
 plot( traitfit.4b[[i]]$rfitplnt~traitfit.4b[[i]]$traitexp,col=rgb(0,0.5,0,alpha=0.25), pch=16,xlim=xlims,ylim=c(0,0.023),xaxt="n",cex=2.5)#
	points( traitfit.4b[[i]]$rfitmicr~traitfit.4b[[i]]$traitexp,col=rgb(0.5,0,0.5,alpha=0.5),pch=16 ,cex=2)#
	points( traitfit.4bff[[i]]$rfitplnt~traitfit.4bff[[i]]$traitexp,bg=rgb(0,0.5,0,alpha=1),col=rgb(0,0,0),pch=21 ,cex=1.5)#
	points( traitfit.4bff[[i]]$rfitmicr~traitfit.4bff[[i]]$traitexp,bg=rgb(0.5,0,0.5,alpha=1),col=rgb(0,0,0),pch=21 ,cex=1)#
	if(i==1){mtext("Relative fitness",side=2,line=2)}#
	if(i==1){mtext("Microbe link none/indirect",side=2,line=3.5)}#
	mtext(paste("Generation ",genvec[[i]],sep=""),side=3,line=1.5)#
	abline(v=3,col=rgb(0,0.5,0,alpha=0.5),lwd=5)
for(i in 1:3){#
 xlims <- if(i==1){c(c(0,3.5))} else {c(1.4,3.6)}#
 plot( traitfit.4f[[i]]$rfitmicr~traitfit.4f[[i]]$traitexp,col=rgb(0,0.5,0,alpha=0.25), pch=16,xlim=xlims,ylim=c(0,0.023),xaxt="n",cex=2.5)#
	points( traitfit.4f[[i]]$rfitplnt~traitfit.4f[[i]]$traitexp,col=rgb(0.5,0,0.5,alpha=0.25),pch=16 ,cex=2)#
	points( traitfit.4fff[[i]]$rfitmicr~traitfit.4fff[[i]]$traitexp,bg=rgb(0,0.5,0,alpha=1),col=rgb(0,0,0),pch=21 ,cex=1.5)#
	points( traitfit.4fff[[i]]$rfitplnt~traitfit.4fff[[i]]$traitexp,bg=rgb(0.5,0,0.5,alpha=1),col=rgb(0,0,0),pch=21 ,cex=1)#
	if(i==1){mtext("Relative fitness",side=2,line=2)}#
	if(i==1){mtext("Different optima",side=2,line=3.5)}#
	abline(v=3,col=rgb(0,0.5,0,alpha=0.5),lwd=5)#
	abline(v=2,col=rgb(0.5,0,0.5,alpha=0.5),lwd=5)#
}
par(mfrow=c(3,3))#
par(mar=c(1,1,1,1))#
par(oma=c(4,5,2,1))#
for(i in 1:3){#
 xlims <- if(i==1){c(c(0,3.5))} else {c(1.4,3.6)}#
 plot( traitfit.4b[[i]]$rfitplnt~traitfit.4b[[i]]$traitexp,col=rgb(0,0.5,0,alpha=0.25), pch=16,xlim=xlims,ylim=c(0,0.0023),xaxt="n",cex=2.5)#
	points( traitfit.4b[[i]]$rfitmicr~traitfit.4b[[i]]$traitexp,col=rgb(0.5,0,0.5,alpha=0.25),pch=16 ,cex=2)#
	points( traitfit.4bff[[i]]$rfitplnt~traitfit.4bff[[i]]$traitexp,bg=rgb(0,0.5,0,alpha=1),col=rgb(0,0,0),pch=21 ,cex=1.5)#
	points( traitfit.4bff[[i]]$rfitmicr~traitfit.4bff[[i]]$traitexp,bg=rgb(0.5,0,0.5,alpha=1),col=rgb(0,0,0),pch=21 ,cex=1)#
	if(i==1){mtext("Relative fitness",side=2,line=2)}#
	if(i==1){mtext("Microbe link none/indirect",side=2,line=3.5)}#
	mtext(paste("Generation ",genvec[[i]],sep=""),side=3,line=1.5)#
	abline(v=3,col=rgb(0,0.5,0,alpha=0.5),lwd=5)#
}
for(i in 1:3){#
 xlims <- if(i==1){c(c(0,3.5))} else {c(1.4,3.6)}#
 plot( traitfit.4f[[i]]$rfitmicr~traitfit.4f[[i]]$traitexp,col=rgb(0,0.5,0,alpha=0.25), pch=16,xlim=xlims,ylim=c(0,0.0023),xaxt="n",cex=2.5)#
	points( traitfit.4f[[i]]$rfitplnt~traitfit.4f[[i]]$traitexp,col=rgb(0.5,0,0.5,alpha=0.25),pch=16 ,cex=2)#
	points( traitfit.4fff[[i]]$rfitmicr~traitfit.4fff[[i]]$traitexp,bg=rgb(0,0.5,0,alpha=1),col=rgb(0,0,0),pch=21 ,cex=1.5)#
	points( traitfit.4fff[[i]]$rfitplnt~traitfit.4fff[[i]]$traitexp,bg=rgb(0.5,0,0.5,alpha=1),col=rgb(0,0,0),pch=21 ,cex=1)#
	if(i==1){mtext("Relative fitness",side=2,line=2)}#
	if(i==1){mtext("Different optima",side=2,line=3.5)}#
	abline(v=3,col=rgb(0,0.5,0,alpha=0.5),lwd=5)#
	abline(v=2,col=rgb(0.5,0,0.5,alpha=0.5),lwd=5)#
}#
legend(0,0.0028,c("Host","Microbe"),fill=c(rgb(0,0.5,0),rgb(0.5,0,0.5)),bty="n")#
legend(0,0.0020,c("Direct only","With +FF"),pch=c(16,21),col=rgb(0,0,0),pt.bg=rgb(0.5,0.5,0.5),pt.cex=c(2.5,1),bty="n")
legend(1.4,0.0028,c("Host","Microbe"),fill=c(rgb(0,0.5,0),rgb(0.5,0,0.5)),bty="n")#
legend(1.4,0.0020,c("Direct only","With +FF"),pch=c(16,21),col=rgb(0,0,0),pt.bg=rgb(0.5,0.5,0.5),pt.cex=c(2.5,1),bty="n")
pdf("~/tmp.pdf",height=6,width=7)#
par(mfrow=c(3,3))#
par(mar=c(1,1,1,1))#
par(oma=c(4,5,2,1))#
for(i in 1:3){#
 xlims <- if(i==1){c(c(0,3.5))} else {c(1.4,3.6)}#
 plot( traitfit.4b[[i]]$rfitplnt~traitfit.4b[[i]]$traitexp,col=rgb(0,0.5,0,alpha=0.25), pch=16,xlim=xlims,ylim=c(0,0.0023),xaxt="n",cex=2.5)#
	points( traitfit.4b[[i]]$rfitmicr~traitfit.4b[[i]]$traitexp,col=rgb(0.5,0,0.5,alpha=0.25),pch=16 ,cex=2)#
	points( traitfit.4bff[[i]]$rfitplnt~traitfit.4bff[[i]]$traitexp,bg=rgb(0,0.5,0,alpha=1),col=rgb(0,0,0),pch=21 ,cex=1.5)#
	points( traitfit.4bff[[i]]$rfitmicr~traitfit.4bff[[i]]$traitexp,bg=rgb(0.5,0,0.5,alpha=1),col=rgb(0,0,0),pch=21 ,cex=1)#
	if(i==1){mtext("Relative fitness",side=2,line=2)}#
	if(i==1){mtext("Microbe link none/indirect",side=2,line=3.5)}#
	mtext(paste("Generation ",genvec[[i]],sep=""),side=3,line=1.5)#
	abline(v=3,col=rgb(0,0.5,0,alpha=0.5),lwd=5)#
}
for(i in 1:3){#
 xlims <- if(i==1){c(c(0,3.5))} else {c(1.4,3.6)}#
 plot( traitfit.4f[[i]]$rfitmicr~traitfit.4f[[i]]$traitexp,col=rgb(0,0.5,0,alpha=0.25), pch=16,xlim=xlims,ylim=c(0,0.0023),xaxt="n",cex=2.5)#
	points( traitfit.4f[[i]]$rfitplnt~traitfit.4f[[i]]$traitexp,col=rgb(0.5,0,0.5,alpha=0.25),pch=16 ,cex=2)#
	points( traitfit.4fff[[i]]$rfitmicr~traitfit.4fff[[i]]$traitexp,bg=rgb(0,0.5,0,alpha=1),col=rgb(0,0,0),pch=21 ,cex=1.5)#
	points( traitfit.4fff[[i]]$rfitplnt~traitfit.4fff[[i]]$traitexp,bg=rgb(0.5,0,0.5,alpha=1),col=rgb(0,0,0),pch=21 ,cex=1)#
	if(i==1){mtext("Relative fitness",side=2,line=2)}#
	if(i==1){mtext("Different optima",side=2,line=3.5)}#
	abline(v=3,col=rgb(0,0.5,0,alpha=0.5),lwd=5)#
	abline(v=2,col=rgb(0.5,0,0.5,alpha=0.5),lwd=5)#
}#
legend(1.4,0.0028,c("Host","Microbe"),fill=c(rgb(0,0.5,0),rgb(0.5,0,0.5)),bty="n")#
legend(1.4,0.0020,c("Direct only","With +FF"),pch=c(16,21),col=rgb(0,0,0),pt.bg=rgb(0.5,0.5,0.5),pt.cex=c(2.5,1),bty="n")#
 dev.off()
pdf("~/tmp.pdf",height=6,width=7)#
par(mfrow=c(3,3))#
par(mar=c(1,1,1,1))#
par(oma=c(4,5,2,1))#
for(i in 1:3){#
 xlims <- if(i==1){c(c(0,3.5))} else {c(1.4,3.6)}#
 plot( traitfit.4b[[i]]$rfitplnt~traitfit.4b[[i]]$traitexp,col=rgb(0,0.5,0,alpha=0.25), pch=16,xlim=xlims,ylim=c(0,0.0023),xaxt="n",cex=2.5)#
	points( traitfit.4b[[i]]$rfitmicr~traitfit.4b[[i]]$traitexp,col=rgb(0.5,0,0.5,alpha=0.25),pch=16 ,cex=2)#
	points( traitfit.4bff[[i]]$rfitplnt~traitfit.4bff[[i]]$traitexp,bg=rgb(0,0.5,0,alpha=1),col=rgb(0,0,0),pch=21 ,cex=1.5)#
	points( traitfit.4bff[[i]]$rfitmicr~traitfit.4bff[[i]]$traitexp,bg=rgb(0.5,0,0.5,alpha=1),col=rgb(0,0,0),pch=21 ,cex=1)#
	if(i==1){mtext("Relative fitness",side=2,line=2)}#
	if(i==1){mtext("Microbe link none/indirect",side=2,line=3.5)}#
	mtext(paste("Generation ",genvec[[i]],sep=""),side=3,line=1.5)#
	abline(v=3,col=rgb(0,0.5,0,alpha=0.5),lwd=5)#
}	#
legend(1.4,0.0024,c("Host","Microbe"),fill=c(rgb(0,0.5,0),rgb(0.5,0,0.5)),bty="n")#
legend(1.4,0.0018,c("Direct only","With +FF"),pch=c(16,21),col=rgb(0,0,0),pt.bg=rgb(0.5,0.5,0.5),pt.cex=c(2.5,1),bty="n")
for(i in 1:3){#
 xlims <- if(i==1){c(c(0,3.5))} else {c(1.4,3.6)}#
 plot( traitfit.4f[[i]]$rfitmicr~traitfit.4f[[i]]$traitexp,col=rgb(0,0.5,0,alpha=0.25), pch=16,xlim=xlims,ylim=c(0,0.0023),xaxt="n",cex=2.5)#
	points( traitfit.4f[[i]]$rfitplnt~traitfit.4f[[i]]$traitexp,col=rgb(0.5,0,0.5,alpha=0.25),pch=16 ,cex=2)#
	points( traitfit.4fff[[i]]$rfitmicr~traitfit.4fff[[i]]$traitexp,bg=rgb(0,0.5,0,alpha=1),col=rgb(0,0,0),pch=21 ,cex=1.5)#
	points( traitfit.4fff[[i]]$rfitplnt~traitfit.4fff[[i]]$traitexp,bg=rgb(0.5,0,0.5,alpha=1),col=rgb(0,0,0),pch=21 ,cex=1)#
	if(i==1){mtext("Relative fitness",side=2,line=2)}#
	if(i==1){mtext("Different optima",side=2,line=3.5)}#
	abline(v=3,col=rgb(0,0.5,0,alpha=0.5),lwd=5)#
	abline(v=2,col=rgb(0.5,0,0.5,alpha=0.5),lwd=5)#
}#
 dev.off()
pdf("~/tmp.pdf",height=6,width=7)#
par(mfrow=c(3,3))#
par(mar=c(1,1,1,1))#
par(oma=c(4,5,2,1))#
for(i in 1:3){#
 xlims <- if(i==1){c(c(0,3.5))} else {c(1.4,3.6)}#
 plot( traitfit.4b[[i]]$rfitplnt~traitfit.4b[[i]]$traitexp,col=rgb(0,0.5,0,alpha=0.25), pch=16,xlim=xlims,ylim=c(0,0.0023),xaxt="n",cex=2.5)#
	points( traitfit.4b[[i]]$rfitmicr~traitfit.4b[[i]]$traitexp,col=rgb(0.5,0,0.5,alpha=0.25),pch=16 ,cex=2)#
	points( traitfit.4bff[[i]]$rfitplnt~traitfit.4bff[[i]]$traitexp,bg=rgb(0,0.5,0,alpha=1),col=rgb(0,0,0),pch=21 ,cex=1.5)#
	points( traitfit.4bff[[i]]$rfitmicr~traitfit.4bff[[i]]$traitexp,bg=rgb(0.5,0,0.5,alpha=1),col=rgb(0,0,0),pch=21 ,cex=1)#
	if(i==1){mtext("Relative fitness",side=2,line=2)}#
	if(i==1){mtext("Microbe link none/indirect",side=2,line=3.5)}#
	mtext(paste("Generation ",genvec[[i]],sep=""),side=3,line=1.5)#
	abline(v=3,col=rgb(0,0.5,0,alpha=0.5),lwd=5)#
}	#
legend(1.3,0.0024,c("Host","Microbe"),fill=c(rgb(0,0.5,0),rgb(0.5,0,0.5)),bty="n")#
legend(1.4,0.0018,c("Direct only","With +FF"),pch=c(16,21),col=rgb(0,0,0),pt.bg=rgb(0.5,0.5,0.5),pt.cex=c(2.5,1),bty="n")
for(i in 1:3){#
 xlims <- if(i==1){c(c(0,3.5))} else {c(1.4,3.6)}#
 plot( traitfit.4f[[i]]$rfitmicr~traitfit.4f[[i]]$traitexp,col=rgb(0,0.5,0,alpha=0.25), pch=16,xlim=xlims,ylim=c(0,0.0023),xaxt="n",cex=2.5)#
	points( traitfit.4f[[i]]$rfitplnt~traitfit.4f[[i]]$traitexp,col=rgb(0.5,0,0.5,alpha=0.25),pch=16 ,cex=2)#
	points( traitfit.4fff[[i]]$rfitmicr~traitfit.4fff[[i]]$traitexp,bg=rgb(0,0.5,0,alpha=1),col=rgb(0,0,0),pch=21 ,cex=1.5)#
	points( traitfit.4fff[[i]]$rfitplnt~traitfit.4fff[[i]]$traitexp,bg=rgb(0.5,0,0.5,alpha=1),col=rgb(0,0,0),pch=21 ,cex=1)#
	if(i==1){mtext("Relative fitness",side=2,line=2)}#
	if(i==1){mtext("Different optima",side=2,line=3.5)}#
	abline(v=3,col=rgb(0,0.5,0,alpha=0.5),lwd=5)#
	abline(v=2,col=rgb(0.5,0,0.5,alpha=0.5),lwd=5)#
}#
 dev.off()
pdf("~/tmp.pdf",height=6,width=7)#
par(mfrow=c(3,3))#
par(mar=c(1,1,1,1))#
par(oma=c(4,5,2,1))#
for(i in 1:3){#
 xlims <- if(i==1){c(c(0,3.5))} else {c(1.4,3.6)}#
 plot( traitfit.4b[[i]]$rfitplnt~traitfit.4b[[i]]$traitexp,col=rgb(0,0.5,0,alpha=0.25), pch=16,xlim=xlims,ylim=c(0,0.0023),xaxt="n",cex=2.5)#
	points( traitfit.4b[[i]]$rfitmicr~traitfit.4b[[i]]$traitexp,col=rgb(0.5,0,0.5,alpha=0.25),pch=16 ,cex=2)#
	points( traitfit.4bff[[i]]$rfitplnt~traitfit.4bff[[i]]$traitexp,bg=rgb(0,0.5,0,alpha=1),col=rgb(0,0,0),pch=21 ,cex=1.5)#
	points( traitfit.4bff[[i]]$rfitmicr~traitfit.4bff[[i]]$traitexp,bg=rgb(0.5,0,0.5,alpha=1),col=rgb(0,0,0),pch=21 ,cex=1)#
	if(i==1){mtext("Relative fitness",side=2,line=2)}#
	if(i==1){mtext("Microbe link none/indirect",side=2,line=3.5)}#
	mtext(paste("Generation ",genvec[[i]],sep=""),side=3,line=1.5)#
	abline(v=3,col=rgb(0,0.5,0,alpha=0.5),lwd=5)#
}	#
legend(1.3,0.0024,c("Host","Microbe"),fill=c(rgb(0,0.5,0),rgb(0.5,0,0.5)),bty="n")#
legend(1.4,0.0018,c("Direct only","With +FF"),pch=c(16,21),col=rgb(0,0,0,alpha=0.75),pt.bg=rgb(0.5,0.5,0.5),pt.cex=c(2.5,1),bty="n")
for(i in 1:3){#
 xlims <- if(i==1){c(c(0,3.5))} else {c(1.4,3.6)}#
 plot( traitfit.4f[[i]]$rfitmicr~traitfit.4f[[i]]$traitexp,col=rgb(0,0.5,0,alpha=0.25), pch=16,xlim=xlims,ylim=c(0,0.0023),xaxt="n",cex=2.5)#
	points( traitfit.4f[[i]]$rfitplnt~traitfit.4f[[i]]$traitexp,col=rgb(0.5,0,0.5,alpha=0.25),pch=16 ,cex=2)#
	points( traitfit.4fff[[i]]$rfitmicr~traitfit.4fff[[i]]$traitexp,bg=rgb(0,0.5,0,alpha=1),col=rgb(0,0,0),pch=21 ,cex=1.5)#
	points( traitfit.4fff[[i]]$rfitplnt~traitfit.4fff[[i]]$traitexp,bg=rgb(0.5,0,0.5,alpha=1),col=rgb(0,0,0),pch=21 ,cex=1)#
	if(i==1){mtext("Relative fitness",side=2,line=2)}#
	if(i==1){mtext("Different optima",side=2,line=3.5)}#
	abline(v=3,col=rgb(0,0.5,0,alpha=0.5),lwd=5)#
	abline(v=2,col=rgb(0.5,0,0.5,alpha=0.5),lwd=5)#
}#
 dev.off()
addcols <- function(outfile, k=NULL){#
	outfile$known_pos <- sapply(outfile$rs, function(z) length(grep("c",z))==1)#
	outfile$known_neg <- !outfile$known_pos#
	if(is.null(k)){#
p <- findInterval(outfile$p_score,sort(outfile$p_score))/nrow(outfile)#
#  	p <- findInterval(outfile$beta,sort(outfile$beta))/nrow(outfile) #fewer total loci identified in both, regardless of how count. BUT makes the holo analysis more effective.#
#
	} else if(k==TRUE){#
		p <- outfile$p_score#
	}#
	outfile$p_used <- p #
	outfile$false_pos <- (p < 0.05 & outfile$known_pos == F)#
	outfile$true_pos <-  (p < 0.05 & outfile$known_pos == T)#
	outfile$true_neg <-  (p > 0.05 & outfile$known_pos == F)#
	outfile$false_neg <- (p > 0.05 & outfile$known_pos == T)#
#
	known_Ppos <- sapply(outfile$rs, function(z) length(grep("cP",z))==1)#
	known_Pn <- sapply(outfile$rs, function(z) length(grep("nP",z))==1)#
	known_Mpos <- sapply(outfile$rs, function(z) length(grep("cM",z))==1)#
	known_Mn <- sapply(outfile$rs, function(z) length(grep("nM",z))==1)#
	catsnp <- rep(NA,times=nrow(outfile))#
		if(any(known_Ppos)==TRUE){catsnp[known_Ppos] <- "Pcausal"}#
		if(any(known_Mpos)==TRUE){catsnp[known_Mpos] <- "Mcausal"}#
		if(any(known_Pn)==TRUE){catsnp[known_Pn] <- "Pneut"}#
		if(any(known_Mn)==TRUE){catsnp[known_Mn] <- "Mneut"}#
	outfile$catsnp <- catsnp#
	return(outfile)#
}#
#
summarizeSNPcalls <- function(outfilewcols){#
	startcol <- grep("false_pos",colnames(outfilewcols))#
	conttabprp <- matrix(#
		colSums(outfilewcols[,startcol:(startcol+3)]) /#
		rep(c(sum(outfilewcols$known_neg),sum(outfilewcols$known_pos)),times=2),  #
		#c(f+ t+ t- f- ) /  c(allneg, allpos, allneg,allpos)#
		byrow=T,ncol=2#
		)#
	conttab <- 	colSums(outfilewcols[,startcol:(startcol+3)])#
	possout <- c("MneutTRUE",  "McausalTRUE",   "MneutFALSE",    "McausalFALSE", "PneutTRUE",  "PcausalTRUE",   "PneutFALSE",    "PcausalFALSE")#
	cattots <- sapply(1:length(possout), function(o)  sum(paste(outfilewcols$catsnp,outfilewcols$p_used < 0.05,sep="")==possout[o] ) )#
	names(cattots)<-possout#
	catshouldbesums <- c(  rep( c(sum(cattots[c(1,3)]),sum(cattots[c(2,4)] )),times=2 )  ,  #
	rep( c(sum(cattots[c(5,7)]),sum(cattots[c(6,8)])),times=2 ) ) #
	catshouldbesums[is.na(catshouldbesums)] <- 0#
	return(list(conttabprp=conttabprp,conttab=conttab, cattots=cattots,catshouldbesums=catshouldbesums))#
}#
#
connectIG <- function(inputlociinfo, inputgwasinfo){#
	matchloci <- sapply(1:nrow(inputlociinfo), function(z) which(as.character(inputgwasinfo$rs) == as.character(inputlociinfo$locusname[z])))#
	is.inHABA <- sapply(1:length(matchloci), function(z) ifelse(length(matchloci[[z]])==1,matchloci[[z]],NA))#
	connectedinfo <- inputgwasinfo[is.inHABA,]#
	return(connectedinfo)#
}#
plantout4b <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/PLANTgemmaABO4b.assoc.txt",header=T,sep="\t")#
plantout4bff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/PLANTgemmaABO4bff.assoc.txt",header=T,sep="\t")#
plantout4a <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/PLANTgemmaABO4a.assoc.txt",header=T,sep="\t")#
plantout4aff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/PLANTgemmaABO4aff.assoc.txt",header=T,sep="\t")#
plantout4f <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/PLANTgemmaABO4f.assoc.txt",header=T,sep="\t")#
plantout4fff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/PLANTgemmaABO4fff.assoc.txt",header=T,sep="\t")#
microut4b <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/MICRgemmaABO4b.assoc.txt",header=T,sep="\t")#
microut4bff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/MICRgemmaABO4bff.assoc.txt",header=T,sep="\t")#
microut4a <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/MICRgemmaABO4a.assoc.txt",header=T,sep="\t")#
microut4aff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/MICRgemmaABO4aff.assoc.txt",header=T,sep="\t")#
microut4f <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/MICRgemmaABO4f.assoc.txt",header=T,sep="\t")#
microut4fff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/MICRgemmaABO4fff.assoc.txt",header=T,sep="\t")#
#
plantout4b <- addcols(plantout4b)#
plantout4bff <- addcols(plantout4bff)#
plantout4a <- addcols(plantout4a)#
plantout4aff <- addcols(plantout4aff)#
plantout4f <- addcols(plantout4f)#
plantout4fff <- addcols(plantout4fff)#
microut4b <- addcols(microut4b)#
microut4bff <- addcols(microut4bff)#
microut4a <- addcols(microut4a)#
microut4aff <- addcols(microut4aff)#
microut4f <- addcols(microut4f)#
microut4fff <- addcols(microut4fff)#
#
summarizep4b  <- summarizeSNPcalls(plantout4b)#
summarizep4bff  <- summarizeSNPcalls(plantout4bff)#
summarizep4a  <- summarizeSNPcalls(plantout4a)#
summarizep4aff  <- summarizeSNPcalls(plantout4aff)#
summarizep4f  <- summarizeSNPcalls(plantout4f)#
summarizep4fff  <- summarizeSNPcalls(plantout4fff)#
summarizem4b  <- summarizeSNPcalls(microut4b)#
summarizem4bff  <- summarizeSNPcalls(microut4bff)#
summarizem4a  <- summarizeSNPcalls(microut4a)#
summarizem4aff  <- summarizeSNPcalls(microut4aff)#
summarizem4f  <- summarizeSNPcalls(microut4f)#
summarizem4fff  <- summarizeSNPcalls(microut4fff)#
#
plantLinfo4b <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/plantlociABO4b.csv",header=T)#
plantLinfo4bff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/plantlociABO4bff.csv",header=T)#
plantLinfo4a <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/plantlociABO4a.csv",header=T)#
plantLinfo4aff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/plantlociABO4aff.csv",header=T)#
plantLinfo4f <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/plantlociABO4f.csv",header=T)#
plantLinfo4fff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/plantlociABO4fff.csv",header=T)#
micrLinfo4b <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/micrlociABO4b.csv",header=T)#
micrLinfo4bff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/micrlociABO4bff.csv",header=T)#
micrLinfo4a <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/micrlociABO4a.csv",header=T)#
micrLinfo4aff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/micrlociABO4aff.csv",header=T)#
micrLinfo4f <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/micrlociABO4f.csv",header=T)#
micrLinfo4fff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/micrlociABO4fff.csv",header=T)#
CIGp_4b <- connectIG(plantLinfo4b,plantout4b)#
CIGp_4bff <- connectIG(plantLinfo4bff,plantout4bff)#
CIGp_4a <- connectIG(plantLinfo4a,plantout4a)#
CIGp_4aff <- connectIG(plantLinfo4aff,plantout4aff)#
CIGp_4f <- connectIG(plantLinfo4f,plantout4f)#
CIGp_4fff <- connectIG(plantLinfo4fff,plantout4fff)#
CIGm_4b <- connectIG(micrLinfo4b,microut4b)#
CIGm_4bff <- connectIG(micrLinfo4bff,microut4bff)#
CIGm_4a <- connectIG(micrLinfo4a,microut4a)#
CIGm_4aff <- connectIG(micrLinfo4aff,microut4aff)#
CIGm_4f <- connectIG(micrLinfo4f,microut4f)#
CIGm_4fff <- connectIG(micrLinfo4fff,microut4fff)
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
# par(mfrow=c(2,6))#
# par(oma=c(3,4,2,0))#
# par(mar=c(2,2,1,1))#
plot(	   CIGp_4b$beta~(CIGp_4b$af), cex = ifelse(CIGp_4b$p_used < 0.05,1,0.1), col=rgb(0,0.5,0),  xlim=c(0,0.5),ylim=c(-2,2.5)) #limits might need to change#
	points(CIGm_4b$beta~(CIGm_4b$af), cex = ifelse(CIGm_4b$p_used < 0.05,1,0.1),  col=rgb(0.5,0,0.5))#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Estimated Beta",side=2, line=2)#
plot(      CIGp_4bff$beta~(CIGp_4bff$af), cex = ifelse(CIGp_4bff$p_used < 0.05,1,0.1),, col=rgb(0,0.5,0), xlim=c(0,0.5),ylim=c(-2,2.5))#
	points(CIGm_4bff$beta~(CIGm_4bff$af), cex = ifelse(CIGm_4bff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
plot(	   CIGp_4a$beta~(CIGp_4a$af), cex = ifelse(CIGp_4a$p_used < 0.05,1,0.1),col=rgb(0,0.5,0),  xlim=c(0,0.5),ylim=c(-2,2.5)) #
	points(CIGm_4a$beta~(CIGm_4a$af), cex = ifelse(CIGm_4a$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
plot(	   CIGp_4aff$beta~(CIGp_4aff$af), cex = ifelse(CIGp_4aff$p_used < 0.05,1,0.1), xlim=c(0,0.5),ylim=c(-2,2.5))#
	points(CIGm_4aff$beta~(CIGm_4aff$af), cex = ifelse(CIGm_4aff$p_used < 0.05,1,0.1),  xlim=c(0,0.5),ylim=c(-2,2.5)) #
	 mtext("Minor Allele Frequency",side=1, line=2)#
plot(	   CIGp_4f$beta~(CIGp_4f$af), cex = ifelse(CIGp_4f$p_used < 0.05,1,0.1), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-2,2.5)) #
	points(CIGm_4f$beta~(CIGm_4f$af), cex = ifelse(CIGm_4f$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
plot(	   CIGp_4fff$beta~(CIGp_4fff$af), cex = ifelse(CIGp_4fff$p_used < 0.05,1,0.1), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-2,2.5))#
	points(CIGm_4fff$beta~(CIGm_4fff$af), cex = ifelse(CIGm_4fff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
# par(mfrow=c(2,6))#
# par(oma=c(3,4,2,0))#
# par(mar=c(2,2,1,1))#
plot(	   CIGp_4b$beta~(CIGp_4b$af), cex = ifelse(CIGp_4b$p_used < 0.05,1,0.1), col=rgb(0,0.5,0),  xlim=c(0,0.5),ylim=c(-2,2.5)) #limits might need to change#
	points(CIGm_4b$beta~(CIGm_4b$af), cex = ifelse(CIGm_4b$p_used < 0.05,1,0.1),  col=rgb(0.5,0,0.5))#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Estimated Beta",side=2, line=2)#
	abline(h=0)#
plot(      CIGp_4bff$beta~(CIGp_4bff$af), cex = ifelse(CIGp_4bff$p_used < 0.05,1,0.1),, col=rgb(0,0.5,0), xlim=c(0,0.5),ylim=c(-2,2.5))#
	points(CIGm_4bff$beta~(CIGm_4bff$af), cex = ifelse(CIGm_4bff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
	abline(h=0)#
plot(	   CIGp_4a$beta~(CIGp_4a$af), cex = ifelse(CIGp_4a$p_used < 0.05,1,0.1),col=rgb(0,0.5,0),  xlim=c(0,0.5),ylim=c(-2,2.5)) #
	points(CIGm_4a$beta~(CIGm_4a$af), cex = ifelse(CIGm_4a$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
	abline(h=0)#
plot(	   CIGp_4aff$beta~(CIGp_4aff$af), cex = ifelse(CIGp_4aff$p_used < 0.05,1,0.1), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-2,2.5)) #
	points(CIGm_4aff$beta~(CIGm_4aff$af), cex = ifelse(CIGm_4aff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	 mtext("Minor Allele Frequency",side=1, line=2)#
	abline(h=0)#
plot(	   CIGp_4f$beta~(CIGp_4f$af), cex = ifelse(CIGp_4f$p_used < 0.05,1,0.1), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-2,2.5)) #
	points(CIGm_4f$beta~(CIGm_4f$af), cex = ifelse(CIGm_4f$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
	abline(h=0)#
plot(	   CIGp_4fff$beta~(CIGp_4fff$af), cex = ifelse(CIGp_4fff$p_used < 0.05,1,0.1), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-2,2.5))#
	points(CIGm_4fff$beta~(CIGm_4fff$af), cex = ifelse(CIGm_4fff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	abline(h=0)
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
# par(mfrow=c(2,6))#
# par(oma=c(3,4,2,0))#
# par(mar=c(2,2,1,1))#
plot(	   CIGp_4b$beta~(CIGp_4b$af), cex = ifelse(CIGp_4b$p_used < 0.05,1,0.1), col=rgb(0,0.5,0),  xlim=c(0,0.5),ylim=c(-2,2.75)) #limits might need to change#
	points(CIGm_4b$beta~(CIGm_4b$af), cex = ifelse(CIGm_4b$p_used < 0.05,1,0.1),  col=rgb(0.5,0,0.5))#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Estimated Beta",side=2, line=2)#
	abline(h=0)#
plot(      CIGp_4bff$beta~(CIGp_4bff$af), cex = ifelse(CIGp_4bff$p_used < 0.05,1,0.1),, col=rgb(0,0.5,0), xlim=c(0,0.5),ylim=c(-2,2.75))#
	points(CIGm_4bff$beta~(CIGm_4bff$af), cex = ifelse(CIGm_4bff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
	abline(h=0)#
plot(	   CIGp_4a$beta~(CIGp_4a$af), cex = ifelse(CIGp_4a$p_used < 0.05,1,0.1),col=rgb(0,0.5,0),  xlim=c(0,0.5),ylim=c(-2,2.75)) #
	points(CIGm_4a$beta~(CIGm_4a$af), cex = ifelse(CIGm_4a$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
	abline(h=0)#
plot(	   CIGp_4aff$beta~(CIGp_4aff$af), cex = ifelse(CIGp_4aff$p_used < 0.05,1,0.1), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-2,2.75)) #
	points(CIGm_4aff$beta~(CIGm_4aff$af), cex = ifelse(CIGm_4aff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	 mtext("Minor Allele Frequency",side=1, line=2)#
	abline(h=0)#
plot(	   CIGp_4f$beta~(CIGp_4f$af), cex = ifelse(CIGp_4f$p_used < 0.05,1,0.1), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-2,2.75)) #
	points(CIGm_4f$beta~(CIGm_4f$af), cex = ifelse(CIGm_4f$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
	abline(h=0)#
plot(	   CIGp_4fff$beta~(CIGp_4fff$af), cex = ifelse(CIGp_4fff$p_used < 0.05,1,0.1), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-2,2.75))#
	points(CIGm_4fff$beta~(CIGm_4fff$af), cex = ifelse(CIGm_4fff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	abline(h=0)
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
# par(mfrow=c(2,6))#
# par(oma=c(3,4,2,0))#
# par(mar=c(2,2,1,1))#
plot(	   CIGp_4b$beta~(CIGp_4b$af), cex = ifelse(CIGp_4b$p_used < 0.05,1,0.1), col=rgb(0,0.5,0),  xlim=c(0,0.5),ylim=c(-2.5,2.5)) #limits might need to change#
	points(CIGm_4b$beta~(CIGm_4b$af), cex = ifelse(CIGm_4b$p_used < 0.05,1,0.1),  col=rgb(0.5,0,0.5))#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Estimated Beta",side=2, line=2)#
	abline(h=0)#
plot(      CIGp_4bff$beta~(CIGp_4bff$af), cex = ifelse(CIGp_4bff$p_used < 0.05,1,0.1),, col=rgb(0,0.5,0), xlim=c(0,0.5),ylim=c(-2.5,2.5))#
	points(CIGm_4bff$beta~(CIGm_4bff$af), cex = ifelse(CIGm_4bff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
	abline(h=0)#
plot(	   CIGp_4a$beta~(CIGp_4a$af), cex = ifelse(CIGp_4a$p_used < 0.05,1,0.1),col=rgb(0,0.5,0),  xlim=c(0,0.5),ylim=c(-2.5,2.5)) #
	points(CIGm_4a$beta~(CIGm_4a$af), cex = ifelse(CIGm_4a$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
	abline(h=0)#
plot(	   CIGp_4aff$beta~(CIGp_4aff$af), cex = ifelse(CIGp_4aff$p_used < 0.05,1,0.1), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-2.5,2.5)) #
	points(CIGm_4aff$beta~(CIGm_4aff$af), cex = ifelse(CIGm_4aff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	 mtext("Minor Allele Frequency",side=1, line=2)#
	abline(h=0)#
plot(	   CIGp_4f$beta~(CIGp_4f$af), cex = ifelse(CIGp_4f$p_used < 0.05,1,0.1), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-2.5,2.5)) #
	points(CIGm_4f$beta~(CIGm_4f$af), cex = ifelse(CIGm_4f$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
	abline(h=0)#
plot(	   CIGp_4fff$beta~(CIGp_4fff$af), cex = ifelse(CIGp_4fff$p_used < 0.05,1,0.1), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-2.5,2.5))#
	points(CIGm_4fff$beta~(CIGm_4fff$af), cex = ifelse(CIGm_4fff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	abline(h=0)
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
plot(		plantLinfo4b$reststate~(CIGp_4b$af), cex = ifelse(CIGp_4b$p_used < 0.05,1,0.1), #
	 xlim=c(0,0.5),ylim=c(-0.5,0.7)) #limits might need to change#
	points( micrLinfo4b$reststate~(CIGm_4b$af), cex = ifelse(CIGm_4b$p_used < 0.05,1,0.1))#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Known effect",side=2, line=2,adj=-0.5)#
plot(		plantLinfo4bff$reststate~(CIGp_4bff$af), cex = ifelse(CIGp_4bff$p_used < 0.05,1,0.1), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4bff$reststate~(CIGm_4bff$af), cex = ifelse(CIGm_4bff$p_used < 0.05,1,0.1), col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
plot(		plantLinfo4a$reststate~(CIGp_4a$af), cex = ifelse(CIGp_4a$p_used < 0.05,1,0.1), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4a$reststate~(CIGm_4a$af), cex = ifelse(CIGm_4a$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
plot(		plantLinfo4aff$reststate~(CIGp_4aff$af), cex = ifelse(CIGp_4aff$p_used < 0.05,1,0.1), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4aff$reststate~(CIGm_4aff$af), cex = ifelse(CIGm_4aff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	 mtext("Estimated Beta",side=1, line=2)#
plot(		plantLinfo4f$reststate~(CIGp_4f$af), cex = ifelse(CIGp_4f$p_used < 0.05,1,0.1), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4f$reststate~(CIGm_4f$af), cex = ifelse(CIGm_4f$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
plot(		plantLinfo4fff$reststate~(CIGp_4fff$af), cex = ifelse(CIGp_4fff$p_used < 0.05,1,0.1), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4fff$reststate~(CIGm_4fff$af), cex = ifelse(CIGm_4fff$p_used < 0.05,1,0.1),  xlim=c(0,0.5),ylim=c(-0.5,0.7))
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
plot(		plantLinfo4b$reststate~(CIGp_4b$af), cex = ifelse(CIGp_4b$p_used < 0.05,1,0.1), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0)) #
	points( micrLinfo4b$reststate~(CIGm_4b$af), cex = ifelse(CIGm_4b$p_used < 0.05,1,0.1), col=rgb(0.5,0,0.5) )#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Known effect",side=2, line=2,adj=-0.5)#
plot(		plantLinfo4bff$reststate~(CIGp_4bff$af), cex = ifelse(CIGp_4bff$p_used < 0.05,1,0.1), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4bff$reststate~(CIGm_4bff$af), cex = ifelse(CIGm_4bff$p_used < 0.05,1,0.1), col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
plot(		plantLinfo4a$reststate~(CIGp_4a$af), cex = ifelse(CIGp_4a$p_used < 0.05,1,0.1), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4a$reststate~(CIGm_4a$af), cex = ifelse(CIGm_4a$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
plot(		plantLinfo4aff$reststate~(CIGp_4aff$af), cex = ifelse(CIGp_4aff$p_used < 0.05,1,0.1), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4aff$reststate~(CIGm_4aff$af), cex = ifelse(CIGm_4aff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	 mtext("Minor Allele Frequency",side=1, line=2)#
plot(		plantLinfo4f$reststate~(CIGp_4f$af), cex = ifelse(CIGp_4f$p_used < 0.05,1,0.1), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4f$reststate~(CIGm_4f$af), cex = ifelse(CIGm_4f$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
plot(		plantLinfo4fff$reststate~(CIGp_4fff$af), cex = ifelse(CIGp_4fff$p_used < 0.05,1,0.1), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4fff$reststate~(CIGm_4fff$af), cex = ifelse(CIGm_4fff$p_used < 0.05,1,0.1),  xlim=c(0,0.5),ylim=c(-0.5,0.7))
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
plot(		plantLinfo4b$reststate~(CIGp_4b$af), cex = ifelse(CIGp_4b$p_used < 0.05,1,0.1), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0)) #
	points( micrLinfo4b$reststate~(CIGm_4b$af), cex = ifelse(CIGm_4b$p_used < 0.05,1,0.1), col=rgb(0.5,0,0.5) )#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Known effect",side=2, line=2,adj=-0.5)#
plot(		plantLinfo4bff$reststate~(CIGp_4bff$af), cex = ifelse(CIGp_4bff$p_used < 0.05,1,0.1), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4bff$reststate~(CIGm_4bff$af), cex = ifelse(CIGm_4bff$p_used < 0.05,1,0.1), col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
plot(		plantLinfo4a$reststate~(CIGp_4a$af), cex = ifelse(CIGp_4a$p_used < 0.05,1,0.1), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4a$reststate~(CIGm_4a$af), cex = ifelse(CIGm_4a$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
plot(		plantLinfo4aff$reststate~(CIGp_4aff$af), cex = ifelse(CIGp_4aff$p_used < 0.05,1,0.1), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4aff$reststate~(CIGm_4aff$af), cex = ifelse(CIGm_4aff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	 mtext("Minor Allele Frequency",side=1, line=2)#
plot(		plantLinfo4f$reststate~(CIGp_4f$af), cex = ifelse(CIGp_4f$p_used < 0.05,1,0.1), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4f$reststate~(CIGm_4f$af), cex = ifelse(CIGm_4f$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
plot(		plantLinfo4fff$reststate~(CIGp_4fff$af), cex = ifelse(CIGp_4fff$p_used < 0.05,1,0.1), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4fff$reststate~(CIGm_4fff$af), cex = ifelse(CIGm_4fff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
plot(		plantLinfo4b$reststate~(CIGp_4b$af), cex = ifelse(CIGp_4b$p_used < 0.05,1,0.1), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0)) #
	points( micrLinfo4b$reststate~(CIGm_4b$af), cex = ifelse(CIGm_4b$p_used < 0.05,1,0.1), col=rgb(0.5,0,0.5) )#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Known effect",side=2, line=2,adj=-0.5)#
	abline(h=0)#
plot(		plantLinfo4bff$reststate~(CIGp_4bff$af), cex = ifelse(CIGp_4bff$p_used < 0.05,1,0.1), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4bff$reststate~(CIGm_4bff$af), cex = ifelse(CIGm_4bff$p_used < 0.05,1,0.1), col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
	abline(h=0)#
plot(		plantLinfo4a$reststate~(CIGp_4a$af), cex = ifelse(CIGp_4a$p_used < 0.05,1,0.1), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4a$reststate~(CIGm_4a$af), cex = ifelse(CIGm_4a$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
	abline(h=0)#
plot(		plantLinfo4aff$reststate~(CIGp_4aff$af), cex = ifelse(CIGp_4aff$p_used < 0.05,1,0.1), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4aff$reststate~(CIGm_4aff$af), cex = ifelse(CIGm_4aff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	 mtext("Minor Allele Frequency",side=1, line=2)#
	abline(h=0)#
plot(		plantLinfo4f$reststate~(CIGp_4f$af), cex = ifelse(CIGp_4f$p_used < 0.05,1,0.1), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4f$reststate~(CIGm_4f$af), cex = ifelse(CIGm_4f$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
	abline(h=0)#
plot(		plantLinfo4fff$reststate~(CIGp_4fff$af), cex = ifelse(CIGp_4fff$p_used < 0.05,1,0.1), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4fff$reststate~(CIGm_4fff$af), cex = ifelse(CIGm_4fff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	abline(h=0)
range( c(plantLinfo4b$reststate,plantLinfo4bff$reststate,plantLinfo4a$reststate,plantLinfo4aff$reststate,plantLinfo4f$reststate,plantLinfo4fff$reststate))#
range( c(micrLinfo4b$reststate,micrLinfo4bff$reststate,micrLinfo4a$reststate,micrLinfo4aff$reststate,micrLinfo4f$reststate,micrLinfo4fff$reststate))#
range( c(CIGp_4b$beta,CIGp_4bff$beta,CIGp_4a$beta,CIGp_4aff$beta,CIGp_4f$beta,CIGp_4fff$beta),na.rm=T)#
range( c(CIGm_4b$beta,CIGm_4bff$beta,CIGm_4a$beta,CIGm_4aff$beta,CIGm_4f$beta,CIGm_4fff$beta),na.rm=T)
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
plot(		CIGp_4b$beta~(plantLinfo4b$reststate), cex = ifelse(CIGp_4b$p_used < 0.05,1,0.1), xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4b$beta~(micrLinfo4b$reststate), cex = ifelse(CIGm_4b$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Estimated Beta",side=2, line=2,adj=-0.5)#
plot(		CIGp_4bff$beta~(plantLinfo4bff$reststate), cex = ifelse(CIGp_4bff$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4bff$beta~(micrLinfo4bff$reststate), cex = ifelse(CIGm_4bff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
plot(		CIGp_4a$beta~(plantLinfo4a$reststate), cex = ifelse(CIGp_4a$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4a$beta~(micrLinfo4a$reststate), cex = ifelse(CIGm_4a$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
plot(		CIGp_4aff$beta~(plantLinfo4aff$reststate), cex = ifelse(CIGp_4aff$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4aff$beta~(micrLinfo4aff$reststate), cex = ifelse(CIGm_4aff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	 mtext("Known Effect",side=1, line=2)#
plot(		CIGp_4f$beta~(plantLinfo4f$reststate), cex = ifelse(CIGp_4f$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4f$beta~(micrLinfo4f$reststate), cex = ifelse(CIGm_4f$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
plot(		CIGp_4fff$beta~(plantLinfo4fff$reststate), cex = ifelse(CIGp_4fff$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4fff$beta~(micrLinfo4fff$reststate), cex = ifelse(CIGm_4fff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
plot(		CIGp_4b$beta~(plantLinfo4b$reststate), cex = ifelse(CIGp_4b$p_used < 0.05,1,0.1), xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4b$beta~(micrLinfo4b$reststate), cex = ifelse(CIGm_4b$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Estimated Beta",side=2, line=2,adj=-0.5)#
	rhop <- cor(CIGp_4b$beta,plantLinfo4b$reststate)#
	rhom <- cor(CIGm_4b$beta, micrLinfo4b$reststate)#
	text(0.4,y=-2, bquote(rho==.(rhop) ),col=rgb(0,0.5,0)) #
	text(0.4,y=-2.2, bquote(rho==.(rhom) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4bff$beta~(plantLinfo4bff$reststate), cex = ifelse(CIGp_4bff$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4bff$beta~(micrLinfo4bff$reststate), cex = ifelse(CIGm_4bff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
plot(		CIGp_4a$beta~(plantLinfo4a$reststate), cex = ifelse(CIGp_4a$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4a$beta~(micrLinfo4a$reststate), cex = ifelse(CIGm_4a$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
plot(		CIGp_4aff$beta~(plantLinfo4aff$reststate), cex = ifelse(CIGp_4aff$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4aff$beta~(micrLinfo4aff$reststate), cex = ifelse(CIGm_4aff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	 mtext("Known Effect",side=1, line=2)#
plot(		CIGp_4f$beta~(plantLinfo4f$reststate), cex = ifelse(CIGp_4f$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4f$beta~(micrLinfo4f$reststate), cex = ifelse(CIGm_4f$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
plot(		CIGp_4fff$beta~(plantLinfo4fff$reststate), cex = ifelse(CIGp_4fff$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4fff$beta~(micrLinfo4fff$reststate), cex = ifelse(CIGm_4fff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )
cbind(CIGp_4b$beta,plantLinfo4b$reststate)
pdf("~/tmp.pdf",height=5,width=7)#
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
plot(		CIGp_4b$beta~(plantLinfo4b$reststate), cex = ifelse(CIGp_4b$p_used < 0.05,1,0.1), xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4b$beta~(micrLinfo4b$reststate), cex = ifelse(CIGm_4b$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Estimated Beta",side=2, line=2,adj=-0.5)#
	rhop <- cor(CIGp_4b$beta,plantLinfo4b$reststate,na.rm=T)#
	rhom <- cor(CIGm_4b$beta, micrLinfo4b$reststate,na.rm=T)#
	text(0.4,y=-2, bquote(rho==.(rhop) ),col=rgb(0,0.5,0)) #
	text(0.4,y=-2.2, bquote(rho==.(rhom) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4bff$beta~(plantLinfo4bff$reststate), cex = ifelse(CIGp_4bff$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4bff$beta~(micrLinfo4bff$reststate), cex = ifelse(CIGm_4bff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
plot(		CIGp_4a$beta~(plantLinfo4a$reststate), cex = ifelse(CIGp_4a$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4a$beta~(micrLinfo4a$reststate), cex = ifelse(CIGm_4a$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
plot(		CIGp_4aff$beta~(plantLinfo4aff$reststate), cex = ifelse(CIGp_4aff$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4aff$beta~(micrLinfo4aff$reststate), cex = ifelse(CIGm_4aff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	 mtext("Known Effect",side=1, line=2)#
plot(		CIGp_4f$beta~(plantLinfo4f$reststate), cex = ifelse(CIGp_4f$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4f$beta~(micrLinfo4f$reststate), cex = ifelse(CIGm_4f$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
plot(		CIGp_4fff$beta~(plantLinfo4fff$reststate), cex = ifelse(CIGp_4fff$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4fff$beta~(micrLinfo4fff$reststate), cex = ifelse(CIGm_4fff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
dev.off()
pdf("~/tmp.pdf",height=5,width=7)#
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
plot(		CIGp_4b$beta~(plantLinfo4b$reststate), cex = ifelse(CIGp_4b$p_used < 0.05,1,0.1), xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4b$beta~(micrLinfo4b$reststate), cex = ifelse(CIGm_4b$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Estimated Beta",side=2, line=2,adj=-0.5)#
	rhop <- cor(CIGp_4b$beta,plantLinfo4b$reststate,use="complete.obs")#
	rhom <- cor(CIGm_4b$beta, micrLinfo4b$reststate,use="complete.obs")#
	text(0.4,y=-2, bquote(rho==.(rhop) ),col=rgb(0,0.5,0)) #
	text(0.4,y=-2.2, bquote(rho==.(rhom) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4bff$beta~(plantLinfo4bff$reststate), cex = ifelse(CIGp_4bff$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4bff$beta~(micrLinfo4bff$reststate), cex = ifelse(CIGm_4bff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
plot(		CIGp_4a$beta~(plantLinfo4a$reststate), cex = ifelse(CIGp_4a$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4a$beta~(micrLinfo4a$reststate), cex = ifelse(CIGm_4a$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
plot(		CIGp_4aff$beta~(plantLinfo4aff$reststate), cex = ifelse(CIGp_4aff$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4aff$beta~(micrLinfo4aff$reststate), cex = ifelse(CIGm_4aff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	 mtext("Known Effect",side=1, line=2)#
plot(		CIGp_4f$beta~(plantLinfo4f$reststate), cex = ifelse(CIGp_4f$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4f$beta~(micrLinfo4f$reststate), cex = ifelse(CIGm_4f$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
plot(		CIGp_4fff$beta~(plantLinfo4fff$reststate), cex = ifelse(CIGp_4fff$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4fff$beta~(micrLinfo4fff$reststate), cex = ifelse(CIGm_4fff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
dev.off()
pdf("~/tmp.pdf",height=5,width=7)#
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
plot(		CIGp_4b$beta~(plantLinfo4b$reststate), cex = ifelse(CIGp_4b$p_used < 0.05,1,0.1), xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4b$beta~(micrLinfo4b$reststate), cex = ifelse(CIGm_4b$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Estimated Beta",side=2, line=2,adj=-0.5)#
	rhop <- round(cor(CIGp_4b$beta,plantLinfo4b$reststate,use="complete.obs"),digits=2)#
	rhom <- round(cor(CIGm_4b$beta, micrLinfo4b$reststate,use="complete.obs"),digits=2)#
	text(0.5,y=-2, bquote(rho==.(rhop) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(rhom) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4bff$beta~(plantLinfo4bff$reststate), cex = ifelse(CIGp_4bff$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4bff$beta~(micrLinfo4bff$reststate), cex = ifelse(CIGm_4bff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
plot(		CIGp_4a$beta~(plantLinfo4a$reststate), cex = ifelse(CIGp_4a$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4a$beta~(micrLinfo4a$reststate), cex = ifelse(CIGm_4a$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
plot(		CIGp_4aff$beta~(plantLinfo4aff$reststate), cex = ifelse(CIGp_4aff$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4aff$beta~(micrLinfo4aff$reststate), cex = ifelse(CIGm_4aff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	 mtext("Known Effect",side=1, line=2)#
plot(		CIGp_4f$beta~(plantLinfo4f$reststate), cex = ifelse(CIGp_4f$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4f$beta~(micrLinfo4f$reststate), cex = ifelse(CIGm_4f$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
plot(		CIGp_4fff$beta~(plantLinfo4fff$reststate), cex = ifelse(CIGp_4fff$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4fff$beta~(micrLinfo4fff$reststate), cex = ifelse(CIGm_4fff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
dev.off()
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
plot(		CIGp_4b$beta~(plantLinfo4b$reststate), cex = ifelse(CIGp_4b$p_used < 0.05,1,0.1), xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4b$beta~(micrLinfo4b$reststate), cex = ifelse(CIGm_4b$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Estimated Beta",side=2, line=2,adj=-0.5)#
	rhop <- round(cor(CIGp_4b$beta,plantLinfo4b$reststate,use="complete.obs"),digits=2)#
	rhom <- round(cor(CIGm_4b$beta, micrLinfo4b$reststate,use="complete.obs"),digits=2)#
	text(0.5,y=-2, bquote(rho==.(rhop) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(rhom) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4bff$beta~(plantLinfo4bff$reststate), cex = ifelse(CIGp_4bff$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4bff$beta~(micrLinfo4bff$reststate), cex = ifelse(CIGm_4bff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
	rhop <- round(cor(CIGp_4b$beta,plantLinfo4b$reststate,use="complete.obs"),digits=2)#
	rhom <- round(cor(CIGm_4b$beta, micrLinfo4b$reststate,use="complete.obs"),digits=2)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4b$beta,plantLinfo4b$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(rhom) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4a$beta~(plantLinfo4a$reststate), cex = ifelse(CIGp_4a$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4a$beta~(micrLinfo4a$reststate), cex = ifelse(CIGm_4a$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
plot(		CIGp_4aff$beta~(plantLinfo4aff$reststate), cex = ifelse(CIGp_4aff$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4aff$beta~(micrLinfo4aff$reststate), cex = ifelse(CIGm_4aff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	 mtext("Known Effect",side=1, line=2)#
plot(		CIGp_4f$beta~(plantLinfo4f$reststate), cex = ifelse(CIGp_4f$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4f$beta~(micrLinfo4f$reststate), cex = ifelse(CIGm_4f$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
plot(		CIGp_4fff$beta~(plantLinfo4fff$reststate), cex = ifelse(CIGp_4fff$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4fff$beta~(micrLinfo4fff$reststate), cex = ifelse(CIGm_4fff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
plot(		CIGp_4b$beta~(plantLinfo4b$reststate), cex = ifelse(CIGp_4b$p_used < 0.05,1,0.1), xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4b$beta~(micrLinfo4b$reststate), cex = ifelse(CIGm_4b$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Estimated Beta",side=2, line=2,adj=-0.5)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4b$beta,plantLinfo4b$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4b$beta, micrLinfo4b$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4bff$beta~(plantLinfo4bff$reststate), cex = ifelse(CIGp_4bff$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4bff$beta~(micrLinfo4bff$reststate), cex = ifelse(CIGm_4bff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4bff$beta,plantLinfo4bff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4bff$beta, micrLinfo4bff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4a$beta~(plantLinfo4a$reststate), cex = ifelse(CIGp_4a$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4a$beta~(micrLinfo4a$reststate), cex = ifelse(CIGm_4a$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4a$beta,plantLinfo4a$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4a$beta, micrLinfo4a$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4aff$beta~(plantLinfo4aff$reststate), cex = ifelse(CIGp_4aff$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4aff$beta~(micrLinfo4aff$reststate), cex = ifelse(CIGm_4aff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	 mtext("Known Effect",side=1, line=2)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4aff$beta,plantLinfo4aff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4aff$beta, micrLinfo4aff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4f$beta~(plantLinfo4f$reststate), cex = ifelse(CIGp_4f$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4f$beta~(micrLinfo4f$reststate), cex = ifelse(CIGm_4f$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4f$beta,plantLinfo4f$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4f$beta, micrLinfo4f$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4fff$beta~(plantLinfo4fff$reststate), cex = ifelse(CIGp_4fff$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4fff$beta~(micrLinfo4fff$reststate), cex = ifelse(CIGm_4fff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4fff$beta,plantLinfo4fff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4fff$beta, micrLinfo4fff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )
pdf("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/betas_maf_sig_sixdemos.pdf",height=5,width=7)#4, 12#
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
plot(	   CIGp_4b$beta~(CIGp_4b$af), cex = ifelse(CIGp_4b$p_used < 0.05,1,0.1), col=rgb(0,0.5,0),  xlim=c(0,0.5),ylim=c(-2.5,2.5)) #limits might need to change#
	points(CIGm_4b$beta~(CIGm_4b$af), cex = ifelse(CIGm_4b$p_used < 0.05,1,0.1),  col=rgb(0.5,0,0.5))#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Estimated Beta",side=2, line=2,adj=-0.5)#
	abline(h=0)#
plot(      CIGp_4bff$beta~(CIGp_4bff$af), cex = ifelse(CIGp_4bff$p_used < 0.05,1,0.1),, col=rgb(0,0.5,0), xlim=c(0,0.5),ylim=c(-2.5,2.5))#
	points(CIGm_4bff$beta~(CIGm_4bff$af), cex = ifelse(CIGm_4bff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
	abline(h=0)#
plot(	   CIGp_4a$beta~(CIGp_4a$af), cex = ifelse(CIGp_4a$p_used < 0.05,1,0.1),col=rgb(0,0.5,0),  xlim=c(0,0.5),ylim=c(-2.5,2.5)) #
	points(CIGm_4a$beta~(CIGm_4a$af), cex = ifelse(CIGm_4a$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
	abline(h=0)#
plot(	   CIGp_4aff$beta~(CIGp_4aff$af), cex = ifelse(CIGp_4aff$p_used < 0.05,1,0.1), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-2.5,2.5)) #
	points(CIGm_4aff$beta~(CIGm_4aff$af), cex = ifelse(CIGm_4aff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	 mtext("Minor Allele Frequency",side=1, line=2)#
	abline(h=0)#
plot(	   CIGp_4f$beta~(CIGp_4f$af), cex = ifelse(CIGp_4f$p_used < 0.05,1,0.1), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-2.5,2.5)) #
	points(CIGm_4f$beta~(CIGm_4f$af), cex = ifelse(CIGm_4f$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
	abline(h=0)#
plot(	   CIGp_4fff$beta~(CIGp_4fff$af), cex = ifelse(CIGp_4fff$p_used < 0.05,1,0.1), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-2.5,2.5))#
	points(CIGm_4fff$beta~(CIGm_4fff$af), cex = ifelse(CIGm_4fff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	abline(h=0)#
dev.off()#
##
pdf("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/knownEffs_maf_sig_sixdemos.pdf",height=5,width=7)#
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
plot(		plantLinfo4b$reststate~(CIGp_4b$af), cex = ifelse(CIGp_4b$p_used < 0.05,1,0.1), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0)) #
	points( micrLinfo4b$reststate~(CIGm_4b$af), cex = ifelse(CIGm_4b$p_used < 0.05,1,0.1), col=rgb(0.5,0,0.5) )#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Known effect",side=2, line=2,adj=-0.5)#
	abline(h=0)#
plot(		plantLinfo4bff$reststate~(CIGp_4bff$af), cex = ifelse(CIGp_4bff$p_used < 0.05,1,0.1), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4bff$reststate~(CIGm_4bff$af), cex = ifelse(CIGm_4bff$p_used < 0.05,1,0.1), col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
	abline(h=0)#
plot(		plantLinfo4a$reststate~(CIGp_4a$af), cex = ifelse(CIGp_4a$p_used < 0.05,1,0.1), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4a$reststate~(CIGm_4a$af), cex = ifelse(CIGm_4a$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
	abline(h=0)#
plot(		plantLinfo4aff$reststate~(CIGp_4aff$af), cex = ifelse(CIGp_4aff$p_used < 0.05,1,0.1), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4aff$reststate~(CIGm_4aff$af), cex = ifelse(CIGm_4aff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	 mtext("Minor Allele Frequency",side=1, line=2)#
	abline(h=0)#
plot(		plantLinfo4f$reststate~(CIGp_4f$af), cex = ifelse(CIGp_4f$p_used < 0.05,1,0.1), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4f$reststate~(CIGm_4f$af), cex = ifelse(CIGm_4f$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
	abline(h=0)#
plot(		plantLinfo4fff$reststate~(CIGp_4fff$af), cex = ifelse(CIGp_4fff$p_used < 0.05,1,0.1), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4fff$reststate~(CIGm_4fff$af), cex = ifelse(CIGm_4fff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	abline(h=0)#
dev.off()#
##
#
range( c(plantLinfo4b$reststate,plantLinfo4bff$reststate,plantLinfo4a$reststate,plantLinfo4aff$reststate,plantLinfo4f$reststate,plantLinfo4fff$reststate))#
range( c(micrLinfo4b$reststate,micrLinfo4bff$reststate,micrLinfo4a$reststate,micrLinfo4aff$reststate,micrLinfo4f$reststate,micrLinfo4fff$reststate))#
range( c(CIGp_4b$beta,CIGp_4bff$beta,CIGp_4a$beta,CIGp_4aff$beta,CIGp_4f$beta,CIGp_4fff$beta),na.rm=T)#
range( c(CIGm_4b$beta,CIGm_4bff$beta,CIGm_4a$beta,CIGm_4aff$beta,CIGm_4f$beta,CIGm_4fff$beta),na.rm=T)#
#
pdf("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/knownEffs_beta_sig_sixdemos.pdf",height=5,width=7)#
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
plot(		CIGp_4b$beta~(plantLinfo4b$reststate), cex = ifelse(CIGp_4b$p_used < 0.05,1,0.1), xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4b$beta~(micrLinfo4b$reststate), cex = ifelse(CIGm_4b$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Estimated Beta",side=2, line=2,adj=-0.5)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4b$beta,plantLinfo4b$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4b$beta, micrLinfo4b$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4bff$beta~(plantLinfo4bff$reststate), cex = ifelse(CIGp_4bff$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4bff$beta~(micrLinfo4bff$reststate), cex = ifelse(CIGm_4bff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4bff$beta,plantLinfo4bff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4bff$beta, micrLinfo4bff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4a$beta~(plantLinfo4a$reststate), cex = ifelse(CIGp_4a$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4a$beta~(micrLinfo4a$reststate), cex = ifelse(CIGm_4a$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4a$beta,plantLinfo4a$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4a$beta, micrLinfo4a$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4aff$beta~(plantLinfo4aff$reststate), cex = ifelse(CIGp_4aff$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4aff$beta~(micrLinfo4aff$reststate), cex = ifelse(CIGm_4aff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	 mtext("Known Effect",side=1, line=2)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4aff$beta,plantLinfo4aff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4aff$beta, micrLinfo4aff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4f$beta~(plantLinfo4f$reststate), cex = ifelse(CIGp_4f$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4f$beta~(micrLinfo4f$reststate), cex = ifelse(CIGm_4f$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4f$beta,plantLinfo4f$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4f$beta, micrLinfo4f$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4fff$beta~(plantLinfo4fff$reststate), cex = ifelse(CIGp_4fff$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4fff$beta~(micrLinfo4fff$reststate), cex = ifelse(CIGm_4fff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4fff$beta,plantLinfo4fff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4fff$beta, micrLinfo4fff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
dev.off()
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
plot(		CIGp_4b$beta~(plantLinfo4b$reststate), cex = ifelse(CIGp_4b$p_used < 0.05,1,0.1), xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4b$beta~(micrLinfo4b$reststate), cex = ifelse(CIGm_4b$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Estimated Beta",side=2, line=2,adj=-0.5)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4b$beta,plantLinfo4b$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4b$beta, micrLinfo4b$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4bff$beta~(plantLinfo4bff$reststate), cex = ifelse(CIGp_4bff$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4bff$beta~(micrLinfo4bff$reststate), cex = ifelse(CIGm_4bff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4bff$beta,plantLinfo4bff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4bff$beta, micrLinfo4bff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4a$beta~(plantLinfo4a$reststate), cex = ifelse(CIGp_4a$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4a$beta~(micrLinfo4a$reststate), cex = ifelse(CIGm_4a$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4a$beta,plantLinfo4a$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4a$beta, micrLinfo4a$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4aff$beta~(plantLinfo4aff$reststate), cex = ifelse(CIGp_4aff$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4aff$beta~(micrLinfo4aff$reststate), cex = ifelse(CIGm_4aff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	 mtext("Known Effect",side=1, line=2)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4aff$beta,plantLinfo4aff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4aff$beta, micrLinfo4aff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4f$beta~(plantLinfo4f$reststate), cex = ifelse(CIGp_4f$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4f$beta~(micrLinfo4f$reststate), cex = ifelse(CIGm_4f$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4f$beta,plantLinfo4f$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4f$beta, micrLinfo4f$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4fff$beta~(plantLinfo4fff$reststate), cex = ifelse(CIGp_4fff$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4fff$beta~(micrLinfo4fff$reststate), cex = ifelse(CIGm_4fff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4fff$beta,plantLinfo4fff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4fff$beta, micrLinfo4fff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
legend(-0.4,-2.2,c("Host","Microbe"),fill=c(rgb(0,0.5,0),rgb(0.5,0,0.5)),bty="n")
legend(-0.4,-1.8,c("Host","Microbe"),fill=c(rgb(0,0.5,0),rgb(0.5,0,0.5)),bty="n")
pdf("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/knownEffs_beta_sig_sixdemos.pdf",height=5,width=7)#
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
plot(		CIGp_4b$beta~(plantLinfo4b$reststate), cex = ifelse(CIGp_4b$p_used < 0.05,1,0.1), xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4b$beta~(micrLinfo4b$reststate), cex = ifelse(CIGm_4b$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Estimated Beta",side=2, line=2,adj=-0.5)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4b$beta,plantLinfo4b$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4b$beta, micrLinfo4b$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4bff$beta~(plantLinfo4bff$reststate), cex = ifelse(CIGp_4bff$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4bff$beta~(micrLinfo4bff$reststate), cex = ifelse(CIGm_4bff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4bff$beta,plantLinfo4bff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4bff$beta, micrLinfo4bff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4a$beta~(plantLinfo4a$reststate), cex = ifelse(CIGp_4a$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4a$beta~(micrLinfo4a$reststate), cex = ifelse(CIGm_4a$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4a$beta,plantLinfo4a$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4a$beta, micrLinfo4a$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4aff$beta~(plantLinfo4aff$reststate), cex = ifelse(CIGp_4aff$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4aff$beta~(micrLinfo4aff$reststate), cex = ifelse(CIGm_4aff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	 mtext("Known Effect",side=1, line=2)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4aff$beta,plantLinfo4aff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4aff$beta, micrLinfo4aff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4f$beta~(plantLinfo4f$reststate), cex = ifelse(CIGp_4f$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4f$beta~(micrLinfo4f$reststate), cex = ifelse(CIGm_4f$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4f$beta,plantLinfo4f$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4f$beta, micrLinfo4f$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4fff$beta~(plantLinfo4fff$reststate), cex = ifelse(CIGp_4fff$p_used < 0.05,1,0.1),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4fff$beta~(micrLinfo4fff$reststate), cex = ifelse(CIGm_4fff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4fff$beta,plantLinfo4fff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4fff$beta, micrLinfo4fff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
legend(-0.4,-1.8,c("Host","Microbe"),fill=c(rgb(0,0.5,0),rgb(0.5,0,0.5)),bty="n")#
dev.off()
pdf("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/betas_maf_sig_sixdemos.pdf",height=5,width=7)#4, 12#
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
plot(	   CIGp_4b$beta~(CIGp_4b$af), cex = ifelse(CIGp_4b$p_used < 0.05,1,0.1), col=rgb(0,0.5,0),  xlim=c(0,0.5),ylim=c(-2.5,2.5)) #limits might need to change#
	points(CIGm_4b$beta~(CIGm_4b$af), cex = ifelse(CIGm_4b$p_used < 0.05,1,0.1),  col=rgb(0.5,0,0.5))#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Estimated Beta",side=2, line=2,adj=-0.5)#
	abline(h=0)#
plot(      CIGp_4bff$beta~(CIGp_4bff$af), cex = ifelse(CIGp_4bff$p_used < 0.05,1,0.1),, col=rgb(0,0.5,0), xlim=c(0,0.5),ylim=c(-2.5,2.5))#
	points(CIGm_4bff$beta~(CIGm_4bff$af), cex = ifelse(CIGm_4bff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
	abline(h=0)#
plot(	   CIGp_4a$beta~(CIGp_4a$af), cex = ifelse(CIGp_4a$p_used < 0.05,1,0.1),col=rgb(0,0.5,0),  xlim=c(0,0.5),ylim=c(-2.5,2.5)) #
	points(CIGm_4a$beta~(CIGm_4a$af), cex = ifelse(CIGm_4a$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
	abline(h=0)#
plot(	   CIGp_4aff$beta~(CIGp_4aff$af), cex = ifelse(CIGp_4aff$p_used < 0.05,1,0.1), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-2.5,2.5)) #
	points(CIGm_4aff$beta~(CIGm_4aff$af), cex = ifelse(CIGm_4aff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	 mtext("Minor Allele Frequency",side=1, line=2)#
	abline(h=0)#
plot(	   CIGp_4f$beta~(CIGp_4f$af), cex = ifelse(CIGp_4f$p_used < 0.05,1,0.1), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-2.5,2.5)) #
	points(CIGm_4f$beta~(CIGm_4f$af), cex = ifelse(CIGm_4f$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
	abline(h=0)#
plot(	   CIGp_4fff$beta~(CIGp_4fff$af), cex = ifelse(CIGp_4fff$p_used < 0.05,1,0.1), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-2.5,2.5))#
	points(CIGm_4fff$beta~(CIGm_4fff$af), cex = ifelse(CIGm_4fff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	abline(h=0)#
legend(0.7,-1.8,c("Host","Microbe"),fill=c(rgb(0,0.5,0),rgb(0.5,0,0.5)),bty="n")#
dev.off()
pdf("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/betas_maf_sig_sixdemos.pdf",height=5,width=7)#4, 12#
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
plot(	   CIGp_4b$beta~(CIGp_4b$af), cex = ifelse(CIGp_4b$p_used < 0.05,1,0.1), col=rgb(0,0.5,0),  xlim=c(0,0.5),ylim=c(-2.5,2.5)) #limits might need to change#
	points(CIGm_4b$beta~(CIGm_4b$af), cex = ifelse(CIGm_4b$p_used < 0.05,1,0.1),  col=rgb(0.5,0,0.5))#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Estimated Beta",side=2, line=2,adj=-0.5)#
	abline(h=0)#
plot(      CIGp_4bff$beta~(CIGp_4bff$af), cex = ifelse(CIGp_4bff$p_used < 0.05,1,0.1),, col=rgb(0,0.5,0), xlim=c(0,0.5),ylim=c(-2.5,2.5))#
	points(CIGm_4bff$beta~(CIGm_4bff$af), cex = ifelse(CIGm_4bff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
	abline(h=0)#
plot(	   CIGp_4a$beta~(CIGp_4a$af), cex = ifelse(CIGp_4a$p_used < 0.05,1,0.1),col=rgb(0,0.5,0),  xlim=c(0,0.5),ylim=c(-2.5,2.5)) #
	points(CIGm_4a$beta~(CIGm_4a$af), cex = ifelse(CIGm_4a$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
	abline(h=0)#
plot(	   CIGp_4aff$beta~(CIGp_4aff$af), cex = ifelse(CIGp_4aff$p_used < 0.05,1,0.1), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-2.5,2.5)) #
	points(CIGm_4aff$beta~(CIGm_4aff$af), cex = ifelse(CIGm_4aff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	 mtext("Minor Allele Frequency",side=1, line=2)#
	abline(h=0)#
plot(	   CIGp_4f$beta~(CIGp_4f$af), cex = ifelse(CIGp_4f$p_used < 0.05,1,0.1), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-2.5,2.5)) #
	points(CIGm_4f$beta~(CIGm_4f$af), cex = ifelse(CIGm_4f$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
	abline(h=0)#
plot(	   CIGp_4fff$beta~(CIGp_4fff$af), cex = ifelse(CIGp_4fff$p_used < 0.05,1,0.1), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-2.5,2.5))#
	points(CIGm_4fff$beta~(CIGm_4fff$af), cex = ifelse(CIGm_4fff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	abline(h=0)#
legend(0.4,-1.8,c("Host","Microbe"),fill=c(rgb(0,0.5,0),rgb(0.5,0,0.5)),bty="n")#
dev.off()
pdf("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/betas_maf_sig_sixdemos.pdf",height=5,width=7)#4, 12#
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
plot(	   CIGp_4b$beta~(CIGp_4b$af), cex = ifelse(CIGp_4b$p_used < 0.05,1,0.1), col=rgb(0,0.5,0),  xlim=c(0,0.5),ylim=c(-2.5,2.5)) #limits might need to change#
	points(CIGm_4b$beta~(CIGm_4b$af), cex = ifelse(CIGm_4b$p_used < 0.05,1,0.1),  col=rgb(0.5,0,0.5))#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Estimated Beta",side=2, line=2,adj=-0.5)#
	abline(h=0)#
plot(      CIGp_4bff$beta~(CIGp_4bff$af), cex = ifelse(CIGp_4bff$p_used < 0.05,1,0.1),, col=rgb(0,0.5,0), xlim=c(0,0.5),ylim=c(-2.5,2.5))#
	points(CIGm_4bff$beta~(CIGm_4bff$af), cex = ifelse(CIGm_4bff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
	abline(h=0)#
plot(	   CIGp_4a$beta~(CIGp_4a$af), cex = ifelse(CIGp_4a$p_used < 0.05,1,0.1),col=rgb(0,0.5,0),  xlim=c(0,0.5),ylim=c(-2.5,2.5)) #
	points(CIGm_4a$beta~(CIGm_4a$af), cex = ifelse(CIGm_4a$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
	abline(h=0)#
plot(	   CIGp_4aff$beta~(CIGp_4aff$af), cex = ifelse(CIGp_4aff$p_used < 0.05,1,0.1), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-2.5,2.5)) #
	points(CIGm_4aff$beta~(CIGm_4aff$af), cex = ifelse(CIGm_4aff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	 mtext("Minor Allele Frequency",side=1, line=2)#
	abline(h=0)#
plot(	   CIGp_4f$beta~(CIGp_4f$af), cex = ifelse(CIGp_4f$p_used < 0.05,1,0.1), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-2.5,2.5)) #
	points(CIGm_4f$beta~(CIGm_4f$af), cex = ifelse(CIGm_4f$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
	abline(h=0)#
plot(	   CIGp_4fff$beta~(CIGp_4fff$af), cex = ifelse(CIGp_4fff$p_used < 0.05,1,0.1), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-2.5,2.5))#
	points(CIGm_4fff$beta~(CIGm_4fff$af), cex = ifelse(CIGm_4fff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	abline(h=0)#
legend(0.3,-1.7,c("Host","Microbe"),fill=c(rgb(0,0.5,0),rgb(0.5,0,0.5)),bty="n")#
dev.off()
pdf("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/knownEffs_maf_sig_sixdemos.pdf",height=5,width=7)#
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
plot(		plantLinfo4b$reststate~(CIGp_4b$af), cex = ifelse(CIGp_4b$p_used < 0.05,1,0.1), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0)) #
	points( micrLinfo4b$reststate~(CIGm_4b$af), cex = ifelse(CIGm_4b$p_used < 0.05,1,0.1), col=rgb(0.5,0,0.5) )#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Known effect",side=2, line=2,adj=-0.5)#
	abline(h=0)#
plot(		plantLinfo4bff$reststate~(CIGp_4bff$af), cex = ifelse(CIGp_4bff$p_used < 0.05,1,0.1), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4bff$reststate~(CIGm_4bff$af), cex = ifelse(CIGm_4bff$p_used < 0.05,1,0.1), col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
	abline(h=0)#
plot(		plantLinfo4a$reststate~(CIGp_4a$af), cex = ifelse(CIGp_4a$p_used < 0.05,1,0.1), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4a$reststate~(CIGm_4a$af), cex = ifelse(CIGm_4a$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
	abline(h=0)#
plot(		plantLinfo4aff$reststate~(CIGp_4aff$af), cex = ifelse(CIGp_4aff$p_used < 0.05,1,0.1), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4aff$reststate~(CIGm_4aff$af), cex = ifelse(CIGm_4aff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	 mtext("Minor Allele Frequency",side=1, line=2)#
	abline(h=0)#
plot(		plantLinfo4f$reststate~(CIGp_4f$af), cex = ifelse(CIGp_4f$p_used < 0.05,1,0.1), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4f$reststate~(CIGm_4f$af), cex = ifelse(CIGm_4f$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
	abline(h=0)#
plot(		plantLinfo4fff$reststate~(CIGp_4fff$af), cex = ifelse(CIGp_4fff$p_used < 0.05,1,0.1), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4fff$reststate~(CIGm_4fff$af), cex = ifelse(CIGm_4fff$p_used < 0.05,1,0.1),col=rgb(0.5,0,0.5) )#
	abline(h=0)#
legend(0.3,-0.3,c("Host","Microbe"),fill=c(rgb(0,0.5,0),rgb(0.5,0,0.5)),bty="n")#
dev.off()
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
plot(		CIGp_4b$beta~(plantLinfo4b$reststate), cex = ifelse(CIGp_4b$p_used < 0.05,1.5,0.25), xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4b$beta~(micrLinfo4b$reststate), cex = ifelse(CIGm_4b$p_used < 0.05,1.5,0.25),col=rgb(0.5,0,0.5) )#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Estimated Beta",side=2, line=2,adj=-0.5)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4b$beta,plantLinfo4b$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4b$beta, micrLinfo4b$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4bff$beta~(plantLinfo4bff$reststate), cex = ifelse(CIGp_4bff$p_used < 0.05,1.5,0.25),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4bff$beta~(micrLinfo4bff$reststate), cex = ifelse(CIGm_4bff$p_used < 0.05,1.5,0.25),col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4bff$beta,plantLinfo4bff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4bff$beta, micrLinfo4bff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4a$beta~(plantLinfo4a$reststate), cex = ifelse(CIGp_4a$p_used < 0.05,1.5,0.25),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4a$beta~(micrLinfo4a$reststate), cex = ifelse(CIGm_4a$p_used < 0.05,1.5,0.25),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4a$beta,plantLinfo4a$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4a$beta, micrLinfo4a$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4aff$beta~(plantLinfo4aff$reststate), cex = ifelse(CIGp_4aff$p_used < 0.05,1.5,0.25),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4aff$beta~(micrLinfo4aff$reststate), cex = ifelse(CIGm_4aff$p_used < 0.05,1.5,0.25),col=rgb(0.5,0,0.5) )#
	 mtext("Known Effect",side=1, line=2)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4aff$beta,plantLinfo4aff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4aff$beta, micrLinfo4aff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4f$beta~(plantLinfo4f$reststate), cex = ifelse(CIGp_4f$p_used < 0.05,1.5,0.25),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4f$beta~(micrLinfo4f$reststate), cex = ifelse(CIGm_4f$p_used < 0.05,1.5,0.25),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4f$beta,plantLinfo4f$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4f$beta, micrLinfo4f$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4fff$beta~(plantLinfo4fff$reststate), cex = ifelse(CIGp_4fff$p_used < 0.05,1.5,0.25),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4fff$beta~(micrLinfo4fff$reststate), cex = ifelse(CIGm_4fff$p_used < 0.05,1.5,0.25),col=rgb(0.5,0,0.5) )#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4fff$beta,plantLinfo4fff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4fff$beta, micrLinfo4fff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
legend(-0.3,-1.8,c("Host","Microbe"),fill=c(rgb(0,0.5,0),rgb(0.5,0,0.5)),bty="n")
pdf("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/knownEffs_beta_sig_sixdemos.pdf",height=5,width=7)#
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
plot(		CIGp_4b$beta~(plantLinfo4b$reststate), cex = ifelse(CIGp_4b$p_used < 0.05,1.5,0.5), xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4b$beta~(micrLinfo4b$reststate), cex = ifelse(CIGm_4b$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Estimated Beta",side=2, line=2,adj=-0.5)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4b$beta,plantLinfo4b$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4b$beta, micrLinfo4b$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4bff$beta~(plantLinfo4bff$reststate), cex = ifelse(CIGp_4bff$p_used < 0.05,1.5,0.5),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4bff$beta~(micrLinfo4bff$reststate), cex = ifelse(CIGm_4bff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4bff$beta,plantLinfo4bff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4bff$beta, micrLinfo4bff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4a$beta~(plantLinfo4a$reststate), cex = ifelse(CIGp_4a$p_used < 0.05,1.5,0.5),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4a$beta~(micrLinfo4a$reststate), cex = ifelse(CIGm_4a$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4a$beta,plantLinfo4a$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4a$beta, micrLinfo4a$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4aff$beta~(plantLinfo4aff$reststate), cex = ifelse(CIGp_4aff$p_used < 0.05,1.5,0.5),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4aff$beta~(micrLinfo4aff$reststate), cex = ifelse(CIGm_4aff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	 mtext("Known Effect",side=1, line=2)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4aff$beta,plantLinfo4aff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4aff$beta, micrLinfo4aff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4f$beta~(plantLinfo4f$reststate), cex = ifelse(CIGp_4f$p_used < 0.05,1.5,0.5),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4f$beta~(micrLinfo4f$reststate), cex = ifelse(CIGm_4f$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4f$beta,plantLinfo4f$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4f$beta, micrLinfo4f$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4fff$beta~(plantLinfo4fff$reststate), cex = ifelse(CIGp_4fff$p_used < 0.05,1.5,0.5),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4fff$beta~(micrLinfo4fff$reststate), cex = ifelse(CIGm_4fff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4fff$beta,plantLinfo4fff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4fff$beta, micrLinfo4fff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
legend(-0.3,-1.8,c("Host","Microbe"),fill=c(rgb(0,0.5,0),rgb(0.5,0,0.5)),bty="n")#
dev.off()
pdf("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/betas_maf_sig_sixdemos.pdf",height=5,width=7)#4, 12#
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
plot(	   CIGp_4b$beta~(CIGp_4b$af), cex = ifelse(CIGp_4b$p_used < 0.05,1.5,0.5), col=rgb(0,0.5,0),  xlim=c(0,0.5),ylim=c(-2.5,2.5)) #limits might need to change#
	points(CIGm_4b$beta~(CIGm_4b$af), cex = ifelse(CIGm_4b$p_used < 0.05,1.5,0.5),  col=rgb(0.5,0,0.5))#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Estimated Beta",side=2, line=2,adj=-0.5)#
	abline(h=0)#
plot(      CIGp_4bff$beta~(CIGp_4bff$af), cex = ifelse(CIGp_4bff$p_used < 0.05,11.5,0.5),, col=rgb(0,0.5,0), xlim=c(0,0.5),ylim=c(-2.5,2.5))#
	points(CIGm_4bff$beta~(CIGm_4bff$af), cex = ifelse(CIGm_4bff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
	abline(h=0)#
plot(	   CIGp_4a$beta~(CIGp_4a$af), cex = ifelse(CIGp_4a$p_used < 0.05,1.5,0.5),col=rgb(0,0.5,0),  xlim=c(0,0.5),ylim=c(-2.5,2.5)) #
	points(CIGm_4a$beta~(CIGm_4a$af), cex = ifelse(CIGm_4a$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
	abline(h=0)#
plot(	   CIGp_4aff$beta~(CIGp_4aff$af), cex = ifelse(CIGp_4aff$p_used < 0.05,1.5,0.5), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-2.5,2.5)) #
	points(CIGm_4aff$beta~(CIGm_4aff$af), cex = ifelse(CIGm_4aff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	 mtext("Minor Allele Frequency",side=1, line=2)#
	abline(h=0)#
plot(	   CIGp_4f$beta~(CIGp_4f$af), cex = ifelse(CIGp_4f$p_used < 0.05,1.5,0.5), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-2.5,2.5)) #
	points(CIGm_4f$beta~(CIGm_4f$af), cex = ifelse(CIGm_4f$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
	abline(h=0)#
plot(	   CIGp_4fff$beta~(CIGp_4fff$af), cex = ifelse(CIGp_4fff$p_used < 0.05,1.5,0.5), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-2.5,2.5))#
	points(CIGm_4fff$beta~(CIGm_4fff$af), cex = ifelse(CIGm_4fff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	abline(h=0)#
legend(0.3,-1.7,c("Host","Microbe"),fill=c(rgb(0,0.5,0),rgb(0.5,0,0.5)),bty="n")#
dev.off()#
##
#
pdf("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/knownEffs_maf_sig_sixdemos.pdf",height=5,width=7)#
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
plot(		plantLinfo4b$reststate~(CIGp_4b$af), cex = ifelse(CIGp_4b$p_used < 0.05,1.5,0.5), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0)) #
	points( micrLinfo4b$reststate~(CIGm_4b$af), cex = ifelse(CIGm_4b$p_used < 0.05,1.5,0.5), col=rgb(0.5,0,0.5) )#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Known effect",side=2, line=2,adj=-0.5)#
	abline(h=0)#
plot(		plantLinfo4bff$reststate~(CIGp_4bff$af), cex = ifelse(CIGp_4bff$p_used < 0.05,1.5,0.5), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4bff$reststate~(CIGm_4bff$af), cex = ifelse(CIGm_4bff$p_used < 0.05,1.5,0.5), col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
	abline(h=0)#
plot(		plantLinfo4a$reststate~(CIGp_4a$af), cex = ifelse(CIGp_4a$p_used < 0.05,1.5,0.5), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4a$reststate~(CIGm_4a$af), cex = ifelse(CIGm_4a$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
	abline(h=0)#
plot(		plantLinfo4aff$reststate~(CIGp_4aff$af), cex = ifelse(CIGp_4aff$p_used < 0.05,1.5,0.5), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4aff$reststate~(CIGm_4aff$af), cex = ifelse(CIGm_4aff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	 mtext("Minor Allele Frequency",side=1, line=2)#
	abline(h=0)#
plot(		plantLinfo4f$reststate~(CIGp_4f$af), cex = ifelse(CIGp_4f$p_used < 0.05,1.5,0.5), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4f$reststate~(CIGm_4f$af), cex = ifelse(CIGm_4f$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
	abline(h=0)#
plot(		plantLinfo4fff$reststate~(CIGp_4fff$af), cex = ifelse(CIGp_4fff$p_used < 0.05,1.5,0.5), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4fff$reststate~(CIGm_4fff$af), cex = ifelse(CIGm_4fff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	abline(h=0)#
legend(0.3,-0.3,c("Host","Microbe"),fill=c(rgb(0,0.5,0),rgb(0.5,0,0.5)),bty="n")#
dev.off()#
##
#
range( c(plantLinfo4b$reststate,plantLinfo4bff$reststate,plantLinfo4a$reststate,plantLinfo4aff$reststate,plantLinfo4f$reststate,plantLinfo4fff$reststate))#
range( c(micrLinfo4b$reststate,micrLinfo4bff$reststate,micrLinfo4a$reststate,micrLinfo4aff$reststate,micrLinfo4f$reststate,micrLinfo4fff$reststate))#
range( c(CIGp_4b$beta,CIGp_4bff$beta,CIGp_4a$beta,CIGp_4aff$beta,CIGp_4f$beta,CIGp_4fff$beta),na.rm=T)#
range( c(CIGm_4b$beta,CIGm_4bff$beta,CIGm_4a$beta,CIGm_4aff$beta,CIGm_4f$beta,CIGm_4fff$beta),na.rm=T)#
#
pdf("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/knownEffs_beta_sig_sixdemos.pdf",height=5,width=7)#
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
plot(		CIGp_4b$beta~(plantLinfo4b$reststate), cex = ifelse(CIGp_4b$p_used < 0.05,1.5,0.5), xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4b$beta~(micrLinfo4b$reststate), cex = ifelse(CIGm_4b$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Estimated Beta",side=2, line=2,adj=-0.5)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4b$beta,plantLinfo4b$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4b$beta, micrLinfo4b$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4bff$beta~(plantLinfo4bff$reststate), cex = ifelse(CIGp_4bff$p_used < 0.05,1.5,0.5),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4bff$beta~(micrLinfo4bff$reststate), cex = ifelse(CIGm_4bff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4bff$beta,plantLinfo4bff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4bff$beta, micrLinfo4bff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4a$beta~(plantLinfo4a$reststate), cex = ifelse(CIGp_4a$p_used < 0.05,1.5,0.5),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4a$beta~(micrLinfo4a$reststate), cex = ifelse(CIGm_4a$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4a$beta,plantLinfo4a$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4a$beta, micrLinfo4a$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4aff$beta~(plantLinfo4aff$reststate), cex = ifelse(CIGp_4aff$p_used < 0.05,1.5,0.5),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4aff$beta~(micrLinfo4aff$reststate), cex = ifelse(CIGm_4aff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	 mtext("Known Effect",side=1, line=2)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4aff$beta,plantLinfo4aff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4aff$beta, micrLinfo4aff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4f$beta~(plantLinfo4f$reststate), cex = ifelse(CIGp_4f$p_used < 0.05,1.5,0.5),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4f$beta~(micrLinfo4f$reststate), cex = ifelse(CIGm_4f$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4f$beta,plantLinfo4f$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4f$beta, micrLinfo4f$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4fff$beta~(plantLinfo4fff$reststate), cex = ifelse(CIGp_4fff$p_used < 0.05,1.5,0.5),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4fff$beta~(micrLinfo4fff$reststate), cex = ifelse(CIGm_4fff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4fff$beta,plantLinfo4fff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4fff$beta, micrLinfo4fff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
legend(-0.3,-1.8,c("Host","Microbe"),fill=c(rgb(0,0.5,0),rgb(0.5,0,0.5)),bty="n")#
dev.off()
pdf("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/betas_maf_sig_sixdemos.pdf",height=5,width=7)#4, 12#
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
plot(	   CIGp_4b$beta~(CIGp_4b$af), cex = ifelse(CIGp_4b$p_used < 0.05,1.5,0.5), col=rgb(0,0.5,0),  xlim=c(0,0.5),ylim=c(-2.5,2.5)) #limits might need to change#
	points(CIGm_4b$beta~(CIGm_4b$af), cex = ifelse(CIGm_4b$p_used < 0.05,1.5,0.5),  col=rgb(0.5,0,0.5))#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Estimated Beta",side=2, line=2,adj=-0.5)#
	abline(h=0)#
plot(      CIGp_4bff$beta~(CIGp_4bff$af), cex = ifelse(CIGp_4bff$p_used < 0.05,1.5,0.5),, col=rgb(0,0.5,0), xlim=c(0,0.5),ylim=c(-2.5,2.5))#
	points(CIGm_4bff$beta~(CIGm_4bff$af), cex = ifelse(CIGm_4bff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
	abline(h=0)#
plot(	   CIGp_4a$beta~(CIGp_4a$af), cex = ifelse(CIGp_4a$p_used < 0.05,1.5,0.5),col=rgb(0,0.5,0),  xlim=c(0,0.5),ylim=c(-2.5,2.5)) #
	points(CIGm_4a$beta~(CIGm_4a$af), cex = ifelse(CIGm_4a$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
	abline(h=0)#
plot(	   CIGp_4aff$beta~(CIGp_4aff$af), cex = ifelse(CIGp_4aff$p_used < 0.05,1.5,0.5), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-2.5,2.5)) #
	points(CIGm_4aff$beta~(CIGm_4aff$af), cex = ifelse(CIGm_4aff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	 mtext("Minor Allele Frequency",side=1, line=2)#
	abline(h=0)#
plot(	   CIGp_4f$beta~(CIGp_4f$af), cex = ifelse(CIGp_4f$p_used < 0.05,1.5,0.5), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-2.5,2.5)) #
	points(CIGm_4f$beta~(CIGm_4f$af), cex = ifelse(CIGm_4f$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
	abline(h=0)#
plot(	   CIGp_4fff$beta~(CIGp_4fff$af), cex = ifelse(CIGp_4fff$p_used < 0.05,1.5,0.5), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-2.5,2.5))#
	points(CIGm_4fff$beta~(CIGm_4fff$af), cex = ifelse(CIGm_4fff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	abline(h=0)#
legend(0.3,-1.7,c("Host","Microbe"),fill=c(rgb(0,0.5,0),rgb(0.5,0,0.5)),bty="n")#
dev.off()
par(mfrow=c(3,3))#
par(mar=c(1,1,1,1))#
par(oma=c(4,5,2,1))#
 for(i in 1:3){#
 plot( traitfit.4b[[i]]$rfitplnt~traitfit.4b[[i]]$rfitmicr,col=rgb(0,0,0), pch=1,xlim=c(0,0.0023),ylim=c(0,0.0023),cex=2.5)#
	points( traitfit.4bff[[i]]$rfitplnt~traitfit.4bff[[i]]$rfitmicr,col=rgb(0.5,0.5,0.5),pch=1 ,cex=1.5)#
	if(i==1){mtext("Microbe link none/indirect",side=2,line=3.5)}#
# 	rhoD <- round(cor(traitfit.4b[[i]]$rfitplnt,traitfit.4b[[i]]$rfitmicr),digits=2)#
	rhoI <- round(cor(traitfit.4bff[[i]]$rfitplnt,traitfit.4bff[[i]]$rfitmicr),digits=2)#
# 	text(0.0018,y=0.0005, bquote(rho==.(rhoD) ))#
		#because there's no error here, this is actually perfectly correlated! the link is weaker than the error, but it can't be infinite, so...#
	text(0.0018,y=0.0002, bquote(rho==.(rhoI) ),col=rgb(0.4,0.4,0.4))
}
for(i in 1:3){#
 plot( traitfit.4f[[i]]$rfitplnt~traitfit.4f[[i]]$rfitmicr,col=rgb(0,0,0), pch=1,xlim=c(0,0.0023),ylim=c(0,0.0023),cex=2.5)#
	points( traitfit.4fff[[i]]$rfitplnt~traitfit.4fff[[i]]$rfitmicr,col=rgb(0.5,0.5,0.5),pch=1 ,cex=1.5)#
	if(i==1){mtext("Different optima",side=2,line=3.5)}#
	if(i==2){mtext("Relative fitness of microbe",side=1,line=2)}#
	rhoD <- round(cor(traitfit.4f[[i]]$rfitplnt,traitfit.4f[[i]]$rfitmicr),digits=2)#
	rhoI <- round(cor(traitfit.4fff[[i]]$rfitplnt,traitfit.4fff[[i]]$rfitmicr),digits=2)#
	text(0.0018,y=0.0005, bquote(rho==.(rhoD) ))#
	text(0.0018,y=0.0002, bquote(rho==.(rhoI) ),col=rgb(0.4,0.4,0.4))#
# 	legend(0,0.0018,c("Direct only","With +FF"),pch=c(16,21),col=rgb(0,0,0),pt.bg=rgb(0.5,0.5,0.5),pt.cex=c(2.5,1),bty="n")#
	if(i==3){legend(0,0.0024,c("Direct only","With +FF"),pch=1,cex=c(2.5,1.5),col=c(rgb(0,0,0),rgb(0.5,0.5,0.5)) ,bty="n")}#
 }
for(i in 1:3){#
 plot( traitfit.4f[[i]]$rfitplnt~traitfit.4f[[i]]$rfitmicr,col=rgb(0,0,0), pch=1,xlim=c(0,0.0023),ylim=c(0,0.0023),cex=2.5)#
	points( traitfit.4fff[[i]]$rfitplnt~traitfit.4fff[[i]]$rfitmicr,col=rgb(0.5,0.5,0.5),pch=1 ,cex=1.5)#
	if(i==1){mtext("Different optima",side=2,line=3.5)}#
	if(i==2){mtext("Relative fitness of microbe",side=1,line=2)}#
	rhoD <- round(cor(traitfit.4f[[i]]$rfitplnt,traitfit.4f[[i]]$rfitmicr),digits=2)#
	rhoI <- round(cor(traitfit.4fff[[i]]$rfitplnt,traitfit.4fff[[i]]$rfitmicr),digits=2)#
	text(0.0018,y=0.0005, bquote(rho==.(rhoD) ))#
	text(0.0018,y=0.0002, bquote(rho==.(rhoI) ),col=rgb(0.4,0.4,0.4))#
# 	legend(0,0.0018,c("Direct only","With +FF"),pch=c(16,21),col=rgb(0,0,0),pt.bg=rgb(0.5,0.5,0.5),pt.cex=c(2.5,1),bty="n")#
	if(i==3){legend(0,0.0024,c("Direct only","With +FF"),pch=1,pt.cex=c(2.5,1.5),col=c(rgb(0,0,0),rgb(0.5,0.5,0.5)) ,bty="n")}
}
par(mfrow=c(3,3))#
par(mar=c(1,1,1,1))#
par(oma=c(4,5,2,1))#
for(i in 1:3){#
 xlims <- if(i==1){c(c(0,3.5))} else {c(1.4,3.6)}#
 plot( traitfit.4b[[i]]$rfitplnt~traitfit.4b[[i]]$traitexp,col=rgb(0,0.5,0,alpha=0.25), pch=16,xlim=xlims,ylim=c(0,0.0023),xaxt="n",cex=2.5)#
	points( traitfit.4b[[i]]$rfitmicr~traitfit.4b[[i]]$traitexp,col=rgb(0.5,0,0.5,alpha=0.25),pch=16 ,cex=2)#
	points( traitfit.4bff[[i]]$rfitplnt~traitfit.4bff[[i]]$traitexp,bg=rgb(0,0.5,0,alpha=1),col=rgb(0,0,0),pch=21 ,cex=1.5)#
	points( traitfit.4bff[[i]]$rfitmicr~traitfit.4bff[[i]]$traitexp,bg=rgb(0.5,0,0.5,alpha=1),col=rgb(0,0,0),pch=21 ,cex=1)#
	if(i==1){mtext("Microbe link none/indirect",side=2,line=3.5)}#
	mtext(paste("Generation ",genvec[[i]],sep=""),side=3,line=1.5)#
	abline(v=3,col=rgb(0,0.5,0,alpha=0.5),lwd=5)#
}	#
legend(1.3,0.0024,c("Host","Microbe"),fill=c(rgb(0,0.5,0),rgb(0.5,0,0.5)),bty="n")#
legend(1.4,0.0018,c("Direct only","With +FF"),pch=c(16,21),col=rgb(0,0,0,alpha=0.75),pt.bg=rgb(0.5,0.5,0.5),pt.cex=c(2.5,1),bty="n")
simsens <-read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/sens_reps_finalparameters.csv",header=T)#
#
pars <- simsens[,1:17]#
resps <- simsens[,18:26]#
#not all pars were modified#
mpars <- c(1,3,4,4, 9,10,12:16)#which then is manipulated one after the other, all but zoM here.#
#4 is twice because loci were manipulated separately then together.#
#
#####PASTED FROM 02 series. CHECK ACCURACY#
#copy paste design of 02 series that generated the files#
basevals <- c(2000,2000, 20,40, 3,3, 3,2,      0.75,0.75, 1000,       25, 0.0005,      0.2,    0.6,0.6,   0.1)#
#sim.cotrait(NP,NM,nlP,nlM,nlnP,nlnM,zoP,zoM,wP,wM,#
reps = 3#
# 		popsz.v <- c(10, 20, 50, 100, 200, 500, 1000, 2000, 5000,10000) #note turning up NM without NP is similar to increasing fiterr. increasing hosts without microbes makes no sense and is not possible.#
		popsz.v <- c(100, 500, 900, 1300, 1700, 2100, 2500, 2900, 3300, 4100) #note turning up NM without NP is similar to increasing fiterr. increasing hosts without microbes makes no sense and is not possible.#
# 		nlocP.v = c(2, 2, 4, 8, 16, 32, 64, 128, 256, 516),#  base set to 20 --#
		nloc.v = c(5, 10, 15, 20, 25, 30, 35, 40, 45, 50)# this has been lowered. since last run#
		w.v <- c(0.1, 0.15, 0.25, 0.5, 1, 1.25, 1.5, 2, 2.5 ,5)#seq(from = 0.25, to = 5,lenght.out=10) # set base at 0.75. #remains unchanged#
		Lambda.v <- seq(from = 35, to = 17, by =-2) #base 25#
		mutprb.v <- c( 0.0001, 0.0002, 0.0003,0.0004, 0.0005, 0.0006, 0.0007, 0.0008, 0.0009, 0.001 )#
# 		mutprb.v <- c(0.0000005,0.000001,0.000005,0.00001,0.00005,0.0001,0.0005,0.001,0.005,0.1) #base 0.0001#
		prbHorz.v <- seq(from =0, to =1, length.out=10)  #unchanged#
		alpha.v <- seq(from = 0.0, to =0.9, by =0.1) #base 0.6	 #unchanged#
parm <- data.frame(matrix(rep(basevals,times=111),nrow=111,byrow=T)) #81 is the base case#
parm[1:10,1] <- popsz.v#
parm[1:10,2] <- popsz.v#
parm[11:20,3] <- nloc.v #P#
parm[21:30,4] <- nloc.v #M#
parm[31:40,3] <- nloc.v #tog#
parm[31:40,4] <- nloc.v*2 #tog#
parm[41:50,9] <- w.v #P#
parm[51:60,10] <- w.v #M#
parm[61:70,12] <- Lambda.v#
parm[71:80,13] <- mutprb.v#
# parm[61:70,14] <- fiterrP.v#
# parm[71:80,15] <- fiterrM.v#
parm[81:90,14] <- prbHorz.v#
parm[91:100,15] <- alpha.v #repeated 2x! once for plants, once for microbes#
parm[101:110,16] <- alpha.v#
#111st and 222nd rows are the base state#
parm2 <- rbind(parm,parm)#
parm2[112:222,8] <- 3 #change to fitness agreement; now both have optima at 3#
##
params <- data.frame( # for axis variables, thus repeated rows#
		popsz.v = popsz.v,#
		nloc.vP = nloc.v,#
		nloc.vM = nloc.v,#
		nloc.v = nloc.v,#
		w.vP = w.v,#
		w.vM = w.v,#
		Lambda.v =Lambda.v,#
		mutprb.v = mutprb.v,#
		prbHorz.v = prbHorz.v,#
		alpha.vP= alpha.v,#
		alpha.vM= alpha.v#
)#
scenarios <- rep(1:nrow(parm2),each=reps)#
#remove rows are subtracted#
#there are 6 of 1110 that hav NA values in 3 columns. it seems to be because there is 0 additive genetic variance, so it can't calculate a proportion or a fitness correlation#
means.s <- lapply( 1:ncol(resps), function(r) matrix(#
					sapply((1:nrow(parm2) )[-c(111,222)], function(scenario) mean(resps[ which(scenarios==scenario) , r],na.rm=T) ), #
					ncol= 10, byrow = T)   )#
vars.s <- lapply( 1:ncol(resps), function(r) matrix(#
					sapply((1:nrow(parm2) )[-c(111,222)], function(scenario) var(resps[ which(scenarios==scenario) , r],na.rm=T) ), #
					ncol= 10, byrow = T)   )#
#
means <- lapply( means.s, function(r) cbind(r[1:length(mpars),],r[(length(mpars)+1):(length(mpars)*2),])  )#
vars <- lapply( vars.s, function(r) cbind(r[1:length(mpars),],r[(length(mpars)+1):(length(mpars)*2),])  )#
#
# #old 1:90, 91, 92:181, 182#
# # old 1 thru 900 are part of first set of sims, then 901-910 are base, 911-1810 are second set and 1811-1820 are second base with matched zopt#
# # however, each 10 rows together are the same simulation parameters.#
# #91:100; 101:110  1101#
# tmp <- lapply( 1:ncol(resps), function(r) sapply( 1:length(mpars), function(p) resps[ c( 1:100+(100*(p-1)) , 911:1010+(100*(p-1)) ) , r]) )#
# #each result of the sapply goes into a column#
# #
# tmp2<- lapply(1:length(tmp), function(r) t(sapply(seq(from=1, to =nrow(tmp[[r]]),by=10), function(startrow) colMeans(tmp[[r]][startrow:(startrow+9),]))  ) )#
# #each resul of the sapply goes into a column, but we want it to go into a row#
# #
# tmp2var<- lapply(1:length(tmp), function(r) t(sapply(seq(from=1, to =nrow(tmp[[r]]),by=10), function(startrow) sapply(1:length(mpars), function(clmn)  var(tmp[[r]][startrow:(startrow+9),clmn])  ))  ) )#
# #each resul of the sapply goes into a column, but we want it to go into a row#
# #
													#timesteps,Lambda,mutprb,prbHorz, pfP, pfM,FLFC,startmats = "n",zoptvects = "n")#
mains <- c("Fitness correlation","Vh/(Vh+Vm)",expression(Plant~V[A]~(V[H])),"Vm/(Vh+Vm)",expression(Microbe~V[A]~(V[H])),#
			expression(Mean~paste("|","D","|",sep="")~from~z[opt][H]),"Microbe avg |D| from zopt","Host terminal slope", "Microbe terminal slope")#
# mains <- c("Plant Va (Vp)","Microbe Va (Vm)",#
# 			"Plant avg |D| from Zopt","Microbe avg |D| from Zopt",#
# 			"plant terminal slope", "microbe terminal slope")#
#
ylabs <- c(expression(alpha[M]),expression(alpha[H]),expression(P[hrz]),#
			expression(P[mu]),#
			expression(lambda),expression(omega[M]),expression(omega[H]),#
			expression(L),expression(L[M]),expression(L[H]),expression(N))#
# y2labs <- c( paste(pfP.v,collapse=","), paste(pfP.v,collapse=","), paste(round(prbHorz.v,digits=2),collapse=","),#
# 			paste(mutprb.v,collapse=","),  #
# 			paste(Lambda.v,collapse=","), paste(wM.v,collapse=","), paste(wP.v,collapse=","),#
# 			paste(nloc.v,collapse=","), paste(popsz.v,collapse=",") )#
y2labs <- c(paste(params[c(1,10),11],collapse="-"), paste(params[c(1,10),10],collapse="-"), #
			paste(params[c(1,10),9],collapse="-"), paste(params[c(1,10),8],collapse="-"), paste(round(params[c(1,10),7],digits=2),collapse="-"),#
			paste(params[c(1,10),6],collapse="-"),  #
			paste(params[c(1,10),5],collapse="-"), paste(params[c(1,10),4],collapse="-"), paste(params[c(1,10),3],collapse="-"),#
			paste(params[c(1,10),2],collapse="-"), paste(params[c(1,10),1],collapse="-") )#
#the both together label is problematic...microbes are 2x plants (hosts)#
#
rb <- colorRampPalette(c( rgb(1,0,0), rgb(1,1,1), rgb(0,0,1) ))#
wb <- colorRampPalette(c( rgb(1,1,1), rgb(0,0,1) ))#
wb2 <- colorRampPalette(c( rgb(1,1,1), rgb(0,0,0.75,alpha=0.75), rgb(0,0,1) ))#
#
indices <- c(1,3,5,6) #parts of tmp2 or responses that we are including.
layout(matrix(c(1:5),ncol=5,byrow=T),widths=c(2,2,2,2,1.1))#
par(mar=c(1,0,3,1))#
par(oma=c(2,3,0,6))#
for(i in indices){#
	if(i%in%(8:9)){#
				intend <- max(abs(range(means[8:9])))#
				zlims <- c(-1*intend, intend)#artificial range. if change sims this may need to change#
				cols <- rb(50)#
			} else if(i == 1){#
				zlims <- c(-1,1)#
				cols <- rb(50)#
			} else{#
				zlims <- range(means[[i]])#
				cols <- wb(50)#
			}#
	image(t(means[[i]]),main="",xaxt="n",yaxt="n",zlim=zlims,col=cols)#
	abline(v=0.5)#
	mtext(mains[i],side=3,line=1,cex=0.75)#
	axis(side=1,at = c(0.22,0.73),lab=c(expression("Z"[opt][H]>"Z"[opt][M]),expression("Z"[opt][H]*'='*"Z"[opt][M]) ) ) #
#	if(i%in%c(7:9)){axis(side=1,at = c(0.22,0.73),lab=c(expression("z"[opt][P]>"z"[opt][M]),expression("z"[opt][P]*'='*"z"[opt][M]) ) ) }#
	if(i==1){axis(side=2,at = seq(from=0,to=1,length.out=length(mpars)),lab=rev(ylabs),las=2)}#
#	if(i%in%c(6,9)){axis(side=4,at = seq(from=0,to=1,length.out=length(mpars)),lab=rev(y2labs),las=2)}#
	mtext(paste(round(zlims,digits=3),collapse=" to "),side=3,line=0.2,cex=0.5)#
}#
image(t(as.matrix(t(params)/colSums(params))),main="",xaxt="n",yaxt="n")#
# 	axis(side=1,at = c(0.22,0.73),lab=c(expression("z"[opt][H]>"z"[opt][M]),expression("z"[opt][H]*'='*"z"[opt][M]) ) ) #
# 	axis(side=2,at = seq(from=0,to=1,length.out=length(mpars)),lab=rev(ylabs),las=2)#
	axis(side=4,at = seq(from=0,to=1,length.out=length(mpars)),lab=rev(y2labs),las=2)#
	mtext("Parameter Values",side=3,line=0.5,cex=0.75)
str(simsens)
222*3
library(SDMTools)#legend.gradient#
bufferX <- function(x,p) { #
	r<- range(x,na.rm=T)#
	add <- c(-1,1)*p*(r[2]-r[1])#
	return(r+add)#
	}#
#
range01=function(x){#
newnums=(x-min(x,na.rm=T))/(max(x,na.rm=T)-min(x,na.rm=T))#
return(newnums)#
}#
#
reps <- 5 ## MUST SET NUMBER OF REPS.#
#
# simsens <-read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/sens_reps_feedbackparameters.csv",header=T)#
#
simsens <-read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/sens_reps_feedbackparameters_holdplant.csv",header=T)#
#
pars <- simsens[,1:17] ##
resps <- simsens[,18:26]#
mpars <- c(7,8,9,10,15,16)#now its only  -- ws, zs, and pfs#
#
#1 - 2800#
# however, each 10 rows together are the same simulation parameters.#
parbyreps <- as.data.frame(t(sapply(1:280, function(p) colMeans(  pars[c(1:reps+reps*(p-1)),] ) )))#
respsbyreps <- as.data.frame(t(sapply(1:280, function(p) colMeans(  resps[c(1:reps+reps*(p-1)),] ) )))#
respsbyrepsV <- as.data.frame(t(sapply(1:280, function(p) sapply(1:ncol(resps), function(colmn) var(resps[c(1:reps+reps*(p-1)),colmn] ) )  )))#
#
respsbyreps$ltVp <- log(respsbyreps$tVp)#
respsbyreps$ltVm <- log(respsbyreps$tVm)#
#
rb <- colorRampPalette(c( rgb(1,0,0), rgb(1,1,1), rgb(0,0,1) ))#
wb <- colorRampPalette(c( rgb(1,1,1), rgb(0,0,1) ))#
ylabv <- c( bquote("Fitness"~rho),"pVh",bquote("V"[H]),"pVm",bquote("V"[M]),#
			expression(paste("|","D","|",sep="")~from~Z[opt][H]),expression(paste("|","D","|",sep="")~from~Z[opt][H]),#
			bquote("Slope Z"[H]),"tcoefM", #
			bquote("log V "[H]),bquote("log V"[M]))#
		# c("Fitness correlation",expression(Plant~V[A]~(V[P])),#
# 			expression(Mean~paste("|","D","|",sep="")~from~Z[opt][P]),"Microbe avg |D| from Zopt","Plant terminal slope", "Microbe terminal slope")
#rofint <- c(1,3,5,6,8,9)#
rofint <- c(10,11,1,8,6)#
par(mfrow=c(length(rofint),length(unique(parbyreps$zoP)))) #
par(mar =c(0,0,0,0))#
par(oma = c(4,10,4,1))#
for(i in rofint){#
	for(j in unique(parbyreps$zoP)){#
		if(i ==1){#
			ranges <- c(-1.1,1.1)#
			} else if(i%in%c(6,7)){#
			ranges <- c(-0.3,3.3)#
			} else if(i == 5){ #high variance in this one, I think its a "real" phenomena, just messes with visualization!#
			ranges <- c(0,0.05) #currently plot log instead to avoid issue#
			} else {ranges <- bufferX(range(respsbyreps[,i]),0.1)} #[parby10$zoM==j]; keeping on same scale means only 1 y axis#
		if(i == rofint[1]){mains <- bquote("Z"[opt][H]==.(j))} else{mains <- ""}#
		if(i == rofint[1]){mains2 <- bquote("Z"[opt][M]==2)} else{mains2 <- ""}#
		if(j==  unique(parbyreps$zoP)[1]){ylabs <- ylabv[i]} else{ ylabs <- ""}#
		plot(respsbyreps[,i][parbyreps$zoP==j]~I(1-parbyreps$pfM[parbyreps$zoP==j]),ylim=ranges,#
# 		plot(respsby10[,i][parby10$zoM==j]~I(parby10$pfM[parby10$zoM==j]),ylim=ranges,#
	  		col=rgb(range01(parbyreps$wM[parbyreps$zoP==j]),0,0,alpha=0.5),pch=16,#
	  		ylab="",xlab="",main ="", #
	  		yaxt = ifelse(j== unique(parbyreps$zoP)[1],"s","n"), xaxt = ifelse(i==rofint[length(rofint)], "s","n") )#
	  	mtext(ylabs,side=2,line=2,las=1)#
	  	mtext(mains,side=3,line=1.5)#
	  	if(j == 4 & i==tail(rofint,1)) {mtext(bquote("1-alpha"[M]),side=1,line=2.5,adj=-0.3)}#
# 	  	if(j == 4 & i==tail(rofint,1)) {mtext(bquote("alpha"[M]),side=1,line=1.5,adj=-0.5)}#
	  	mtext(mains2,side=3,line=0.25)#
		if(i%in%c(1,8,9)) {abline(h=0,lty=2)}#
		abline(v=0.6,lty=3,col=rgb(0,0,0,alpha=0.5))#
	}#
}#
legend.gradient(cbind(c(0.6,0.7,0.7,0.6),c(0.7,0.7,2.7,2.7)),cols=rgb(range01(unique(parbyreps$wM)),0,0,alpha=0.75),title=bquote(omega[M]),limits=c("0.25","1.75"))#
mtext(bquote(1-alpha[M]),side=1,line=3,adj=2)
str(simsens)
280*5
pdf("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/feedbacks_mostres.pdf",height=8,width=7)#
#rofint <- c(1,3,5,6,8,9)#
rofint <- c(10,11,1,8,6)#
par(mfrow=c(length(rofint),length(unique(parbyreps$zoP)))) #
par(mar =c(0,0,0,0))#
par(oma = c(4,10,4,1))#
for(i in rofint){#
	for(j in unique(parbyreps$zoP)){#
		if(i ==1){#
			ranges <- c(-1.1,1.1)#
			} else if(i%in%c(6,7)){#
			ranges <- c(-0.3,3.3)#
			} else if(i == 5){ #high variance in this one, I think its a "real" phenomena, just messes with visualization!#
			ranges <- c(0,0.05) #currently plot log instead to avoid issue#
			} else {ranges <- bufferX(range(respsbyreps[,i]),0.1)} #[parby10$zoM==j]; keeping on same scale means only 1 y axis#
		if(i == rofint[1]){mains <- bquote("Z"[opt][H]==.(j))} else{mains <- ""}#
		if(i == rofint[1]){mains2 <- bquote("Z"[opt][M]==2)} else{mains2 <- ""}#
		if(j==  unique(parbyreps$zoP)[1]){ylabs <- ylabv[i]} else{ ylabs <- ""}#
		plot(respsbyreps[,i][parbyreps$zoP==j]~I(1-parbyreps$pfM[parbyreps$zoP==j]),ylim=ranges,#
# 		plot(respsby10[,i][parby10$zoM==j]~I(parby10$pfM[parby10$zoM==j]),ylim=ranges,#
	  		col=rgb(range01(parbyreps$wM[parbyreps$zoP==j]),0,0,alpha=0.5),pch=16,#
	  		ylab="",xlab="",main ="", #
	  		yaxt = ifelse(j== unique(parbyreps$zoP)[1],"s","n"), xaxt = ifelse(i==rofint[length(rofint)], "s","n") )#
	  	mtext(ylabs,side=2,line=2,las=1)#
	  	mtext(mains,side=3,line=1.5)#
	  	if(j == 4 & i==tail(rofint,1)) {mtext(bquote("1-alpha"[M]),side=1,line=2.5,adj=-0.3)}#
# 	  	if(j == 4 & i==tail(rofint,1)) {mtext(bquote("alpha"[M]),side=1,line=1.5,adj=-0.5)}#
	  	mtext(mains2,side=3,line=0.25)#
		if(i%in%c(1,8,9)) {abline(h=0,lty=2)}#
		abline(v=0.6,lty=3,col=rgb(0,0,0,alpha=0.5))#
	}#
}#
legend.gradient(cbind(c(0.6,0.7,0.7,0.6),c(0.7,0.7,2.7,2.7)),cols=rgb(range01(unique(parbyreps$wM)),0,0,alpha=0.75),title=bquote(omega[M]),limits=c("0.25","1.75"))#
mtext(bquote(1-alpha[M]),side=1,line=3,adj=2)#
dev.off()
simsens <-read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/sens_reps_finalparameters.csv",header=T)#
#
pars <- simsens[,1:17]#
resps <- simsens[,18:26]#
#not all pars were modified#
mpars <- c(1,3,4,4, 9,10,12:16)#which then is manipulated one after the other, all but zoM here.#
#4 is twice because loci were manipulated separately then together.#
#
#####PASTED FROM 02 series. CHECK ACCURACY#
#copy paste design of 02 series that generated the files#
basevals <- c(2000,2000, 20,40, 3,3, 3,2,      0.75,0.75, 1000,       25, 0.0005,      0.2,    0.6,0.6,   0.1)#
#sim.cotrait(NP,NM,nlP,nlM,nlnP,nlnM,zoP,zoM,wP,wM,#
reps = 3#
# 		popsz.v <- c(10, 20, 50, 100, 200, 500, 1000, 2000, 5000,10000) #note turning up NM without NP is similar to increasing fiterr. increasing hosts without microbes makes no sense and is not possible.#
		popsz.v <- c(100, 500, 900, 1300, 1700, 2100, 2500, 2900, 3300, 4100) #note turning up NM without NP is similar to increasing fiterr. increasing hosts without microbes makes no sense and is not possible.#
# 		nlocP.v = c(2, 2, 4, 8, 16, 32, 64, 128, 256, 516),#  base set to 20 --#
		nloc.v = c(5, 10, 15, 20, 25, 30, 35, 40, 45, 50)# this has been lowered. since last run#
		w.v <- c(0.1, 0.15, 0.25, 0.5, 1, 1.25, 1.5, 2, 2.5 ,5)#seq(from = 0.25, to = 5,lenght.out=10) # set base at 0.75. #remains unchanged#
		Lambda.v <- seq(from = 35, to = 17, by =-2) #base 25#
		mutprb.v <- c( 0.0001, 0.0002, 0.0003,0.0004, 0.0005, 0.0006, 0.0007, 0.0008, 0.0009, 0.001 )#
# 		mutprb.v <- c(0.0000005,0.000001,0.000005,0.00001,0.00005,0.0001,0.0005,0.001,0.005,0.1) #base 0.0001#
		prbHorz.v <- seq(from =0, to =1, length.out=10)  #unchanged#
		alpha.v <- seq(from = 0.0, to =0.9, by =0.1) #base 0.6	 #unchanged#
parm <- data.frame(matrix(rep(basevals,times=111),nrow=111,byrow=T)) #81 is the base case#
parm[1:10,1] <- popsz.v#
parm[1:10,2] <- popsz.v#
parm[11:20,3] <- nloc.v #P#
parm[21:30,4] <- nloc.v #M#
parm[31:40,3] <- nloc.v #tog#
parm[31:40,4] <- nloc.v*2 #tog#
parm[41:50,9] <- w.v #P#
parm[51:60,10] <- w.v #M#
parm[61:70,12] <- Lambda.v#
parm[71:80,13] <- mutprb.v#
# parm[61:70,14] <- fiterrP.v#
# parm[71:80,15] <- fiterrM.v#
parm[81:90,14] <- prbHorz.v#
parm[91:100,15] <- alpha.v #repeated 2x! once for plants, once for microbes#
parm[101:110,16] <- alpha.v#
#111st and 222nd rows are the base state#
parm2 <- rbind(parm,parm)#
parm2[112:222,8] <- 3 #change to fitness agreement; now both have optima at 3#
##
params <- data.frame( # for axis variables, thus repeated rows#
		popsz.v = popsz.v,#
		nloc.vP = nloc.v,#
		nloc.vM = nloc.v,#
		nloc.v = nloc.v,#
		w.vP = w.v,#
		w.vM = w.v,#
		Lambda.v =Lambda.v,#
		mutprb.v = mutprb.v,#
		prbHorz.v = prbHorz.v,#
		alpha.vP= alpha.v,#
		alpha.vM= alpha.v#
)#
scenarios <- rep(1:nrow(parm2),each=reps)#
#remove rows are subtracted#
#there are 6 of 1110 that hav NA values in 3 columns. it seems to be because there is 0 additive genetic variance, so it can't calculate a proportion or a fitness correlation#
means.s <- lapply( 1:ncol(resps), function(r) matrix(#
					sapply((1:nrow(parm2) )[-c(111,222)], function(scenario) mean(resps[ which(scenarios==scenario) , r],na.rm=T) ), #
					ncol= 10, byrow = T)   )#
vars.s <- lapply( 1:ncol(resps), function(r) matrix(#
					sapply((1:nrow(parm2) )[-c(111,222)], function(scenario) var(resps[ which(scenarios==scenario) , r],na.rm=T) ), #
					ncol= 10, byrow = T)   )#
#
means <- lapply( means.s, function(r) cbind(r[1:length(mpars),],r[(length(mpars)+1):(length(mpars)*2),])  )#
vars <- lapply( vars.s, function(r) cbind(r[1:length(mpars),],r[(length(mpars)+1):(length(mpars)*2),])  )#
#
# #old 1:90, 91, 92:181, 182#
# # old 1 thru 900 are part of first set of sims, then 901-910 are base, 911-1810 are second set and 1811-1820 are second base with matched zopt#
# # however, each 10 rows together are the same simulation parameters.#
# #91:100; 101:110  1101#
# tmp <- lapply( 1:ncol(resps), function(r) sapply( 1:length(mpars), function(p) resps[ c( 1:100+(100*(p-1)) , 911:1010+(100*(p-1)) ) , r]) )#
# #each result of the sapply goes into a column#
# #
# tmp2<- lapply(1:length(tmp), function(r) t(sapply(seq(from=1, to =nrow(tmp[[r]]),by=10), function(startrow) colMeans(tmp[[r]][startrow:(startrow+9),]))  ) )#
# #each resul of the sapply goes into a column, but we want it to go into a row#
# #
# tmp2var<- lapply(1:length(tmp), function(r) t(sapply(seq(from=1, to =nrow(tmp[[r]]),by=10), function(startrow) sapply(1:length(mpars), function(clmn)  var(tmp[[r]][startrow:(startrow+9),clmn])  ))  ) )#
# #each resul of the sapply goes into a column, but we want it to go into a row#
# #
													#timesteps,Lambda,mutprb,prbHorz, pfP, pfM,FLFC,startmats = "n",zoptvects = "n")#
mains <- c("Fitness correlation","Vh/(Vh+Vm)",expression(Plant~V[A]~(V[H])),"Vm/(Vh+Vm)",expression(Microbe~V[A]~(V[H])),#
			expression(Mean~paste("|","D","|",sep="")~from~z[opt][H]),"Microbe avg |D| from zopt","Host terminal slope", "Microbe terminal slope")#
# mains <- c("Plant Va (Vp)","Microbe Va (Vm)",#
# 			"Plant avg |D| from Zopt","Microbe avg |D| from Zopt",#
# 			"plant terminal slope", "microbe terminal slope")#
#
ylabs <- c(expression(alpha[M]),expression(alpha[H]),expression(P[hrz]),#
			expression(P[mu]),#
			expression(lambda),expression(omega[M]),expression(omega[H]),#
			expression(L),expression(L[M]),expression(L[H]),expression(N))#
# y2labs <- c( paste(pfP.v,collapse=","), paste(pfP.v,collapse=","), paste(round(prbHorz.v,digits=2),collapse=","),#
# 			paste(mutprb.v,collapse=","),  #
# 			paste(Lambda.v,collapse=","), paste(wM.v,collapse=","), paste(wP.v,collapse=","),#
# 			paste(nloc.v,collapse=","), paste(popsz.v,collapse=",") )#
y2labs <- c(paste(params[c(1,10),11],collapse="-"), paste(params[c(1,10),10],collapse="-"), #
			paste(params[c(1,10),9],collapse="-"), paste(params[c(1,10),8],collapse="-"), paste(round(params[c(1,10),7],digits=2),collapse="-"),#
			paste(params[c(1,10),6],collapse="-"),  #
			paste(params[c(1,10),5],collapse="-"), paste(params[c(1,10),4],collapse="-"), paste(params[c(1,10),3],collapse="-"),#
			paste(params[c(1,10),2],collapse="-"), paste(params[c(1,10),1],collapse="-") )#
#the both together label is problematic...microbes are 2x plants (hosts)#
#
rb <- colorRampPalette(c( rgb(1,0,0), rgb(1,1,1), rgb(0,0,1) ))#
wb <- colorRampPalette(c( rgb(1,1,1), rgb(0,0,1) ))#
wb2 <- colorRampPalette(c( rgb(1,1,1), rgb(0,0,0.75,alpha=0.75), rgb(0,0,1) ))#
#
indices <- c(1,3,5,6) #parts of tmp2 or responses that we are including.
dim(simsens)
layout(matrix(c(1:5),ncol=5,byrow=T),widths=c(2,2,2,2,1.1))#
par(mar=c(1,0,3,1))#
par(oma=c(2,3,0,6))#
for(i in indices){#
	if(i%in%(8:9)){#
				intend <- max(abs(range(means[8:9])))#
				zlims <- c(-1*intend, intend)#artificial range. if change sims this may need to change#
				cols <- rb(50)#
			} else if(i == 1){#
				zlims <- c(-1,1)#
				cols <- rb(50)#
			} else{#
				zlims <- range(means[[i]])#
				cols <- wb(50)#
			}#
	image(t(means[[i]]),main="",xaxt="n",yaxt="n",zlim=zlims,col=cols)#
	abline(v=0.5)#
	mtext(mains[i],side=3,line=1,cex=0.75)#
	axis(side=1,at = c(0.22,0.73),lab=c(expression("Z"[opt][H]>"Z"[opt][M]),expression("Z"[opt][H]*'='*"Z"[opt][M]) ) ) #
#	if(i%in%c(7:9)){axis(side=1,at = c(0.22,0.73),lab=c(expression("z"[opt][P]>"z"[opt][M]),expression("z"[opt][P]*'='*"z"[opt][M]) ) ) }#
	if(i==1){axis(side=2,at = seq(from=0,to=1,length.out=length(mpars)),lab=rev(ylabs),las=2)}#
#	if(i%in%c(6,9)){axis(side=4,at = seq(from=0,to=1,length.out=length(mpars)),lab=rev(y2labs),las=2)}#
	mtext(paste(round(zlims,digits=3),collapse=" to "),side=3,line=0.2,cex=0.5)#
}#
image(t(as.matrix(t(params)/colSums(params))),main="",xaxt="n",yaxt="n")#
# 	axis(side=1,at = c(0.22,0.73),lab=c(expression("z"[opt][H]>"z"[opt][M]),expression("z"[opt][H]*'='*"z"[opt][M]) ) ) #
# 	axis(side=2,at = seq(from=0,to=1,length.out=length(mpars)),lab=rev(ylabs),las=2)#
	axis(side=4,at = seq(from=0,to=1,length.out=length(mpars)),lab=rev(y2labs),las=2)#
	mtext("Parameter Values",side=3,line=0.5,cex=0.75)
layout(matrix(c(1:5),ncol=5,byrow=T),widths=c(2,2,2,2,1.1))#
par(mar=c(1,0,3,1))#
par(oma=c(2,3,0,6))#
for(i in indices){#
	zlims <- range(vars[[i]])#
	cols <- wb(50)#
	image(t(vars[[i]]),main="",xaxt="n",yaxt="n",zlim=zlims,col=cols)#
	abline(v=0.5)#
	mtext(mains[i],side=3,line=1,cex=0.75)#
	axis(side=1,at = c(0.22,0.73),lab=c(expression("Z"[opt][H]>"Z"[opt][M]),expression("Z"[opt][H]*'='*"Z"[opt][M]) ) ) #
#	if(i%in%c(7:9)){axis(side=1,at = c(0.22,0.73),lab=c(expression("z"[opt][P]>"z"[opt][M]),expression("z"[opt][P]*'='*"z"[opt][M]) ) ) }#
	if(i==1){axis(side=2,at = seq(from=0,to=1,length.out=length(mpars)),lab=rev(ylabs),las=2)}#
#	if(i%in%c(6,9)){axis(side=4,at = seq(from=0,to=1,length.out=length(mpars)),lab=rev(y2labs),las=2)}#
	mtext(paste(round(zlims,digits=4),collapse=" to "),side=3,line=0.2,cex=0.5)#
}#
image(t(as.matrix(t(params)/colSums(params))),main="",xaxt="n",yaxt="n")#
# 	axis(side=1,at = c(0.22,0.73),lab=c(expression("z"[opt][H]>"z"[opt][M]),expression("z"[opt][H]*'='*"z"[opt][M]) ) ) #
	#axis(side=2,at = seq(from=0,to=1,length.out=length(mpars)),lab=rev(ylabs),las=2)#
	axis(side=4,at = seq(from=0,to=1,length.out=length(mpars)),lab=rev(y2labs),las=2)#
	mtext("Parameter Values",side=3,line=0.5,cex=0.75)
pdf("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/sens_reps_finalparameters.pdf",width=9,height=2)#
layout(matrix(c(1:5),ncol=5,byrow=T),widths=c(2,2,2,2,1.1))#
par(mar=c(1,0,3,1))#
par(oma=c(2,3,0,6))#
for(i in indices){#
	if(i%in%(8:9)){#
				intend <- max(abs(range(means[8:9])))#
				zlims <- c(-1*intend, intend)#artificial range. if change sims this may need to change#
				cols <- rb(50)#
			} else if(i == 1){#
				zlims <- c(-1,1)#
				cols <- rb(50)#
			} else{#
				zlims <- range(means[[i]])#
				cols <- wb(50)#
			}#
	image(t(means[[i]]),main="",xaxt="n",yaxt="n",zlim=zlims,col=cols)#
	abline(v=0.5)#
	mtext(mains[i],side=3,line=1,cex=0.75)#
	axis(side=1,at = c(0.22,0.73),lab=c(expression("Z"[opt][H]>"Z"[opt][M]),expression("Z"[opt][H]*'='*"Z"[opt][M]) ) ) #
#	if(i%in%c(7:9)){axis(side=1,at = c(0.22,0.73),lab=c(expression("z"[opt][P]>"z"[opt][M]),expression("z"[opt][P]*'='*"z"[opt][M]) ) ) }#
	if(i==1){axis(side=2,at = seq(from=0,to=1,length.out=length(mpars)),lab=rev(ylabs),las=2)}#
#	if(i%in%c(6,9)){axis(side=4,at = seq(from=0,to=1,length.out=length(mpars)),lab=rev(y2labs),las=2)}#
	mtext(paste(round(zlims,digits=3),collapse=" to "),side=3,line=0.2,cex=0.5)#
}#
image(t(as.matrix(t(params)/colSums(params))),main="",xaxt="n",yaxt="n")#
# 	axis(side=1,at = c(0.22,0.73),lab=c(expression("z"[opt][H]>"z"[opt][M]),expression("z"[opt][H]*'='*"z"[opt][M]) ) ) #
# 	axis(side=2,at = seq(from=0,to=1,length.out=length(mpars)),lab=rev(ylabs),las=2)#
	axis(side=4,at = seq(from=0,to=1,length.out=length(mpars)),lab=rev(y2labs),las=2)#
	mtext("Parameter Values",side=3,line=0.5,cex=0.75)#
dev.off()#
pdf("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/sens_reps_finalparameters_vars.pdf",width=9,height=2)#
layout(matrix(c(1:5),ncol=5,byrow=T),widths=c(2,2,2,2,1.1))#
par(mar=c(1,0,3,1))#
par(oma=c(2,3,0,6))#
for(i in indices){#
	zlims <- range(vars[[i]])#
	cols <- wb(50)#
	image(t(vars[[i]]),main="",xaxt="n",yaxt="n",zlim=zlims,col=cols)#
	abline(v=0.5)#
	mtext(mains[i],side=3,line=1,cex=0.75)#
	axis(side=1,at = c(0.22,0.73),lab=c(expression("Z"[opt][H]>"Z"[opt][M]),expression("Z"[opt][H]*'='*"Z"[opt][M]) ) ) #
#	if(i%in%c(7:9)){axis(side=1,at = c(0.22,0.73),lab=c(expression("z"[opt][P]>"z"[opt][M]),expression("z"[opt][P]*'='*"z"[opt][M]) ) ) }#
	if(i==1){axis(side=2,at = seq(from=0,to=1,length.out=length(mpars)),lab=rev(ylabs),las=2)}#
#	if(i%in%c(6,9)){axis(side=4,at = seq(from=0,to=1,length.out=length(mpars)),lab=rev(y2labs),las=2)}#
	mtext(paste(round(zlims,digits=4),collapse=" to "),side=3,line=0.2,cex=0.5)#
}#
image(t(as.matrix(t(params)/colSums(params))),main="",xaxt="n",yaxt="n")#
# 	axis(side=1,at = c(0.22,0.73),lab=c(expression("z"[opt][H]>"z"[opt][M]),expression("z"[opt][H]*'='*"z"[opt][M]) ) ) #
	#axis(side=2,at = seq(from=0,to=1,length.out=length(mpars)),lab=rev(ylabs),las=2)#
	axis(side=4,at = seq(from=0,to=1,length.out=length(mpars)),lab=rev(y2labs),las=2)#
	mtext("Parameter Values",side=3,line=0.5,cex=0.75)#
dev.off()
as.matrix(t(params)/colSums(params))
addcols <- function(outfile, k=NULL){#
	outfile$known_pos <- sapply(outfile$rs, function(z) length(grep("c",z))==1)#
	outfile$known_neg <- !outfile$known_pos#
	if(is.null(k)){#
p <- findInterval(outfile$p_score,sort(outfile$p_score))/nrow(outfile)#
#  	p <- findInterval(outfile$beta,sort(outfile$beta))/nrow(outfile) #fewer total loci identified in both, regardless of how count. BUT makes the holo analysis more effective.#
#
	} else if(k==TRUE){#
		p <- outfile$p_score#
	}#
	outfile$p_used <- p #
	outfile$false_pos <- (p < 0.05 & outfile$known_pos == F)#
	outfile$true_pos <-  (p < 0.05 & outfile$known_pos == T)#
	outfile$true_neg <-  (p > 0.05 & outfile$known_pos == F)#
	outfile$false_neg <- (p > 0.05 & outfile$known_pos == T)#
#
	known_Ppos <- sapply(outfile$rs, function(z) length(grep("cP",z))==1)#
	known_Pn <- sapply(outfile$rs, function(z) length(grep("nP",z))==1)#
	known_Mpos <- sapply(outfile$rs, function(z) length(grep("cM",z))==1)#
	known_Mn <- sapply(outfile$rs, function(z) length(grep("nM",z))==1)#
	catsnp <- rep(NA,times=nrow(outfile))#
		if(any(known_Ppos)==TRUE){catsnp[known_Ppos] <- "Pcausal"}#
		if(any(known_Mpos)==TRUE){catsnp[known_Mpos] <- "Mcausal"}#
		if(any(known_Pn)==TRUE){catsnp[known_Pn] <- "Pneut"}#
		if(any(known_Mn)==TRUE){catsnp[known_Mn] <- "Mneut"}#
	outfile$catsnp <- catsnp#
	return(outfile)#
}#
#
summarizeSNPcalls <- function(outfilewcols){#
	startcol <- grep("false_pos",colnames(outfilewcols))#
	conttabprp <- matrix(#
		colSums(outfilewcols[,startcol:(startcol+3)]) /#
		rep(c(sum(outfilewcols$known_neg),sum(outfilewcols$known_pos)),times=2),  #
		#c(f+ t+ t- f- ) /  c(allneg, allpos, allneg,allpos)#
		byrow=T,ncol=2#
		)#
	conttab <- 	colSums(outfilewcols[,startcol:(startcol+3)])#
	possout <- c("MneutTRUE",  "McausalTRUE",   "MneutFALSE",    "McausalFALSE", "PneutTRUE",  "PcausalTRUE",   "PneutFALSE",    "PcausalFALSE")#
	cattots <- sapply(1:length(possout), function(o)  sum(paste(outfilewcols$catsnp,outfilewcols$p_used < 0.05,sep="")==possout[o] ) )#
	names(cattots)<-possout#
	catshouldbesums <- c(  rep( c(sum(cattots[c(1,3)]),sum(cattots[c(2,4)] )),times=2 )  ,  #
	rep( c(sum(cattots[c(5,7)]),sum(cattots[c(6,8)])),times=2 ) ) #
	catshouldbesums[is.na(catshouldbesums)] <- 0#
	return(list(conttabprp=conttabprp,conttab=conttab, cattots=cattots,catshouldbesums=catshouldbesums))#
}#
#
connectIG <- function(inputlociinfo, inputgwasinfo){#
	matchloci <- sapply(1:nrow(inputlociinfo), function(z) which(as.character(inputgwasinfo$rs) == as.character(inputlociinfo$locusname[z])))#
	is.inHABA <- sapply(1:length(matchloci), function(z) ifelse(length(matchloci[[z]])==1,matchloci[[z]],NA))#
	connectedinfo <- inputgwasinfo[is.inHABA,]#
	return(connectedinfo)#
}#
plantout4b <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/PLANTgemmaABO4b.assoc.txt",header=T,sep="\t")#
plantout4bff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/PLANTgemmaABO4bff.assoc.txt",header=T,sep="\t")#
plantout4a <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/PLANTgemmaABO4a.assoc.txt",header=T,sep="\t")#
plantout4aff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/PLANTgemmaABO4aff.assoc.txt",header=T,sep="\t")#
plantout4f <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/PLANTgemmaABO4f.assoc.txt",header=T,sep="\t")#
plantout4fff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/PLANTgemmaABO4fff.assoc.txt",header=T,sep="\t")#
microut4b <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/MICRgemmaABO4b.assoc.txt",header=T,sep="\t")#
microut4bff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/MICRgemmaABO4bff.assoc.txt",header=T,sep="\t")#
microut4a <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/MICRgemmaABO4a.assoc.txt",header=T,sep="\t")#
microut4aff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/MICRgemmaABO4aff.assoc.txt",header=T,sep="\t")#
microut4f <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/MICRgemmaABO4f.assoc.txt",header=T,sep="\t")#
microut4fff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/MICRgemmaABO4fff.assoc.txt",header=T,sep="\t")#
#
plantout4b <- addcols(plantout4b)#
plantout4bff <- addcols(plantout4bff)#
plantout4a <- addcols(plantout4a)#
plantout4aff <- addcols(plantout4aff)#
plantout4f <- addcols(plantout4f)#
plantout4fff <- addcols(plantout4fff)#
microut4b <- addcols(microut4b)#
microut4bff <- addcols(microut4bff)#
microut4a <- addcols(microut4a)#
microut4aff <- addcols(microut4aff)#
microut4f <- addcols(microut4f)#
microut4fff <- addcols(microut4fff)#
#
summarizep4b  <- summarizeSNPcalls(plantout4b)#
summarizep4bff  <- summarizeSNPcalls(plantout4bff)#
summarizep4a  <- summarizeSNPcalls(plantout4a)#
summarizep4aff  <- summarizeSNPcalls(plantout4aff)#
summarizep4f  <- summarizeSNPcalls(plantout4f)#
summarizep4fff  <- summarizeSNPcalls(plantout4fff)#
summarizem4b  <- summarizeSNPcalls(microut4b)#
summarizem4bff  <- summarizeSNPcalls(microut4bff)#
summarizem4a  <- summarizeSNPcalls(microut4a)#
summarizem4aff  <- summarizeSNPcalls(microut4aff)#
summarizem4f  <- summarizeSNPcalls(microut4f)#
summarizem4fff  <- summarizeSNPcalls(microut4fff)#
#
plantLinfo4b <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/plantlociABO4b.csv",header=T)#
plantLinfo4bff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/plantlociABO4bff.csv",header=T)#
plantLinfo4a <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/plantlociABO4a.csv",header=T)#
plantLinfo4aff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/plantlociABO4aff.csv",header=T)#
plantLinfo4f <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/plantlociABO4f.csv",header=T)#
plantLinfo4fff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/plantlociABO4fff.csv",header=T)#
micrLinfo4b <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/micrlociABO4b.csv",header=T)#
micrLinfo4bff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/micrlociABO4bff.csv",header=T)#
micrLinfo4a <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/micrlociABO4a.csv",header=T)#
micrLinfo4aff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/micrlociABO4aff.csv",header=T)#
micrLinfo4f <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/micrlociABO4f.csv",header=T)#
micrLinfo4fff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/micrlociABO4fff.csv",header=T)#
CIGp_4b <- connectIG(plantLinfo4b,plantout4b)#
CIGp_4bff <- connectIG(plantLinfo4bff,plantout4bff)#
CIGp_4a <- connectIG(plantLinfo4a,plantout4a)#
CIGp_4aff <- connectIG(plantLinfo4aff,plantout4aff)#
CIGp_4f <- connectIG(plantLinfo4f,plantout4f)#
CIGp_4fff <- connectIG(plantLinfo4fff,plantout4fff)#
CIGm_4b <- connectIG(micrLinfo4b,microut4b)#
CIGm_4bff <- connectIG(micrLinfo4bff,microut4bff)#
CIGm_4a <- connectIG(micrLinfo4a,microut4a)#
CIGm_4aff <- connectIG(micrLinfo4aff,microut4aff)#
CIGm_4f <- connectIG(micrLinfo4f,microut4f)#
CIGm_4fff <- connectIG(micrLinfo4fff,microut4fff)
par(mfrow=c(2,6))#
par(oma=c(3,3,2,0))#
par(mar=c(2,2,1,1))#
hist(plantLinfo4b$reststate,freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),col=rgb(0.9,0.75,0,alpha=0.5),ylim=c(0,60),main="") #ylim=c(0,200))##
	hist(plantLinfo4b$reststate[!is.na(CIGp_4b$beta)],freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),add=T,col=rgb(0,0,0,alpha=0.25))#
	mtext("Frequency",side=2, line=3)#
	mtext("Host estimated",side=2, line=2)#
hist(plantLinfo4bff$reststate,freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),col=rgb(0.9,0.75,0,alpha=0.5),ylim=c(0,60),main="") #ylim=c(0,200))##
	hist(plantLinfo4bff$reststate[!is.na(CIGp_4bff$beta)],freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),add=T,col=rgb(0,0,0,alpha=0.25))#
hist(plantLinfo4a$reststate,freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),col=rgb(0.9,0.75,0,alpha=0.5),ylim=c(0,60),main="") #ylim=c(0,200))##
	hist(plantLinfo4a$reststate[!is.na(CIGp_4a$beta)],freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),add=T,col=rgb(0,0,0,alpha=0.25))#
hist(plantLinfo4aff$reststate,freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),col=rgb(0.9,0.75,0,alpha=0.5),ylim=c(0,60),main="") #ylim=c(0,200))##
	hist(plantLinfo4aff$reststate[!is.na(CIGp_4aff$beta)],freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),add=T,col=rgb(0,0,0,alpha=0.25))#
hist(plantLinfo4f$reststate,freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),col=rgb(0.9,0.75,0,alpha=0.5),ylim=c(0,60),main="") #ylim=c(0,200))##
	hist(plantLinfo4f$reststate[!is.na(CIGp_4f$beta)],freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),add=T,col=rgb(0,0,0,alpha=0.25))#
hist(plantLinfo4fff$reststate,freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),col=rgb(0.9,0.75,0,alpha=0.5),ylim=c(0,60),main="") #ylim=c(0,200))##
	hist(plantLinfo4fff$reststate[!is.na(CIGp_4fff$beta)],freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),add=T,col=rgb(0,0,0,alpha=0.25))#
hist(micrLinfo4b$reststate,freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),col=rgb(0.9,0.75,0,alpha=0.5),ylim=c(0,60),main="") #ylim=c(0,200))##
	hist(micrLinfo4b$reststate[!is.na(CIGm_4b$beta)],freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),add=T,col=rgb(0,0,0,alpha=0.25))#
	mtext("Frequency",side=2, line=3)#
	mtext("Microbe estimated",side=2, line=2)#
hist(micrLinfo4bff$reststate,freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),col=rgb(0.9,0.75,0,alpha=0.5),ylim=c(0,60),main="") #ylim=c(0,200))##
	hist(micrLinfo4bff$reststate[!is.na(CIGm_4bff$beta)],freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),add=T,col=rgb(0,0,0,alpha=0.25))#
hist(micrLinfo4a$reststate,freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),col=rgb(0.9,0.75,0,alpha=0.5),ylim=c(0,60),main="") #ylim=c(0,200))##
	hist(micrLinfo4a$reststate[!is.na(CIGm_4a$beta)],freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),add=T,col=rgb(0,0,0,alpha=0.25))#
hist(micrLinfo4aff$reststate,freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),col=rgb(0.9,0.75,0,alpha=0.5),ylim=c(0,60),main="") #ylim=c(0,200))##
	hist(micrLinfo4aff$reststate[!is.na(CIGm_4aff$beta)],freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),add=T,col=rgb(0,0,0,alpha=0.25))#
hist(micrLinfo4f$reststate,freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),col=rgb(0.9,0.75,0,alpha=0.5),ylim=c(0,60),main="") #ylim=c(0,200))##
	hist(micrLinfo4f$reststate[!is.na(CIGm_4f$beta)],freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),add=T,col=rgb(0,0,0,alpha=0.25))#
hist(micrLinfo4fff$reststate,freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),col=rgb(0.9,0.75,0,alpha=0.5),ylim=c(0,60),main="") #ylim=c(0,200))##
	hist(micrLinfo4fff$reststate[!is.na(CIGm_4fff$beta)],freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),add=T,col=rgb(0,0,0,alpha=0.25))
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
plot(	   CIGp_4b$beta~(CIGp_4b$af), cex = ifelse(CIGp_4b$p_used < 0.05,1.5,0.5), col=rgb(0,0.5,0),  xlim=c(0,0.5),ylim=c(-2.5,2.5)) #limits might need to change#
	points(CIGm_4b$beta~(CIGm_4b$af), cex = ifelse(CIGm_4b$p_used < 0.05,1.5,0.5),  col=rgb(0.5,0,0.5))#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Estimated Beta",side=2, line=2,adj=-0.5)#
	abline(h=0)#
plot(      CIGp_4bff$beta~(CIGp_4bff$af), cex = ifelse(CIGp_4bff$p_used < 0.05,1.5,0.5),, col=rgb(0,0.5,0), xlim=c(0,0.5),ylim=c(-2.5,2.5))#
	points(CIGm_4bff$beta~(CIGm_4bff$af), cex = ifelse(CIGm_4bff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
	abline(h=0)#
plot(	   CIGp_4a$beta~(CIGp_4a$af), cex = ifelse(CIGp_4a$p_used < 0.05,1.5,0.5),col=rgb(0,0.5,0),  xlim=c(0,0.5),ylim=c(-2.5,2.5)) #
	points(CIGm_4a$beta~(CIGm_4a$af), cex = ifelse(CIGm_4a$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
	abline(h=0)#
plot(	   CIGp_4aff$beta~(CIGp_4aff$af), cex = ifelse(CIGp_4aff$p_used < 0.05,1.5,0.5), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-2.5,2.5)) #
	points(CIGm_4aff$beta~(CIGm_4aff$af), cex = ifelse(CIGm_4aff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	 mtext("Minor Allele Frequency",side=1, line=2)#
	abline(h=0)#
plot(	   CIGp_4f$beta~(CIGp_4f$af), cex = ifelse(CIGp_4f$p_used < 0.05,1.5,0.5), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-2.5,2.5)) #
	points(CIGm_4f$beta~(CIGm_4f$af), cex = ifelse(CIGm_4f$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
	abline(h=0)#
plot(	   CIGp_4fff$beta~(CIGp_4fff$af), cex = ifelse(CIGp_4fff$p_used < 0.05,1.5,0.5), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-2.5,2.5))#
	points(CIGm_4fff$beta~(CIGm_4fff$af), cex = ifelse(CIGm_4fff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	abline(h=0)#
legend(0.3,-1.7,c("Host","Microbe"),fill=c(rgb(0,0.5,0),rgb(0.5,0,0.5)),bty="n")
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
plot(		plantLinfo4b$reststate~(CIGp_4b$af), cex = ifelse(CIGp_4b$p_used < 0.05,1.5,0.5), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0)) #
	points( micrLinfo4b$reststate~(CIGm_4b$af), cex = ifelse(CIGm_4b$p_used < 0.05,1.5,0.5), col=rgb(0.5,0,0.5) )#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Known effect",side=2, line=2,adj=-0.5)#
	abline(h=0)#
plot(		plantLinfo4bff$reststate~(CIGp_4bff$af), cex = ifelse(CIGp_4bff$p_used < 0.05,1.5,0.5), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4bff$reststate~(CIGm_4bff$af), cex = ifelse(CIGm_4bff$p_used < 0.05,1.5,0.5), col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
	abline(h=0)#
plot(		plantLinfo4a$reststate~(CIGp_4a$af), cex = ifelse(CIGp_4a$p_used < 0.05,1.5,0.5), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4a$reststate~(CIGm_4a$af), cex = ifelse(CIGm_4a$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
	abline(h=0)#
plot(		plantLinfo4aff$reststate~(CIGp_4aff$af), cex = ifelse(CIGp_4aff$p_used < 0.05,1.5,0.5), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4aff$reststate~(CIGm_4aff$af), cex = ifelse(CIGm_4aff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	 mtext("Minor Allele Frequency",side=1, line=2)#
	abline(h=0)#
plot(		plantLinfo4f$reststate~(CIGp_4f$af), cex = ifelse(CIGp_4f$p_used < 0.05,1.5,0.5), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4f$reststate~(CIGm_4f$af), cex = ifelse(CIGm_4f$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
	abline(h=0)#
plot(		plantLinfo4fff$reststate~(CIGp_4fff$af), cex = ifelse(CIGp_4fff$p_used < 0.05,1.5,0.5), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4fff$reststate~(CIGm_4fff$af), cex = ifelse(CIGm_4fff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	abline(h=0)#
legend(0.3,-0.3,c("Host","Microbe"),fill=c(rgb(0,0.5,0),rgb(0.5,0,0.5)),bty="n")
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
plot(		CIGp_4b$beta~(plantLinfo4b$reststate), cex = ifelse(CIGp_4b$p_used < 0.05,1.5,0.5), xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4b$beta~(micrLinfo4b$reststate), cex = ifelse(CIGm_4b$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Estimated Beta",side=2, line=2,adj=-0.5)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4b$beta,plantLinfo4b$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4b$beta, micrLinfo4b$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4bff$beta~(plantLinfo4bff$reststate), cex = ifelse(CIGp_4bff$p_used < 0.05,1.5,0.5),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4bff$beta~(micrLinfo4bff$reststate), cex = ifelse(CIGm_4bff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4bff$beta,plantLinfo4bff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4bff$beta, micrLinfo4bff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4a$beta~(plantLinfo4a$reststate), cex = ifelse(CIGp_4a$p_used < 0.05,1.5,0.5),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4a$beta~(micrLinfo4a$reststate), cex = ifelse(CIGm_4a$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4a$beta,plantLinfo4a$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4a$beta, micrLinfo4a$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4aff$beta~(plantLinfo4aff$reststate), cex = ifelse(CIGp_4aff$p_used < 0.05,1.5,0.5),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4aff$beta~(micrLinfo4aff$reststate), cex = ifelse(CIGm_4aff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	 mtext("Known Effect",side=1, line=2)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4aff$beta,plantLinfo4aff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4aff$beta, micrLinfo4aff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4f$beta~(plantLinfo4f$reststate), cex = ifelse(CIGp_4f$p_used < 0.05,1.5,0.5),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4f$beta~(micrLinfo4f$reststate), cex = ifelse(CIGm_4f$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4f$beta,plantLinfo4f$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4f$beta, micrLinfo4f$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4fff$beta~(plantLinfo4fff$reststate), cex = ifelse(CIGp_4fff$p_used < 0.05,1.5,0.5),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4fff$beta~(micrLinfo4fff$reststate), cex = ifelse(CIGm_4fff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4fff$beta,plantLinfo4fff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4fff$beta, micrLinfo4fff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
legend(-0.3,-1.8,c("Host","Microbe"),fill=c(rgb(0,0.5,0),rgb(0.5,0,0.5)),bty="n")
#visualize what is lost, it is the small effect size loci#
pdf("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/dens_loci_tossed_sixdemos.pdf",height=4,width=12)#
par(mfrow=c(2,6))#
par(oma=c(3,3,2,0))#
par(mar=c(2,2,1,1))#
hist(plantLinfo4b$reststate,freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),col=rgb(0.9,0.75,0,alpha=0.5),ylim=c(0,60),main="") #ylim=c(0,200))##
	hist(plantLinfo4b$reststate[!is.na(CIGp_4b$beta)],freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),add=T,col=rgb(0,0,0,alpha=0.25))#
	mtext("Frequency",side=2, line=3)#
	mtext("Host estimated",side=2, line=2)#
hist(plantLinfo4bff$reststate,freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),col=rgb(0.9,0.75,0,alpha=0.5),ylim=c(0,60),main="") #ylim=c(0,200))##
	hist(plantLinfo4bff$reststate[!is.na(CIGp_4bff$beta)],freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),add=T,col=rgb(0,0,0,alpha=0.25))#
hist(plantLinfo4a$reststate,freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),col=rgb(0.9,0.75,0,alpha=0.5),ylim=c(0,60),main="") #ylim=c(0,200))##
	hist(plantLinfo4a$reststate[!is.na(CIGp_4a$beta)],freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),add=T,col=rgb(0,0,0,alpha=0.25))#
hist(plantLinfo4aff$reststate,freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),col=rgb(0.9,0.75,0,alpha=0.5),ylim=c(0,60),main="") #ylim=c(0,200))##
	hist(plantLinfo4aff$reststate[!is.na(CIGp_4aff$beta)],freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),add=T,col=rgb(0,0,0,alpha=0.25))#
hist(plantLinfo4f$reststate,freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),col=rgb(0.9,0.75,0,alpha=0.5),ylim=c(0,60),main="") #ylim=c(0,200))##
	hist(plantLinfo4f$reststate[!is.na(CIGp_4f$beta)],freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),add=T,col=rgb(0,0,0,alpha=0.25))#
hist(plantLinfo4fff$reststate,freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),col=rgb(0.9,0.75,0,alpha=0.5),ylim=c(0,60),main="") #ylim=c(0,200))##
	hist(plantLinfo4fff$reststate[!is.na(CIGp_4fff$beta)],freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),add=T,col=rgb(0,0,0,alpha=0.25))#
hist(micrLinfo4b$reststate,freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),col=rgb(0.9,0.75,0,alpha=0.5),ylim=c(0,60),main="") #ylim=c(0,200))##
	hist(micrLinfo4b$reststate[!is.na(CIGm_4b$beta)],freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),add=T,col=rgb(0,0,0,alpha=0.25))#
	mtext("Frequency",side=2, line=3)#
	mtext("Microbe estimated",side=2, line=2)#
hist(micrLinfo4bff$reststate,freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),col=rgb(0.9,0.75,0,alpha=0.5),ylim=c(0,60),main="") #ylim=c(0,200))##
	hist(micrLinfo4bff$reststate[!is.na(CIGm_4bff$beta)],freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),add=T,col=rgb(0,0,0,alpha=0.25))#
hist(micrLinfo4a$reststate,freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),col=rgb(0.9,0.75,0,alpha=0.5),ylim=c(0,60),main="") #ylim=c(0,200))##
	hist(micrLinfo4a$reststate[!is.na(CIGm_4a$beta)],freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),add=T,col=rgb(0,0,0,alpha=0.25))#
hist(micrLinfo4aff$reststate,freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),col=rgb(0.9,0.75,0,alpha=0.5),ylim=c(0,60),main="") #ylim=c(0,200))##
	hist(micrLinfo4aff$reststate[!is.na(CIGm_4aff$beta)],freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),add=T,col=rgb(0,0,0,alpha=0.25))#
hist(micrLinfo4f$reststate,freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),col=rgb(0.9,0.75,0,alpha=0.5),ylim=c(0,60),main="") #ylim=c(0,200))##
	hist(micrLinfo4f$reststate[!is.na(CIGm_4f$beta)],freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),add=T,col=rgb(0,0,0,alpha=0.25))#
hist(micrLinfo4fff$reststate,freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),col=rgb(0.9,0.75,0,alpha=0.5),ylim=c(0,60),main="") #ylim=c(0,200))##
	hist(micrLinfo4fff$reststate[!is.na(CIGm_4fff$beta)],freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),add=T,col=rgb(0,0,0,alpha=0.25))#
dev.off()#
#
pdf("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/betas_maf_sig_sixdemos.pdf",height=5,width=7)#4, 12#
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
plot(	   CIGp_4b$beta~(CIGp_4b$af), cex = ifelse(CIGp_4b$p_used < 0.05,1.5,0.5), col=rgb(0,0.5,0),  xlim=c(0,0.5),ylim=c(-2.5,2.5)) #limits might need to change#
	points(CIGm_4b$beta~(CIGm_4b$af), cex = ifelse(CIGm_4b$p_used < 0.05,1.5,0.5),  col=rgb(0.5,0,0.5))#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Estimated Beta",side=2, line=2,adj=-0.5)#
	abline(h=0)#
plot(      CIGp_4bff$beta~(CIGp_4bff$af), cex = ifelse(CIGp_4bff$p_used < 0.05,1.5,0.5),, col=rgb(0,0.5,0), xlim=c(0,0.5),ylim=c(-2.5,2.5))#
	points(CIGm_4bff$beta~(CIGm_4bff$af), cex = ifelse(CIGm_4bff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
	abline(h=0)#
plot(	   CIGp_4a$beta~(CIGp_4a$af), cex = ifelse(CIGp_4a$p_used < 0.05,1.5,0.5),col=rgb(0,0.5,0),  xlim=c(0,0.5),ylim=c(-2.5,2.5)) #
	points(CIGm_4a$beta~(CIGm_4a$af), cex = ifelse(CIGm_4a$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
	abline(h=0)#
plot(	   CIGp_4aff$beta~(CIGp_4aff$af), cex = ifelse(CIGp_4aff$p_used < 0.05,1.5,0.5), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-2.5,2.5)) #
	points(CIGm_4aff$beta~(CIGm_4aff$af), cex = ifelse(CIGm_4aff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	 mtext("Minor Allele Frequency",side=1, line=2)#
	abline(h=0)#
plot(	   CIGp_4f$beta~(CIGp_4f$af), cex = ifelse(CIGp_4f$p_used < 0.05,1.5,0.5), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-2.5,2.5)) #
	points(CIGm_4f$beta~(CIGm_4f$af), cex = ifelse(CIGm_4f$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
	abline(h=0)#
plot(	   CIGp_4fff$beta~(CIGp_4fff$af), cex = ifelse(CIGp_4fff$p_used < 0.05,1.5,0.5), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-2.5,2.5))#
	points(CIGm_4fff$beta~(CIGm_4fff$af), cex = ifelse(CIGm_4fff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	abline(h=0)#
legend(0.3,-1.7,c("Host","Microbe"),fill=c(rgb(0,0.5,0),rgb(0.5,0,0.5)),bty="n")#
dev.off()#
##
#
pdf("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/knownEffs_maf_sig_sixdemos.pdf",height=5,width=7)#
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
plot(		plantLinfo4b$reststate~(CIGp_4b$af), cex = ifelse(CIGp_4b$p_used < 0.05,1.5,0.5), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0)) #
	points( micrLinfo4b$reststate~(CIGm_4b$af), cex = ifelse(CIGm_4b$p_used < 0.05,1.5,0.5), col=rgb(0.5,0,0.5) )#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Known effect",side=2, line=2,adj=-0.5)#
	abline(h=0)#
plot(		plantLinfo4bff$reststate~(CIGp_4bff$af), cex = ifelse(CIGp_4bff$p_used < 0.05,1.5,0.5), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4bff$reststate~(CIGm_4bff$af), cex = ifelse(CIGm_4bff$p_used < 0.05,1.5,0.5), col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
	abline(h=0)#
plot(		plantLinfo4a$reststate~(CIGp_4a$af), cex = ifelse(CIGp_4a$p_used < 0.05,1.5,0.5), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4a$reststate~(CIGm_4a$af), cex = ifelse(CIGm_4a$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
	abline(h=0)#
plot(		plantLinfo4aff$reststate~(CIGp_4aff$af), cex = ifelse(CIGp_4aff$p_used < 0.05,1.5,0.5), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4aff$reststate~(CIGm_4aff$af), cex = ifelse(CIGm_4aff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	 mtext("Minor Allele Frequency",side=1, line=2)#
	abline(h=0)#
plot(		plantLinfo4f$reststate~(CIGp_4f$af), cex = ifelse(CIGp_4f$p_used < 0.05,1.5,0.5), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4f$reststate~(CIGm_4f$af), cex = ifelse(CIGm_4f$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
	abline(h=0)#
plot(		plantLinfo4fff$reststate~(CIGp_4fff$af), cex = ifelse(CIGp_4fff$p_used < 0.05,1.5,0.5), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4fff$reststate~(CIGm_4fff$af), cex = ifelse(CIGm_4fff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	abline(h=0)#
legend(0.3,-0.3,c("Host","Microbe"),fill=c(rgb(0,0.5,0),rgb(0.5,0,0.5)),bty="n")#
dev.off()#
##
#
range( c(plantLinfo4b$reststate,plantLinfo4bff$reststate,plantLinfo4a$reststate,plantLinfo4aff$reststate,plantLinfo4f$reststate,plantLinfo4fff$reststate))#
range( c(micrLinfo4b$reststate,micrLinfo4bff$reststate,micrLinfo4a$reststate,micrLinfo4aff$reststate,micrLinfo4f$reststate,micrLinfo4fff$reststate))#
range( c(CIGp_4b$beta,CIGp_4bff$beta,CIGp_4a$beta,CIGp_4aff$beta,CIGp_4f$beta,CIGp_4fff$beta),na.rm=T)#
range( c(CIGm_4b$beta,CIGm_4bff$beta,CIGm_4a$beta,CIGm_4aff$beta,CIGm_4f$beta,CIGm_4fff$beta),na.rm=T)#
#
pdf("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/knownEffs_beta_sig_sixdemos.pdf",height=5,width=7)#
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
plot(		CIGp_4b$beta~(plantLinfo4b$reststate), cex = ifelse(CIGp_4b$p_used < 0.05,1.5,0.5), xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4b$beta~(micrLinfo4b$reststate), cex = ifelse(CIGm_4b$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Estimated Beta",side=2, line=2,adj=-0.5)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4b$beta,plantLinfo4b$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4b$beta, micrLinfo4b$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4bff$beta~(plantLinfo4bff$reststate), cex = ifelse(CIGp_4bff$p_used < 0.05,1.5,0.5),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4bff$beta~(micrLinfo4bff$reststate), cex = ifelse(CIGm_4bff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4bff$beta,plantLinfo4bff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4bff$beta, micrLinfo4bff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4a$beta~(plantLinfo4a$reststate), cex = ifelse(CIGp_4a$p_used < 0.05,1.5,0.5),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4a$beta~(micrLinfo4a$reststate), cex = ifelse(CIGm_4a$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4a$beta,plantLinfo4a$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4a$beta, micrLinfo4a$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4aff$beta~(plantLinfo4aff$reststate), cex = ifelse(CIGp_4aff$p_used < 0.05,1.5,0.5),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4aff$beta~(micrLinfo4aff$reststate), cex = ifelse(CIGm_4aff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	 mtext("Known Effect",side=1, line=2)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4aff$beta,plantLinfo4aff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4aff$beta, micrLinfo4aff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4f$beta~(plantLinfo4f$reststate), cex = ifelse(CIGp_4f$p_used < 0.05,1.5,0.5),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4f$beta~(micrLinfo4f$reststate), cex = ifelse(CIGm_4f$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4f$beta,plantLinfo4f$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4f$beta, micrLinfo4f$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4fff$beta~(plantLinfo4fff$reststate), cex = ifelse(CIGp_4fff$p_used < 0.05,1.5,0.5),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4fff$beta~(micrLinfo4fff$reststate), cex = ifelse(CIGm_4fff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4fff$beta,plantLinfo4fff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4fff$beta, micrLinfo4fff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
legend(-0.3,-1.8,c("Host","Microbe"),fill=c(rgb(0,0.5,0),rgb(0.5,0,0.5)),bty="n")#
dev.off()
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
image(t(matrix( (summarizep4b$cattots/summarizep4b$catshouldbesums)[5:8],nrow=2,byrow=F)),zlim=c(0,1),xaxt="n",yaxt="n",main="")#
	axis(2,at=c(0,1),labels=c("neutral","causal"))#
	axis(1,at=c(0,1),labels=c("p < 0.05","p > 0.05"))#
	text(x=c(0,0,1,1),y=c(0,1,0,1),labels=paste(#
		summarizep4b$cattots[5:8],rep("/",times=4), summarizep4b$catshouldbesums[5:8], rep("=",times=4),#
		round(  (summarizep4b$cattots/summarizep4b$catshouldbesums)[5:8],digits=2), sep="" ))#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No link to microbe fitness",side=3)#
image(t(matrix( (summarizep4bff$cattots/summarizep4bff$catshouldbesums)[5:8],nrow=2,byrow=F)),zlim=c(0,1),xaxt="n",yaxt="n",main="")#
	axis(2,at=c(0,1),labels=c("neutral","causal"))#
	axis(1,at=c(0,1),labels=c("p < 0.05","p > 0.05"))#
	text(x=c(0,0,1,1),y=c(0,1,0,1),labels=paste(#
		summarizep4bff$cattots[5:8],rep("/",times=4), summarizep4bff$catshouldbesums[5:8], rep("=",times=4),#
		round(  (summarizep4bff$cattots/summarizep4bff$catshouldbesums)[5:8],digits=2), sep="" ))#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
image(t(matrix( (summarizep4a$cattots/summarizep4a$catshouldbesums)[5:8],nrow=2,byrow=F)),zlim=c(0,1),xaxt="n",yaxt="n",main="")#
	axis(2,at=c(0,1),labels=c("neutral","causal"))#
	axis(1,at=c(0,1),labels=c("p < 0.05","p > 0.05"))#
	text(x=c(0,0,1,1),y=c(0,1,0,1),labels=paste(#
		summarizep4a$cattots[5:8],rep("/",times=4), summarizep4a$catshouldbesums[5:8], rep("=",times=4),#
		round(  (summarizep4a$cattots/summarizep4a$catshouldbesums)[5:8],digits=2), sep="" ))#
	mtext("Equal links to fitness",side=3)#
	mtext("Same optima",side=3,line=2)#
image(t(matrix( (summarizep4aff$cattots/summarizep4aff$catshouldbesums)[5:8],nrow=2,byrow=F)),zlim=c(0,1),xaxt="n",yaxt="n",main="")#
	axis(2,at=c(0,1),labels=c("neutral","causal"))#
	axis(1,at=c(0,1),labels=c("p < 0.05","p > 0.05"))#
	text(x=c(0,0,1,1),y=c(0,1,0,1),labels=paste(#
		summarizep4aff$cattots[5:8],rep("/",times=4), summarizep4aff$catshouldbesums[5:8], rep("=",times=4),#
		round(  (summarizep4aff$cattots/summarizep4aff$catshouldbesums)[5:8],digits=2), sep="" ))#
image(t(matrix( (summarizep4f$cattots/summarizep4f$catshouldbesums)[5:8],nrow=2,byrow=F)),zlim=c(0,1),xaxt="n",yaxt="n",main="")#
	axis(2,at=c(0,1),labels=c("neutral","causal"))#
	axis(1,at=c(0,1),labels=c("p < 0.05","p > 0.05"))#
	text(x=c(0,0,1,1),y=c(0,1,0,1),labels=paste(#
		summarizep4f$cattots[5:8],rep("/",times=4), summarizep4f$catshouldbesums[5:8], rep("=",times=4),#
		round(  (summarizep4f$cattots/summarizep4f$catshouldbesums)[5:8],digits=2), sep="" ))#
	mtext("Equal links to fitness",side=3)#
	mtext("Different optima",side=3,line=2)#
image(t(matrix( (summarizep4fff$cattots/summarizep4fff$catshouldbesums)[5:8],nrow=2,byrow=F)),zlim=c(0,1),xaxt="n",yaxt="n",main="")#
	axis(2,at=c(0,1),labels=c("neutral","causal"))#
	axis(1,at=c(0,1),labels=c("p < 0.05","p > 0.05"))#
	text(x=c(0,0,1,1),y=c(0,1,0,1),labels=paste(#
		summarizep4fff$cattots[5:8],rep("/",times=4), summarizep4fff$catshouldbesums[5:8], rep("=",times=4),#
		round(  (summarizep4fff$cattots/summarizep4fff$catshouldbesums)[5:8],digits=2), sep="" ))
head(plantLinfo4b)
head(PLANTgemmaABO4b.assoc.txt)
head(plantout4b)
table(plantout4b$allele1)
table(plantout4b$allele0)
if(plantout4b $allele1==1){plantout4b$beta} else {-1*plantout4b$beta}
str(plantout4b)
str(if(plantout4b $allele1==1){plantout4b$beta} else {-1*plantout4b$beta})
tmp <- if(plantout4b $allele1==1){plantout4b$beta} else {-1*plantout4b$beta}
tmp - plantout4b$beta
sapply(1:nrow(plantout4b), function(z) if(plantout4b$allele1[z]==1){plantout4b$beta[z]} else {-1* plantout4b$beta[z]}
)
tmp <- sapply(1:nrow(plantout4b), function(z) if(plantout4b$allele1[z]==1){plantout4b$beta[z]} else {-1* plantout4b$beta[z]})
tmp - plantout4b$beta
table(plantout4b$allele1)
head(plantLinfo4b)
table(plantLinfo4b$zerostate)
table(plantLinfo4bff$zerostate)
table(plantLinfo4fff$zerostate)
table(plantLinfo4f$zerostate)
table(plantLinfo4a$zerostate)
table(plantLinfo4aff$zerostate)
table(micrLinfo4b$zerostate)#
table(micrLinfo4bff$zerostate)#
table(micrLinfo4a$zerostate)#
table(micrLinfo4aff$zerostate)#
table(micrLinfo4f$zerostate)#
table(micrLinfo4fff$zerostate)
addcols <- function(outfile, k=NULL){#
	outfile$recodebeta <- sapply(1:nrow(outfile), function(z) if(outfile$allele1[z]==1){outfile$beta[z]} else {-1*outfile$beta[z]} #allele1 is the minor allele, but states 1 and 2 are derived and ancestral (0)#
	outfile$known_pos <- sapply(outfile$rs, function(z) length(grep("c",z))==1)#
	outfile$known_neg <- !outfile$known_pos#
	if(is.null(k)){#
p <- findInterval(outfile$p_score,sort(outfile$p_score))/nrow(outfile)#
#  	p <- findInterval(outfile$beta,sort(outfile$beta))/nrow(outfile) #fewer total loci identified in both, regardless of how count. BUT makes the holo analysis more effective.#
#
	} else if(k==TRUE){#
		p <- outfile$p_score#
	}#
	outfile$p_used <- p #
	outfile$false_pos <- (p < 0.05 & outfile$known_pos == F)#
	outfile$true_pos <-  (p < 0.05 & outfile$known_pos == T)#
	outfile$true_neg <-  (p > 0.05 & outfile$known_pos == F)#
	outfile$false_neg <- (p > 0.05 & outfile$known_pos == T)#
#
	known_Ppos <- sapply(outfile$rs, function(z) length(grep("cP",z))==1)#
	known_Pn <- sapply(outfile$rs, function(z) length(grep("nP",z))==1)#
	known_Mpos <- sapply(outfile$rs, function(z) length(grep("cM",z))==1)#
	known_Mn <- sapply(outfile$rs, function(z) length(grep("nM",z))==1)#
	catsnp <- rep(NA,times=nrow(outfile))#
		if(any(known_Ppos)==TRUE){catsnp[known_Ppos] <- "Pcausal"}#
		if(any(known_Mpos)==TRUE){catsnp[known_Mpos] <- "Mcausal"}#
		if(any(known_Pn)==TRUE){catsnp[known_Pn] <- "Pneut"}#
		if(any(known_Mn)==TRUE){catsnp[known_Mn] <- "Mneut"}#
	outfile$catsnp <- catsnp#
	return(outfile)#
}#
#
summarizeSNPcalls <- function(outfilewcols){#
	startcol <- grep("false_pos",colnames(outfilewcols))#
	conttabprp <- matrix(#
		colSums(outfilewcols[,startcol:(startcol+3)]) /#
		rep(c(sum(outfilewcols$known_neg),sum(outfilewcols$known_pos)),times=2),  #
		#c(f+ t+ t- f- ) /  c(allneg, allpos, allneg,allpos)#
		byrow=T,ncol=2#
		)#
	conttab <- 	colSums(outfilewcols[,startcol:(startcol+3)])#
	possout <- c("MneutTRUE",  "McausalTRUE",   "MneutFALSE",    "McausalFALSE", "PneutTRUE",  "PcausalTRUE",   "PneutFALSE",    "PcausalFALSE")#
	cattots <- sapply(1:length(possout), function(o)  sum(paste(outfilewcols$catsnp,outfilewcols$p_used < 0.05,sep="")==possout[o] ) )#
	names(cattots)<-possout#
	catshouldbesums <- c(  rep( c(sum(cattots[c(1,3)]),sum(cattots[c(2,4)] )),times=2 )  ,  #
	rep( c(sum(cattots[c(5,7)]),sum(cattots[c(6,8)])),times=2 ) ) #
	catshouldbesums[is.na(catshouldbesums)] <- 0#
	return(list(conttabprp=conttabprp,conttab=conttab, cattots=cattots,catshouldbesums=catshouldbesums))#
}#
#
connectIG <- function(inputlociinfo, inputgwasinfo){#
	matchloci <- sapply(1:nrow(inputlociinfo), function(z) which(as.character(inputgwasinfo$rs) == as.character(inputlociinfo$locusname[z])))#
	is.inHABA <- sapply(1:length(matchloci), function(z) ifelse(length(matchloci[[z]])==1,matchloci[[z]],NA))#
	connectedinfo <- inputgwasinfo[is.inHABA,]#
	return(connectedinfo)#
}#
#verifying that the zerostate is always zero. if not, then have to re-evaluate how deal with recoding beta!!!#
table(plantLinfo4b$zerostate)#
table(plantLinfo4bff$zerostate)#
table(plantLinfo4a$zerostate)#
table(plantLinfo4aff$zerostate)#
table(plantLinfo4f$zerostate)#
table(plantLinfo4fff$zerostate)#
table(micrLinfo4b$zerostate)#
table(micrLinfo4bff$zerostate)#
table(micrLinfo4a$zerostate)#
table(micrLinfo4aff$zerostate)#
table(micrLinfo4f$zerostate)#
table(micrLinfo4fff$zerostate)#
#
plantout4b <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/PLANTgemmaABO4b.assoc.txt",header=T,sep="\t")#
plantout4bff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/PLANTgemmaABO4bff.assoc.txt",header=T,sep="\t")#
plantout4a <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/PLANTgemmaABO4a.assoc.txt",header=T,sep="\t")#
plantout4aff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/PLANTgemmaABO4aff.assoc.txt",header=T,sep="\t")#
plantout4f <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/PLANTgemmaABO4f.assoc.txt",header=T,sep="\t")#
plantout4fff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/PLANTgemmaABO4fff.assoc.txt",header=T,sep="\t")#
microut4b <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/MICRgemmaABO4b.assoc.txt",header=T,sep="\t")#
microut4bff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/MICRgemmaABO4bff.assoc.txt",header=T,sep="\t")#
microut4a <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/MICRgemmaABO4a.assoc.txt",header=T,sep="\t")#
microut4aff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/MICRgemmaABO4aff.assoc.txt",header=T,sep="\t")#
microut4f <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/MICRgemmaABO4f.assoc.txt",header=T,sep="\t")#
microut4fff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/MICRgemmaABO4fff.assoc.txt",header=T,sep="\t")#
#
plantout4b <- addcols(plantout4b)#
plantout4bff <- addcols(plantout4bff)#
plantout4a <- addcols(plantout4a)#
plantout4aff <- addcols(plantout4aff)#
plantout4f <- addcols(plantout4f)#
plantout4fff <- addcols(plantout4fff)#
microut4b <- addcols(microut4b)#
microut4bff <- addcols(microut4bff)#
microut4a <- addcols(microut4a)#
microut4aff <- addcols(microut4aff)#
microut4f <- addcols(microut4f)#
microut4fff <- addcols(microut4fff)#
#
summarizep4b  <- summarizeSNPcalls(plantout4b)#
summarizep4bff  <- summarizeSNPcalls(plantout4bff)#
summarizep4a  <- summarizeSNPcalls(plantout4a)#
summarizep4aff  <- summarizeSNPcalls(plantout4aff)#
summarizep4f  <- summarizeSNPcalls(plantout4f)#
summarizep4fff  <- summarizeSNPcalls(plantout4fff)#
summarizem4b  <- summarizeSNPcalls(microut4b)#
summarizem4bff  <- summarizeSNPcalls(microut4bff)#
summarizem4a  <- summarizeSNPcalls(microut4a)#
summarizem4aff  <- summarizeSNPcalls(microut4aff)#
summarizem4f  <- summarizeSNPcalls(microut4f)#
summarizem4fff  <- summarizeSNPcalls(microut4fff)#
#
plantLinfo4b <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/plantlociABO4b.csv",header=T)#
plantLinfo4bff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/plantlociABO4bff.csv",header=T)#
plantLinfo4a <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/plantlociABO4a.csv",header=T)#
plantLinfo4aff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/plantlociABO4aff.csv",header=T)#
plantLinfo4f <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/plantlociABO4f.csv",header=T)#
plantLinfo4fff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/plantlociABO4fff.csv",header=T)#
micrLinfo4b <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/micrlociABO4b.csv",header=T)#
micrLinfo4bff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/micrlociABO4bff.csv",header=T)#
micrLinfo4a <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/micrlociABO4a.csv",header=T)#
micrLinfo4aff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/micrlociABO4aff.csv",header=T)#
micrLinfo4f <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/micrlociABO4f.csv",header=T)#
micrLinfo4fff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/micrlociABO4fff.csv",header=T)#
CIGp_4b <- connectIG(plantLinfo4b,plantout4b)#
CIGp_4bff <- connectIG(plantLinfo4bff,plantout4bff)#
CIGp_4a <- connectIG(plantLinfo4a,plantout4a)#
CIGp_4aff <- connectIG(plantLinfo4aff,plantout4aff)#
CIGp_4f <- connectIG(plantLinfo4f,plantout4f)#
CIGp_4fff <- connectIG(plantLinfo4fff,plantout4fff)#
CIGm_4b <- connectIG(micrLinfo4b,microut4b)#
CIGm_4bff <- connectIG(micrLinfo4bff,microut4bff)#
CIGm_4a <- connectIG(micrLinfo4a,microut4a)#
CIGm_4aff <- connectIG(micrLinfo4aff,microut4aff)#
CIGm_4f <- connectIG(micrLinfo4f,microut4f)#
CIGm_4fff <- connectIG(micrLinfo4fff,microut4fff)
head(plantout4b)
addcols <- function(outfile, k=NULL){#
	outfile$recodebeta <- sapply(1:nrow(outfile), function(z) if(outfile$allele1[z]==1){outfile$beta[z]} else {-1*outfile$beta[z]} #allele1 is the minor allele, but states 1 and 2 are derived and ancestral (0)#
	outfile$known_pos <- sapply(outfile$rs, function(z) length(grep("c",z))==1)#
	outfile$known_neg <- !outfile$known_pos#
	if(is.null(k)){#
p <- findInterval(outfile$p_score,sort(outfile$p_score))/nrow(outfile)#
#  	p <- findInterval(outfile$beta,sort(outfile$beta))/nrow(outfile) #fewer total loci identified in both, regardless of how count. BUT makes the holo analysis more effective.#
#
	} else if(k==TRUE){#
		p <- outfile$p_score#
	}#
	outfile$p_used <- p #
	outfile$false_pos <- (p < 0.05 & outfile$known_pos == F)#
	outfile$true_pos <-  (p < 0.05 & outfile$known_pos == T)#
	outfile$true_neg <-  (p > 0.05 & outfile$known_pos == F)#
	outfile$false_neg <- (p > 0.05 & outfile$known_pos == T)#
#
	known_Ppos <- sapply(outfile$rs, function(z) length(grep("cP",z))==1)#
	known_Pn <- sapply(outfile$rs, function(z) length(grep("nP",z))==1)#
	known_Mpos <- sapply(outfile$rs, function(z) length(grep("cM",z))==1)#
	known_Mn <- sapply(outfile$rs, function(z) length(grep("nM",z))==1)#
	catsnp <- rep(NA,times=nrow(outfile))#
		if(any(known_Ppos)==TRUE){catsnp[known_Ppos] <- "Pcausal"}#
		if(any(known_Mpos)==TRUE){catsnp[known_Mpos] <- "Mcausal"}#
		if(any(known_Pn)==TRUE){catsnp[known_Pn] <- "Pneut"}#
		if(any(known_Mn)==TRUE){catsnp[known_Mn] <- "Mneut"}#
	outfile$catsnp <- catsnp#
	return(outfile)#
}#
#
summarizeSNPcalls <- function(outfilewcols){#
	startcol <- grep("false_pos",colnames(outfilewcols))#
	conttabprp <- matrix(#
		colSums(outfilewcols[,startcol:(startcol+3)]) /#
		rep(c(sum(outfilewcols$known_neg),sum(outfilewcols$known_pos)),times=2),  #
		#c(f+ t+ t- f- ) /  c(allneg, allpos, allneg,allpos)#
		byrow=T,ncol=2#
		)#
	conttab <- 	colSums(outfilewcols[,startcol:(startcol+3)])#
	possout <- c("MneutTRUE",  "McausalTRUE",   "MneutFALSE",    "McausalFALSE", "PneutTRUE",  "PcausalTRUE",   "PneutFALSE",    "PcausalFALSE")#
	cattots <- sapply(1:length(possout), function(o)  sum(paste(outfilewcols$catsnp,outfilewcols$p_used < 0.05,sep="")==possout[o] ) )#
	names(cattots)<-possout#
	catshouldbesums <- c(  rep( c(sum(cattots[c(1,3)]),sum(cattots[c(2,4)] )),times=2 )  ,  #
	rep( c(sum(cattots[c(5,7)]),sum(cattots[c(6,8)])),times=2 ) ) #
	catshouldbesums[is.na(catshouldbesums)] <- 0#
	return(list(conttabprp=conttabprp,conttab=conttab, cattots=cattots,catshouldbesums=catshouldbesums))#
}#
#
connectIG <- function(inputlociinfo, inputgwasinfo){#
	matchloci <- sapply(1:nrow(inputlociinfo), function(z) which(as.character(inputgwasinfo$rs) == as.character(inputlociinfo$locusname[z])))#
	is.inHABA <- sapply(1:length(matchloci), function(z) ifelse(length(matchloci[[z]])==1,matchloci[[z]],NA))#
	connectedinfo <- inputgwasinfo[is.inHABA,]#
	return(connectedinfo)#
}
addcols <- function(outfile, k=NULL){#
	outfile$recodebeta <- sapply(1:nrow(outfile), function(z) if(outfile$allele1[z]==1){outfile$beta[z]} else {-1*outfile$beta[z]} )#allele1 is the minor allele, but states 1 and 2 are derived and ancestral (0)#
	outfile$known_pos <- sapply(outfile$rs, function(z) length(grep("c",z))==1)#
	outfile$known_neg <- !outfile$known_pos#
	if(is.null(k)){#
p <- findInterval(outfile$p_score,sort(outfile$p_score))/nrow(outfile)#
#  	p <- findInterval(outfile$beta,sort(outfile$beta))/nrow(outfile) #fewer total loci identified in both, regardless of how count. BUT makes the holo analysis more effective.#
#
	} else if(k==TRUE){#
		p <- outfile$p_score#
	}#
	outfile$p_used <- p #
	outfile$false_pos <- (p < 0.05 & outfile$known_pos == F)#
	outfile$true_pos <-  (p < 0.05 & outfile$known_pos == T)#
	outfile$true_neg <-  (p > 0.05 & outfile$known_pos == F)#
	outfile$false_neg <- (p > 0.05 & outfile$known_pos == T)#
#
	known_Ppos <- sapply(outfile$rs, function(z) length(grep("cP",z))==1)#
	known_Pn <- sapply(outfile$rs, function(z) length(grep("nP",z))==1)#
	known_Mpos <- sapply(outfile$rs, function(z) length(grep("cM",z))==1)#
	known_Mn <- sapply(outfile$rs, function(z) length(grep("nM",z))==1)#
	catsnp <- rep(NA,times=nrow(outfile))#
		if(any(known_Ppos)==TRUE){catsnp[known_Ppos] <- "Pcausal"}#
		if(any(known_Mpos)==TRUE){catsnp[known_Mpos] <- "Mcausal"}#
		if(any(known_Pn)==TRUE){catsnp[known_Pn] <- "Pneut"}#
		if(any(known_Mn)==TRUE){catsnp[known_Mn] <- "Mneut"}#
	outfile$catsnp <- catsnp#
	return(outfile)#
}#
#
summarizeSNPcalls <- function(outfilewcols){#
	startcol <- grep("false_pos",colnames(outfilewcols))#
	conttabprp <- matrix(#
		colSums(outfilewcols[,startcol:(startcol+3)]) /#
		rep(c(sum(outfilewcols$known_neg),sum(outfilewcols$known_pos)),times=2),  #
		#c(f+ t+ t- f- ) /  c(allneg, allpos, allneg,allpos)#
		byrow=T,ncol=2#
		)#
	conttab <- 	colSums(outfilewcols[,startcol:(startcol+3)])#
	possout <- c("MneutTRUE",  "McausalTRUE",   "MneutFALSE",    "McausalFALSE", "PneutTRUE",  "PcausalTRUE",   "PneutFALSE",    "PcausalFALSE")#
	cattots <- sapply(1:length(possout), function(o)  sum(paste(outfilewcols$catsnp,outfilewcols$p_used < 0.05,sep="")==possout[o] ) )#
	names(cattots)<-possout#
	catshouldbesums <- c(  rep( c(sum(cattots[c(1,3)]),sum(cattots[c(2,4)] )),times=2 )  ,  #
	rep( c(sum(cattots[c(5,7)]),sum(cattots[c(6,8)])),times=2 ) ) #
	catshouldbesums[is.na(catshouldbesums)] <- 0#
	return(list(conttabprp=conttabprp,conttab=conttab, cattots=cattots,catshouldbesums=catshouldbesums))#
}#
#
connectIG <- function(inputlociinfo, inputgwasinfo){#
	matchloci <- sapply(1:nrow(inputlociinfo), function(z) which(as.character(inputgwasinfo$rs) == as.character(inputlociinfo$locusname[z])))#
	is.inHABA <- sapply(1:length(matchloci), function(z) ifelse(length(matchloci[[z]])==1,matchloci[[z]],NA))#
	connectedinfo <- inputgwasinfo[is.inHABA,]#
	return(connectedinfo)#
}
addcols <- function(outfile, k=NULL){#
	outfile$recodebeta <- sapply(1:nrow(outfile), function(z) if(outfile$allele1[z]==1){outfile$beta[z]} else {-1*outfile$beta[z]} #allele1 is the minor allele, but states 1 and 2 are derived and ancestral (0)#
	outfile$known_pos <- sapply(outfile$rs, function(z) length(grep("c",z))==1)#
	outfile$known_neg <- !outfile$known_pos#
	if(is.null(k)){#
p <- findInterval(outfile$p_score,sort(outfile$p_score))/nrow(outfile)#
#  	p <- findInterval(outfile$beta,sort(outfile$beta))/nrow(outfile) #fewer total loci identified in both, regardless of how count. BUT makes the holo analysis more effective.#
#
	} else if(k==TRUE){#
		p <- outfile$p_score#
	}#
	outfile$p_used <- p #
	outfile$false_pos <- (p < 0.05 & outfile$known_pos == F)#
	outfile$true_pos <-  (p < 0.05 & outfile$known_pos == T)#
	outfile$true_neg <-  (p > 0.05 & outfile$known_pos == F)#
	outfile$false_neg <- (p > 0.05 & outfile$known_pos == T)#
#
	known_Ppos <- sapply(outfile$rs, function(z) length(grep("cP",z))==1)#
	known_Pn <- sapply(outfile$rs, function(z) length(grep("nP",z))==1)#
	known_Mpos <- sapply(outfile$rs, function(z) length(grep("cM",z))==1)#
	known_Mn <- sapply(outfile$rs, function(z) length(grep("nM",z))==1)#
	catsnp <- rep(NA,times=nrow(outfile))#
		if(any(known_Ppos)==TRUE){catsnp[known_Ppos] <- "Pcausal"}#
		if(any(known_Mpos)==TRUE){catsnp[known_Mpos] <- "Mcausal"}#
		if(any(known_Pn)==TRUE){catsnp[known_Pn] <- "Pneut"}#
		if(any(known_Mn)==TRUE){catsnp[known_Mn] <- "Mneut"}#
	outfile$catsnp <- catsnp#
	return(outfile)#
}#
#
summarizeSNPcalls <- function(outfilewcols){#
	startcol <- grep("false_pos",colnames(outfilewcols))#
	conttabprp <- matrix(#
		colSums(outfilewcols[,startcol:(startcol+3)]) /#
		rep(c(sum(outfilewcols$known_neg),sum(outfilewcols$known_pos)),times=2),  #
		#c(f+ t+ t- f- ) /  c(allneg, allpos, allneg,allpos)#
		byrow=T,ncol=2#
		)#
	conttab <- 	colSums(outfilewcols[,startcol:(startcol+3)])#
	possout <- c("MneutTRUE",  "McausalTRUE",   "MneutFALSE",    "McausalFALSE", "PneutTRUE",  "PcausalTRUE",   "PneutFALSE",    "PcausalFALSE")#
	cattots <- sapply(1:length(possout), function(o)  sum(paste(outfilewcols$catsnp,outfilewcols$p_used < 0.05,sep="")==possout[o] ) )#
	names(cattots)<-possout#
	catshouldbesums <- c(  rep( c(sum(cattots[c(1,3)]),sum(cattots[c(2,4)] )),times=2 )  ,  #
	rep( c(sum(cattots[c(5,7)]),sum(cattots[c(6,8)])),times=2 ) ) #
	catshouldbesums[is.na(catshouldbesums)] <- 0#
	return(list(conttabprp=conttabprp,conttab=conttab, cattots=cattots,catshouldbesums=catshouldbesums))#
}#
#
connectIG <- function(inputlociinfo, inputgwasinfo){#
	matchloci <- sapply(1:nrow(inputlociinfo), function(z) which(as.character(inputgwasinfo$rs) == as.character(inputlociinfo$locusname[z])))#
	is.inHABA <- sapply(1:length(matchloci), function(z) ifelse(length(matchloci[[z]])==1,matchloci[[z]],NA))#
	connectedinfo <- inputgwasinfo[is.inHABA,]#
	return(connectedinfo)#
}
addcols <- function(outfile, k=NULL){#
	outfile$recodebeta <- sapply(1:nrow(outfile), function(z) if(outfile$allele1[z]==1){outfile$beta[z]} else {-1*outfile$beta[z]} )#allele1 is the minor allele, but states 1 and 2 are derived and ancestral (0)#
	outfile$known_pos <- sapply(outfile$rs, function(z) length(grep("c",z))==1)#
	outfile$known_neg <- !outfile$known_pos#
	if(is.null(k)){#
p <- findInterval(outfile$p_score,sort(outfile$p_score))/nrow(outfile)#
#  	p <- findInterval(outfile$beta,sort(outfile$beta))/nrow(outfile) #fewer total loci identified in both, regardless of how count. BUT makes the holo analysis more effective.#
#
	} else if(k==TRUE){#
		p <- outfile$p_score#
	}#
	outfile$p_used <- p #
	outfile$false_pos <- (p < 0.05 & outfile$known_pos == F)#
	outfile$true_pos <-  (p < 0.05 & outfile$known_pos == T)#
	outfile$true_neg <-  (p > 0.05 & outfile$known_pos == F)#
	outfile$false_neg <- (p > 0.05 & outfile$known_pos == T)#
#
	known_Ppos <- sapply(outfile$rs, function(z) length(grep("cP",z))==1)#
	known_Pn <- sapply(outfile$rs, function(z) length(grep("nP",z))==1)#
	known_Mpos <- sapply(outfile$rs, function(z) length(grep("cM",z))==1)#
	known_Mn <- sapply(outfile$rs, function(z) length(grep("nM",z))==1)#
	catsnp <- rep(NA,times=nrow(outfile))#
		if(any(known_Ppos)==TRUE){catsnp[known_Ppos] <- "Pcausal"}#
		if(any(known_Mpos)==TRUE){catsnp[known_Mpos] <- "Mcausal"}#
		if(any(known_Pn)==TRUE){catsnp[known_Pn] <- "Pneut"}#
		if(any(known_Mn)==TRUE){catsnp[known_Mn] <- "Mneut"}#
	outfile$catsnp <- catsnp#
	return(outfile)#
}
plantout4b <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/PLANTgemmaABO4b.assoc.txt",header=T,sep="\t")#
plantout4bff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/PLANTgemmaABO4bff.assoc.txt",header=T,sep="\t")#
plantout4a <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/PLANTgemmaABO4a.assoc.txt",header=T,sep="\t")#
plantout4aff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/PLANTgemmaABO4aff.assoc.txt",header=T,sep="\t")#
plantout4f <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/PLANTgemmaABO4f.assoc.txt",header=T,sep="\t")#
plantout4fff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/PLANTgemmaABO4fff.assoc.txt",header=T,sep="\t")#
microut4b <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/MICRgemmaABO4b.assoc.txt",header=T,sep="\t")#
microut4bff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/MICRgemmaABO4bff.assoc.txt",header=T,sep="\t")#
microut4a <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/MICRgemmaABO4a.assoc.txt",header=T,sep="\t")#
microut4aff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/MICRgemmaABO4aff.assoc.txt",header=T,sep="\t")#
microut4f <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/MICRgemmaABO4f.assoc.txt",header=T,sep="\t")#
microut4fff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/MICRgemmaABO4fff.assoc.txt",header=T,sep="\t")#
#
plantout4b <- addcols(plantout4b)#
plantout4bff <- addcols(plantout4bff)#
plantout4a <- addcols(plantout4a)#
plantout4aff <- addcols(plantout4aff)#
plantout4f <- addcols(plantout4f)#
plantout4fff <- addcols(plantout4fff)#
microut4b <- addcols(microut4b)#
microut4bff <- addcols(microut4bff)#
microut4a <- addcols(microut4a)#
microut4aff <- addcols(microut4aff)#
microut4f <- addcols(microut4f)#
microut4fff <- addcols(microut4fff)#
#
summarizep4b  <- summarizeSNPcalls(plantout4b)#
summarizep4bff  <- summarizeSNPcalls(plantout4bff)#
summarizep4a  <- summarizeSNPcalls(plantout4a)#
summarizep4aff  <- summarizeSNPcalls(plantout4aff)#
summarizep4f  <- summarizeSNPcalls(plantout4f)#
summarizep4fff  <- summarizeSNPcalls(plantout4fff)#
summarizem4b  <- summarizeSNPcalls(microut4b)#
summarizem4bff  <- summarizeSNPcalls(microut4bff)#
summarizem4a  <- summarizeSNPcalls(microut4a)#
summarizem4aff  <- summarizeSNPcalls(microut4aff)#
summarizem4f  <- summarizeSNPcalls(microut4f)#
summarizem4fff  <- summarizeSNPcalls(microut4fff)#
#
#verifying that the zerostate is always zero. if not, then have to re-evaluate how deal with recoding beta!!!#
plantLinfo4b <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/plantlociABO4b.csv",header=T)#
plantLinfo4bff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/plantlociABO4bff.csv",header=T)#
plantLinfo4a <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/plantlociABO4a.csv",header=T)#
plantLinfo4aff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/plantlociABO4aff.csv",header=T)#
plantLinfo4f <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/plantlociABO4f.csv",header=T)#
plantLinfo4fff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/plantlociABO4fff.csv",header=T)#
micrLinfo4b <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/micrlociABO4b.csv",header=T)#
micrLinfo4bff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/micrlociABO4bff.csv",header=T)#
micrLinfo4a <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/micrlociABO4a.csv",header=T)#
micrLinfo4aff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/micrlociABO4aff.csv",header=T)#
micrLinfo4f <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/micrlociABO4f.csv",header=T)#
micrLinfo4fff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/micrlociABO4fff.csv",header=T)#
#
table(plantLinfo4bff$zerostate)#
table(plantLinfo4a$zerostate)#
table(plantLinfo4aff$zerostate)#
table(plantLinfo4f$zerostate)#
table(plantLinfo4fff$zerostate)#
table(micrLinfo4b$zerostate)#
table(micrLinfo4bff$zerostate)#
table(micrLinfo4a$zerostate)#
table(micrLinfo4aff$zerostate)#
table(micrLinfo4f$zerostate)#
table(micrLinfo4fff$zerostate)#
CIGp_4b <- connectIG(plantLinfo4b,plantout4b)#
CIGp_4bff <- connectIG(plantLinfo4bff,plantout4bff)#
CIGp_4a <- connectIG(plantLinfo4a,plantout4a)#
CIGp_4aff <- connectIG(plantLinfo4aff,plantout4aff)#
CIGp_4f <- connectIG(plantLinfo4f,plantout4f)#
CIGp_4fff <- connectIG(plantLinfo4fff,plantout4fff)#
CIGm_4b <- connectIG(micrLinfo4b,microut4b)#
CIGm_4bff <- connectIG(micrLinfo4bff,microut4bff)#
CIGm_4a <- connectIG(micrLinfo4a,microut4a)#
CIGm_4aff <- connectIG(micrLinfo4aff,microut4aff)#
CIGm_4f <- connectIG(micrLinfo4f,microut4f)#
CIGm_4fff <- connectIG(micrLinfo4fff,microut4fff)
head(plantout4f)
addcols <- function(outfile, k=NULL){#
	outfile$recodebeta <- sapply(1:nrow(outfile), function(z) if(outfile$allele1[z]==2){outfile$beta[z]} else {-1*outfile$beta[z]} )#allele1 is the minor allele, but states 1 and 2 are derived and ancestral (0)#
	outfile$known_pos <- sapply(outfile$rs, function(z) length(grep("c",z))==1)#
	outfile$known_neg <- !outfile$known_pos#
	if(is.null(k)){#
p <- findInterval(outfile$p_score,sort(outfile$p_score))/nrow(outfile)#
#  	p <- findInterval(outfile$beta,sort(outfile$beta))/nrow(outfile) #fewer total loci identified in both, regardless of how count. BUT makes the holo analysis more effective.#
#
	} else if(k==TRUE){#
		p <- outfile$p_score#
	}#
	outfile$p_used <- p #
	outfile$false_pos <- (p < 0.05 & outfile$known_pos == F)#
	outfile$true_pos <-  (p < 0.05 & outfile$known_pos == T)#
	outfile$true_neg <-  (p > 0.05 & outfile$known_pos == F)#
	outfile$false_neg <- (p > 0.05 & outfile$known_pos == T)#
#
	known_Ppos <- sapply(outfile$rs, function(z) length(grep("cP",z))==1)#
	known_Pn <- sapply(outfile$rs, function(z) length(grep("nP",z))==1)#
	known_Mpos <- sapply(outfile$rs, function(z) length(grep("cM",z))==1)#
	known_Mn <- sapply(outfile$rs, function(z) length(grep("nM",z))==1)#
	catsnp <- rep(NA,times=nrow(outfile))#
		if(any(known_Ppos)==TRUE){catsnp[known_Ppos] <- "Pcausal"}#
		if(any(known_Mpos)==TRUE){catsnp[known_Mpos] <- "Mcausal"}#
		if(any(known_Pn)==TRUE){catsnp[known_Pn] <- "Pneut"}#
		if(any(known_Mn)==TRUE){catsnp[known_Mn] <- "Mneut"}#
	outfile$catsnp <- catsnp#
	return(outfile)#
}#
#
summarizeSNPcalls <- function(outfilewcols){#
	startcol <- grep("false_pos",colnames(outfilewcols))#
	conttabprp <- matrix(#
		colSums(outfilewcols[,startcol:(startcol+3)]) /#
		rep(c(sum(outfilewcols$known_neg),sum(outfilewcols$known_pos)),times=2),  #
		#c(f+ t+ t- f- ) /  c(allneg, allpos, allneg,allpos)#
		byrow=T,ncol=2#
		)#
	conttab <- 	colSums(outfilewcols[,startcol:(startcol+3)])#
	possout <- c("MneutTRUE",  "McausalTRUE",   "MneutFALSE",    "McausalFALSE", "PneutTRUE",  "PcausalTRUE",   "PneutFALSE",    "PcausalFALSE")#
	cattots <- sapply(1:length(possout), function(o)  sum(paste(outfilewcols$catsnp,outfilewcols$p_used < 0.05,sep="")==possout[o] ) )#
	names(cattots)<-possout#
	catshouldbesums <- c(  rep( c(sum(cattots[c(1,3)]),sum(cattots[c(2,4)] )),times=2 )  ,  #
	rep( c(sum(cattots[c(5,7)]),sum(cattots[c(6,8)])),times=2 ) ) #
	catshouldbesums[is.na(catshouldbesums)] <- 0#
	return(list(conttabprp=conttabprp,conttab=conttab, cattots=cattots,catshouldbesums=catshouldbesums))#
}#
#
connectIG <- function(inputlociinfo, inputgwasinfo){#
	matchloci <- sapply(1:nrow(inputlociinfo), function(z) which(as.character(inputgwasinfo$rs) == as.character(inputlociinfo$locusname[z])))#
	is.inHABA <- sapply(1:length(matchloci), function(z) ifelse(length(matchloci[[z]])==1,matchloci[[z]],NA))#
	connectedinfo <- inputgwasinfo[is.inHABA,]#
	return(connectedinfo)#
}#
plantout4b <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/PLANTgemmaABO4b.assoc.txt",header=T,sep="\t")#
plantout4bff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/PLANTgemmaABO4bff.assoc.txt",header=T,sep="\t")#
plantout4a <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/PLANTgemmaABO4a.assoc.txt",header=T,sep="\t")#
plantout4aff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/PLANTgemmaABO4aff.assoc.txt",header=T,sep="\t")#
plantout4f <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/PLANTgemmaABO4f.assoc.txt",header=T,sep="\t")#
plantout4fff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/PLANTgemmaABO4fff.assoc.txt",header=T,sep="\t")#
microut4b <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/MICRgemmaABO4b.assoc.txt",header=T,sep="\t")#
microut4bff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/MICRgemmaABO4bff.assoc.txt",header=T,sep="\t")#
microut4a <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/MICRgemmaABO4a.assoc.txt",header=T,sep="\t")#
microut4aff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/MICRgemmaABO4aff.assoc.txt",header=T,sep="\t")#
microut4f <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/MICRgemmaABO4f.assoc.txt",header=T,sep="\t")#
microut4fff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/MICRgemmaABO4fff.assoc.txt",header=T,sep="\t")#
#
plantout4b <- addcols(plantout4b)#
plantout4bff <- addcols(plantout4bff)#
plantout4a <- addcols(plantout4a)#
plantout4aff <- addcols(plantout4aff)#
plantout4f <- addcols(plantout4f)#
plantout4fff <- addcols(plantout4fff)#
microut4b <- addcols(microut4b)#
microut4bff <- addcols(microut4bff)#
microut4a <- addcols(microut4a)#
microut4aff <- addcols(microut4aff)#
microut4f <- addcols(microut4f)#
microut4fff <- addcols(microut4fff)#
#
summarizep4b  <- summarizeSNPcalls(plantout4b)#
summarizep4bff  <- summarizeSNPcalls(plantout4bff)#
summarizep4a  <- summarizeSNPcalls(plantout4a)#
summarizep4aff  <- summarizeSNPcalls(plantout4aff)#
summarizep4f  <- summarizeSNPcalls(plantout4f)#
summarizep4fff  <- summarizeSNPcalls(plantout4fff)#
summarizem4b  <- summarizeSNPcalls(microut4b)#
summarizem4bff  <- summarizeSNPcalls(microut4bff)#
summarizem4a  <- summarizeSNPcalls(microut4a)#
summarizem4aff  <- summarizeSNPcalls(microut4aff)#
summarizem4f  <- summarizeSNPcalls(microut4f)#
summarizem4fff  <- summarizeSNPcalls(microut4fff)#
#
#verifying that the zerostate is always zero. if not, then have to re-evaluate how deal with recoding beta!!!#
plantLinfo4b <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/plantlociABO4b.csv",header=T)#
plantLinfo4bff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/plantlociABO4bff.csv",header=T)#
plantLinfo4a <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/plantlociABO4a.csv",header=T)#
plantLinfo4aff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/plantlociABO4aff.csv",header=T)#
plantLinfo4f <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/plantlociABO4f.csv",header=T)#
plantLinfo4fff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/plantlociABO4fff.csv",header=T)#
micrLinfo4b <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/micrlociABO4b.csv",header=T)#
micrLinfo4bff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/micrlociABO4bff.csv",header=T)#
micrLinfo4a <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/micrlociABO4a.csv",header=T)#
micrLinfo4aff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/micrlociABO4aff.csv",header=T)#
micrLinfo4f <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/micrlociABO4f.csv",header=T)#
micrLinfo4fff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/micrlociABO4fff.csv",header=T)#
#
table(plantLinfo4bff$zerostate)#
table(plantLinfo4a$zerostate)#
table(plantLinfo4aff$zerostate)#
table(plantLinfo4f$zerostate)#
table(plantLinfo4fff$zerostate)#
table(micrLinfo4b$zerostate)#
table(micrLinfo4bff$zerostate)#
table(micrLinfo4a$zerostate)#
table(micrLinfo4aff$zerostate)#
table(micrLinfo4f$zerostate)#
table(micrLinfo4fff$zerostate)#
CIGp_4b <- connectIG(plantLinfo4b,plantout4b)#
CIGp_4bff <- connectIG(plantLinfo4bff,plantout4bff)#
CIGp_4a <- connectIG(plantLinfo4a,plantout4a)#
CIGp_4aff <- connectIG(plantLinfo4aff,plantout4aff)#
CIGp_4f <- connectIG(plantLinfo4f,plantout4f)#
CIGp_4fff <- connectIG(plantLinfo4fff,plantout4fff)#
CIGm_4b <- connectIG(micrLinfo4b,microut4b)#
CIGm_4bff <- connectIG(micrLinfo4bff,microut4bff)#
CIGm_4a <- connectIG(micrLinfo4a,microut4a)#
CIGm_4aff <- connectIG(micrLinfo4aff,microut4aff)#
CIGm_4f <- connectIG(micrLinfo4f,microut4f)#
CIGm_4fff <- connectIG(micrLinfo4fff,microut4fff)
head(plantout4f)
addcols <- function(outfile, k=NULL){#
	outfile$recodebeta <- sapply(1:nrow(outfile), function(z) ifelse(outfile$allele1[z]==2, outfile$beta[z],-1*outfile$beta[z]) )#allele1 is the minor allele, but states 1 and 2 are derived and ancestral (0)#
	outfile$known_pos <- sapply(outfile$rs, function(z) length(grep("c",z))==1)#
	outfile$known_neg <- !outfile$known_pos#
	if(is.null(k)){#
p <- findInterval(outfile$p_score,sort(outfile$p_score))/nrow(outfile)#
#  	p <- findInterval(outfile$beta,sort(outfile$beta))/nrow(outfile) #fewer total loci identified in both, regardless of how count. BUT makes the holo analysis more effective.#
#
	} else if(k==TRUE){#
		p <- outfile$p_score#
	}#
	outfile$p_used <- p #
	outfile$false_pos <- (p < 0.05 & outfile$known_pos == F)#
	outfile$true_pos <-  (p < 0.05 & outfile$known_pos == T)#
	outfile$true_neg <-  (p > 0.05 & outfile$known_pos == F)#
	outfile$false_neg <- (p > 0.05 & outfile$known_pos == T)#
#
	known_Ppos <- sapply(outfile$rs, function(z) length(grep("cP",z))==1)#
	known_Pn <- sapply(outfile$rs, function(z) length(grep("nP",z))==1)#
	known_Mpos <- sapply(outfile$rs, function(z) length(grep("cM",z))==1)#
	known_Mn <- sapply(outfile$rs, function(z) length(grep("nM",z))==1)#
	catsnp <- rep(NA,times=nrow(outfile))#
		if(any(known_Ppos)==TRUE){catsnp[known_Ppos] <- "Pcausal"}#
		if(any(known_Mpos)==TRUE){catsnp[known_Mpos] <- "Mcausal"}#
		if(any(known_Pn)==TRUE){catsnp[known_Pn] <- "Pneut"}#
		if(any(known_Mn)==TRUE){catsnp[known_Mn] <- "Mneut"}#
	outfile$catsnp <- catsnp#
	return(outfile)#
}#
#
summarizeSNPcalls <- function(outfilewcols){#
	startcol <- grep("false_pos",colnames(outfilewcols))#
	conttabprp <- matrix(#
		colSums(outfilewcols[,startcol:(startcol+3)]) /#
		rep(c(sum(outfilewcols$known_neg),sum(outfilewcols$known_pos)),times=2),  #
		#c(f+ t+ t- f- ) /  c(allneg, allpos, allneg,allpos)#
		byrow=T,ncol=2#
		)#
	conttab <- 	colSums(outfilewcols[,startcol:(startcol+3)])#
	possout <- c("MneutTRUE",  "McausalTRUE",   "MneutFALSE",    "McausalFALSE", "PneutTRUE",  "PcausalTRUE",   "PneutFALSE",    "PcausalFALSE")#
	cattots <- sapply(1:length(possout), function(o)  sum(paste(outfilewcols$catsnp,outfilewcols$p_used < 0.05,sep="")==possout[o] ) )#
	names(cattots)<-possout#
	catshouldbesums <- c(  rep( c(sum(cattots[c(1,3)]),sum(cattots[c(2,4)] )),times=2 )  ,  #
	rep( c(sum(cattots[c(5,7)]),sum(cattots[c(6,8)])),times=2 ) ) #
	catshouldbesums[is.na(catshouldbesums)] <- 0#
	return(list(conttabprp=conttabprp,conttab=conttab, cattots=cattots,catshouldbesums=catshouldbesums))#
}#
#
connectIG <- function(inputlociinfo, inputgwasinfo){#
	matchloci <- sapply(1:nrow(inputlociinfo), function(z) which(as.character(inputgwasinfo$rs) == as.character(inputlociinfo$locusname[z])))#
	is.inHABA <- sapply(1:length(matchloci), function(z) ifelse(length(matchloci[[z]])==1,matchloci[[z]],NA))#
	connectedinfo <- inputgwasinfo[is.inHABA,]#
	return(connectedinfo)#
}#
plantout4b <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/PLANTgemmaABO4b.assoc.txt",header=T,sep="\t")#
plantout4bff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/PLANTgemmaABO4bff.assoc.txt",header=T,sep="\t")#
plantout4a <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/PLANTgemmaABO4a.assoc.txt",header=T,sep="\t")#
plantout4aff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/PLANTgemmaABO4aff.assoc.txt",header=T,sep="\t")#
plantout4f <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/PLANTgemmaABO4f.assoc.txt",header=T,sep="\t")#
plantout4fff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/PLANTgemmaABO4fff.assoc.txt",header=T,sep="\t")#
microut4b <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/MICRgemmaABO4b.assoc.txt",header=T,sep="\t")#
microut4bff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/MICRgemmaABO4bff.assoc.txt",header=T,sep="\t")#
microut4a <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/MICRgemmaABO4a.assoc.txt",header=T,sep="\t")#
microut4aff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/MICRgemmaABO4aff.assoc.txt",header=T,sep="\t")#
microut4f <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/MICRgemmaABO4f.assoc.txt",header=T,sep="\t")#
microut4fff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/MICRgemmaABO4fff.assoc.txt",header=T,sep="\t")#
#
plantout4b <- addcols(plantout4b)#
plantout4bff <- addcols(plantout4bff)#
plantout4a <- addcols(plantout4a)#
plantout4aff <- addcols(plantout4aff)#
plantout4f <- addcols(plantout4f)#
plantout4fff <- addcols(plantout4fff)#
microut4b <- addcols(microut4b)#
microut4bff <- addcols(microut4bff)#
microut4a <- addcols(microut4a)#
microut4aff <- addcols(microut4aff)#
microut4f <- addcols(microut4f)#
microut4fff <- addcols(microut4fff)#
#
summarizep4b  <- summarizeSNPcalls(plantout4b)#
summarizep4bff  <- summarizeSNPcalls(plantout4bff)#
summarizep4a  <- summarizeSNPcalls(plantout4a)#
summarizep4aff  <- summarizeSNPcalls(plantout4aff)#
summarizep4f  <- summarizeSNPcalls(plantout4f)#
summarizep4fff  <- summarizeSNPcalls(plantout4fff)#
summarizem4b  <- summarizeSNPcalls(microut4b)#
summarizem4bff  <- summarizeSNPcalls(microut4bff)#
summarizem4a  <- summarizeSNPcalls(microut4a)#
summarizem4aff  <- summarizeSNPcalls(microut4aff)#
summarizem4f  <- summarizeSNPcalls(microut4f)#
summarizem4fff  <- summarizeSNPcalls(microut4fff)#
#
#verifying that the zerostate is always zero. if not, then have to re-evaluate how deal with recoding beta!!!#
plantLinfo4b <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/plantlociABO4b.csv",header=T)#
plantLinfo4bff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/plantlociABO4bff.csv",header=T)#
plantLinfo4a <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/plantlociABO4a.csv",header=T)#
plantLinfo4aff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/plantlociABO4aff.csv",header=T)#
plantLinfo4f <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/plantlociABO4f.csv",header=T)#
plantLinfo4fff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/plantlociABO4fff.csv",header=T)#
micrLinfo4b <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/micrlociABO4b.csv",header=T)#
micrLinfo4bff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/micrlociABO4bff.csv",header=T)#
micrLinfo4a <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/micrlociABO4a.csv",header=T)#
micrLinfo4aff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/micrlociABO4aff.csv",header=T)#
micrLinfo4f <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/micrlociABO4f.csv",header=T)#
micrLinfo4fff <- read.csv("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/micrlociABO4fff.csv",header=T)#
#
table(plantLinfo4bff$zerostate)#
table(plantLinfo4a$zerostate)#
table(plantLinfo4aff$zerostate)#
table(plantLinfo4f$zerostate)#
table(plantLinfo4fff$zerostate)#
table(micrLinfo4b$zerostate)#
table(micrLinfo4bff$zerostate)#
table(micrLinfo4a$zerostate)#
table(micrLinfo4aff$zerostate)#
table(micrLinfo4f$zerostate)#
table(micrLinfo4fff$zerostate)#
CIGp_4b <- connectIG(plantLinfo4b,plantout4b)#
CIGp_4bff <- connectIG(plantLinfo4bff,plantout4bff)#
CIGp_4a <- connectIG(plantLinfo4a,plantout4a)#
CIGp_4aff <- connectIG(plantLinfo4aff,plantout4aff)#
CIGp_4f <- connectIG(plantLinfo4f,plantout4f)#
CIGp_4fff <- connectIG(plantLinfo4fff,plantout4fff)#
CIGm_4b <- connectIG(micrLinfo4b,microut4b)#
CIGm_4bff <- connectIG(micrLinfo4bff,microut4bff)#
CIGm_4a <- connectIG(micrLinfo4a,microut4a)#
CIGm_4aff <- connectIG(micrLinfo4aff,microut4aff)#
CIGm_4f <- connectIG(micrLinfo4f,microut4f)#
CIGm_4fff <- connectIG(micrLinfo4fff,microut4fff)
head(plantout4f)
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
plot(		CIGp_4b$recodebeta~(plantLinfo4b$reststate), cex = ifelse(CIGp_4b$p_used < 0.05,1.5,0.5), xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4b$recodebeta~(micrLinfo4b$reststate), cex = ifelse(CIGm_4b$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Estimated recodebeta",side=2, line=2,adj=-0.5)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4b$recodebeta,plantLinfo4b$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4b$recodebeta, micrLinfo4b$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4bff$recodebeta~(plantLinfo4bff$reststate), cex = ifelse(CIGp_4bff$p_used < 0.05,1.5,0.5),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4bff$recodebeta~(micrLinfo4bff$reststate), cex = ifelse(CIGm_4bff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4bff$recodebeta,plantLinfo4bff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4bff$recodebeta, micrLinfo4bff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4a$recodebeta~(plantLinfo4a$reststate), cex = ifelse(CIGp_4a$p_used < 0.05,1.5,0.5),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4a$recodebeta~(micrLinfo4a$reststate), cex = ifelse(CIGm_4a$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4a$recodebeta,plantLinfo4a$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4a$recodebeta, micrLinfo4a$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4aff$recodebeta~(plantLinfo4aff$reststate), cex = ifelse(CIGp_4aff$p_used < 0.05,1.5,0.5),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4aff$recodebeta~(micrLinfo4aff$reststate), cex = ifelse(CIGm_4aff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	 mtext("Known Effect",side=1, line=2)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4aff$recodebeta,plantLinfo4aff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4aff$recodebeta, micrLinfo4aff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4f$recodebeta~(plantLinfo4f$reststate), cex = ifelse(CIGp_4f$p_used < 0.05,1.5,0.5),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4f$recodebeta~(micrLinfo4f$reststate), cex = ifelse(CIGm_4f$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4f$recodebeta,plantLinfo4f$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4f$recodebeta, micrLinfo4f$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4fff$recodebeta~(plantLinfo4fff$reststate), cex = ifelse(CIGp_4fff$p_used < 0.05,1.5,0.5),  xlim=c(-0.5,0.7),ylim=c(-2.5,2),col=rgb(0,0.5,0)) #
	points(	CIGm_4fff$recodebeta~(micrLinfo4fff$reststate), cex = ifelse(CIGm_4fff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4fff$recodebeta,plantLinfo4fff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4fff$recodebeta, micrLinfo4fff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
legend(-0.3,-1.8,c("Host","Microbe"),fill=c(rgb(0,0.5,0),rgb(0.5,0,0.5)),bty="n")
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
plot(	   CIGp_4b$recodebeta~(CIGp_4b$af), cex = ifelse(CIGp_4b$p_used < 0.05,1.5,0.5), col=rgb(0,0.5,0),  xlim=c(0,0.5),ylim=c(-2.5,2.5)) #limits might need to change#
	points(CIGm_4b$recodebeta~(CIGm_4b$af), cex = ifelse(CIGm_4b$p_used < 0.05,1.5,0.5),  col=rgb(0.5,0,0.5))#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Estimated recodebeta",side=2, line=2,adj=-0.5)#
	abline(h=0)#
plot(      CIGp_4bff$recodebeta~(CIGp_4bff$af), cex = ifelse(CIGp_4bff$p_used < 0.05,1.5,0.5),, col=rgb(0,0.5,0), xlim=c(0,0.5),ylim=c(-2.5,2.5))#
	points(CIGm_4bff$recodebeta~(CIGm_4bff$af), cex = ifelse(CIGm_4bff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
	abline(h=0)#
plot(	   CIGp_4a$recodebeta~(CIGp_4a$af), cex = ifelse(CIGp_4a$p_used < 0.05,1.5,0.5),col=rgb(0,0.5,0),  xlim=c(0,0.5),ylim=c(-2.5,2.5)) #
	points(CIGm_4a$recodebeta~(CIGm_4a$af), cex = ifelse(CIGm_4a$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
	abline(h=0)#
plot(	   CIGp_4aff$recodebeta~(CIGp_4aff$af), cex = ifelse(CIGp_4aff$p_used < 0.05,1.5,0.5), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-2.5,2.5)) #
	points(CIGm_4aff$recodebeta~(CIGm_4aff$af), cex = ifelse(CIGm_4aff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	 mtext("Minor Allele Frequency",side=1, line=2)#
	abline(h=0)#
plot(	   CIGp_4f$recodebeta~(CIGp_4f$af), cex = ifelse(CIGp_4f$p_used < 0.05,1.5,0.5), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-2.5,2.5)) #
	points(CIGm_4f$recodebeta~(CIGm_4f$af), cex = ifelse(CIGm_4f$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
	abline(h=0)#
plot(	   CIGp_4fff$recodebeta~(CIGp_4fff$af), cex = ifelse(CIGp_4fff$p_used < 0.05,1.5,0.5), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-2.5,2.5))#
	points(CIGm_4fff$recodebeta~(CIGm_4fff$af), cex = ifelse(CIGm_4fff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	abline(h=0)#
legend(0.3,-1.7,c("Host","Microbe"),fill=c(rgb(0,0.5,0),rgb(0.5,0,0.5)),bty="n")
range( c(plantLinfo4b$reststate,plantLinfo4bff$reststate,plantLinfo4a$reststate,plantLinfo4aff$reststate,plantLinfo4f$reststate,plantLinfo4fff$reststate))#
range( c(micrLinfo4b$reststate,micrLinfo4bff$reststate,micrLinfo4a$reststate,micrLinfo4aff$reststate,micrLinfo4f$reststate,micrLinfo4fff$reststate))#
range( c(CIGp_4b$beta,CIGp_4bff$beta,CIGp_4a$beta,CIGp_4aff$beta,CIGp_4f$beta,CIGp_4fff$beta),na.rm=T)#
range( c(CIGm_4b$beta,CIGm_4bff$beta,CIGm_4a$beta,CIGm_4aff$beta,CIGm_4f$beta,CIGm_4fff$beta),na.rm=T)
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
plot(		CIGp_4b$recodebeta~(plantLinfo4b$reststate), cex = ifelse(CIGp_4b$p_used < 0.05,1.5,0.5), xlim=c(-0.5,0.7),ylim=c(-3,1.5),col=rgb(0,0.5,0)) #
	points(	CIGm_4b$recodebeta~(micrLinfo4b$reststate), cex = ifelse(CIGm_4b$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Estimated recodebeta",side=2, line=2,adj=-0.5)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4b$recodebeta,plantLinfo4b$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4b$recodebeta, micrLinfo4b$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4bff$recodebeta~(plantLinfo4bff$reststate), cex = ifelse(CIGp_4bff$p_used < 0.05,1.5,0.5),  xlim=c(-0.5,0.7),ylim=c(-3,1.5),col=rgb(0,0.5,0)) #
	points(	CIGm_4bff$recodebeta~(micrLinfo4bff$reststate), cex = ifelse(CIGm_4bff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4bff$recodebeta,plantLinfo4bff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4bff$recodebeta, micrLinfo4bff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4a$recodebeta~(plantLinfo4a$reststate), cex = ifelse(CIGp_4a$p_used < 0.05,1.5,0.5),  xlim=c(-0.5,0.7),ylim=c(-3,1.5),col=rgb(0,0.5,0)) #
	points(	CIGm_4a$recodebeta~(micrLinfo4a$reststate), cex = ifelse(CIGm_4a$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4a$recodebeta,plantLinfo4a$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4a$recodebeta, micrLinfo4a$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4aff$recodebeta~(plantLinfo4aff$reststate), cex = ifelse(CIGp_4aff$p_used < 0.05,1.5,0.5),  xlim=c(-0.5,0.7),ylim=c(-3,1.5),col=rgb(0,0.5,0)) #
	points(	CIGm_4aff$recodebeta~(micrLinfo4aff$reststate), cex = ifelse(CIGm_4aff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	 mtext("Known Effect",side=1, line=2)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4aff$recodebeta,plantLinfo4aff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4aff$recodebeta, micrLinfo4aff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4f$recodebeta~(plantLinfo4f$reststate), cex = ifelse(CIGp_4f$p_used < 0.05,1.5,0.5),  xlim=c(-0.5,0.7),ylim=c(-3,1.5),col=rgb(0,0.5,0)) #
	points(	CIGm_4f$recodebeta~(micrLinfo4f$reststate), cex = ifelse(CIGm_4f$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4f$recodebeta,plantLinfo4f$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4f$recodebeta, micrLinfo4f$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4fff$recodebeta~(plantLinfo4fff$reststate), cex = ifelse(CIGp_4fff$p_used < 0.05,1.5,0.5),  xlim=c(-0.5,0.7),ylim=c(-3,1.5),col=rgb(0,0.5,0)) #
	points(	CIGm_4fff$recodebeta~(micrLinfo4fff$reststate), cex = ifelse(CIGm_4fff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4fff$recodebeta,plantLinfo4fff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4fff$recodebeta, micrLinfo4fff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
legend(-0.3,-1.8,c("Host","Microbe"),fill=c(rgb(0,0.5,0),rgb(0.5,0,0.5)),bty="n")
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
image(t(matrix( (summarizep4b$cattots/summarizep4b$catshouldbesums)[5:8],nrow=2,byrow=F)),zlim=c(0,1),xaxt="n",yaxt="n",main="")#
	axis(2,at=c(0,1),labels=c("neutral","causal"))#
	axis(1,at=c(0,1),labels=c("p < 0.05","p > 0.05"))#
	text(x=c(0,0,1,1),y=c(0,1,0,1),labels=paste(#
		summarizep4b$cattots[5:8],rep("/",times=4), summarizep4b$catshouldbesums[5:8], rep("=",times=4),#
		round(  (summarizep4b$cattots/summarizep4b$catshouldbesums)[5:8],digits=2), sep="" ))#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No link to microbe fitness",side=3)#
image(t(matrix( (summarizep4bff$cattots/summarizep4bff$catshouldbesums)[5:8],nrow=2,byrow=F)),zlim=c(0,1),xaxt="n",yaxt="n",main="")#
	axis(2,at=c(0,1),labels=c("neutral","causal"))#
	axis(1,at=c(0,1),labels=c("p < 0.05","p > 0.05"))#
	text(x=c(0,0,1,1),y=c(0,1,0,1),labels=paste(#
		summarizep4bff$cattots[5:8],rep("/",times=4), summarizep4bff$catshouldbesums[5:8], rep("=",times=4),#
		round(  (summarizep4bff$cattots/summarizep4bff$catshouldbesums)[5:8],digits=2), sep="" ))#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
image(t(matrix( (summarizep4a$cattots/summarizep4a$catshouldbesums)[5:8],nrow=2,byrow=F)),zlim=c(0,1),xaxt="n",yaxt="n",main="")#
	axis(2,at=c(0,1),labels=c("neutral","causal"))#
	axis(1,at=c(0,1),labels=c("p < 0.05","p > 0.05"))#
	text(x=c(0,0,1,1),y=c(0,1,0,1),labels=paste(#
		summarizep4a$cattots[5:8],rep("/",times=4), summarizep4a$catshouldbesums[5:8], rep("=",times=4),#
		round(  (summarizep4a$cattots/summarizep4a$catshouldbesums)[5:8],digits=2), sep="" ))#
	mtext("Equal links to fitness",side=3)#
	mtext("Same optima",side=3,line=2)#
image(t(matrix( (summarizep4aff$cattots/summarizep4aff$catshouldbesums)[5:8],nrow=2,byrow=F)),zlim=c(0,1),xaxt="n",yaxt="n",main="")#
	axis(2,at=c(0,1),labels=c("neutral","causal"))#
	axis(1,at=c(0,1),labels=c("p < 0.05","p > 0.05"))#
	text(x=c(0,0,1,1),y=c(0,1,0,1),labels=paste(#
		summarizep4aff$cattots[5:8],rep("/",times=4), summarizep4aff$catshouldbesums[5:8], rep("=",times=4),#
		round(  (summarizep4aff$cattots/summarizep4aff$catshouldbesums)[5:8],digits=2), sep="" ))#
image(t(matrix( (summarizep4f$cattots/summarizep4f$catshouldbesums)[5:8],nrow=2,byrow=F)),zlim=c(0,1),xaxt="n",yaxt="n",main="")#
	axis(2,at=c(0,1),labels=c("neutral","causal"))#
	axis(1,at=c(0,1),labels=c("p < 0.05","p > 0.05"))#
	text(x=c(0,0,1,1),y=c(0,1,0,1),labels=paste(#
		summarizep4f$cattots[5:8],rep("/",times=4), summarizep4f$catshouldbesums[5:8], rep("=",times=4),#
		round(  (summarizep4f$cattots/summarizep4f$catshouldbesums)[5:8],digits=2), sep="" ))#
	mtext("Equal links to fitness",side=3)#
	mtext("Different optima",side=3,line=2)#
image(t(matrix( (summarizep4fff$cattots/summarizep4fff$catshouldbesums)[5:8],nrow=2,byrow=F)),zlim=c(0,1),xaxt="n",yaxt="n",main="")#
	axis(2,at=c(0,1),labels=c("neutral","causal"))#
	axis(1,at=c(0,1),labels=c("p < 0.05","p > 0.05"))#
	text(x=c(0,0,1,1),y=c(0,1,0,1),labels=paste(#
		summarizep4fff$cattots[5:8],rep("/",times=4), summarizep4fff$catshouldbesums[5:8], rep("=",times=4),#
		round(  (summarizep4fff$cattots/summarizep4fff$catshouldbesums)[5:8],digits=2), sep="" ))
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
plot(		plantLinfo4b$reststate~(CIGp_4b$af), cex = ifelse(CIGp_4b$p_used < 0.05,1.5,0.5), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0)) #
	points( micrLinfo4b$reststate~(CIGm_4b$af), cex = ifelse(CIGm_4b$p_used < 0.05,1.5,0.5), col=rgb(0.5,0,0.5) )#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Known effect",side=2, line=2,adj=-0.5)#
	abline(h=0)#
plot(		plantLinfo4bff$reststate~(CIGp_4bff$af), cex = ifelse(CIGp_4bff$p_used < 0.05,1.5,0.5), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4bff$reststate~(CIGm_4bff$af), cex = ifelse(CIGm_4bff$p_used < 0.05,1.5,0.5), col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
	abline(h=0)#
plot(		plantLinfo4a$reststate~(CIGp_4a$af), cex = ifelse(CIGp_4a$p_used < 0.05,1.5,0.5), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4a$reststate~(CIGm_4a$af), cex = ifelse(CIGm_4a$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
	abline(h=0)#
plot(		plantLinfo4aff$reststate~(CIGp_4aff$af), cex = ifelse(CIGp_4aff$p_used < 0.05,1.5,0.5), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4aff$reststate~(CIGm_4aff$af), cex = ifelse(CIGm_4aff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	 mtext("Minor Allele Frequency",side=1, line=2)#
	abline(h=0)#
plot(		plantLinfo4f$reststate~(CIGp_4f$af), cex = ifelse(CIGp_4f$p_used < 0.05,1.5,0.5), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4f$reststate~(CIGm_4f$af), cex = ifelse(CIGm_4f$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
	abline(h=0)#
plot(		plantLinfo4fff$reststate~(CIGp_4fff$af), cex = ifelse(CIGp_4fff$p_used < 0.05,1.5,0.5), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4fff$reststate~(CIGm_4fff$af), cex = ifelse(CIGm_4fff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	abline(h=0)#
legend(0.3,-0.3,c("Host","Microbe"),fill=c(rgb(0,0.5,0),rgb(0.5,0,0.5)),bty="n")
table(plantout4f$chr)
table(plantout4f$ps)
length(table(plantout4f$ps))
head(plantLinfo4b)
table(plantLinfo4b$linkage)
table(plantLinfo4f$linkage)
sum(table(plantLinfo4f$linkage))
sum(table(plantLinfo4b$linkage))
#visualize what is lost, it is the small effect size loci#
pdf("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/dens_loci_tossed_sixdemos.pdf",height=4,width=12)#
par(mfrow=c(2,6))#
par(oma=c(3,3,2,0))#
par(mar=c(2,2,1,1))#
hist(plantLinfo4b$reststate,freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),col=rgb(0.9,0.75,0,alpha=0.5),ylim=c(0,60),main="") #ylim=c(0,200))##
	hist(plantLinfo4b$reststate[!is.na(CIGp_4b$recodebeta)],freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),add=T,col=rgb(0,0,0,alpha=0.25))#
	mtext("Frequency",side=2, line=3)#
	mtext("Host estimated",side=2, line=2)#
hist(plantLinfo4bff$reststate,freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),col=rgb(0.9,0.75,0,alpha=0.5),ylim=c(0,60),main="") #ylim=c(0,200))##
	hist(plantLinfo4bff$reststate[!is.na(CIGp_4bff$recodebeta)],freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),add=T,col=rgb(0,0,0,alpha=0.25))#
hist(plantLinfo4a$reststate,freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),col=rgb(0.9,0.75,0,alpha=0.5),ylim=c(0,60),main="") #ylim=c(0,200))##
	hist(plantLinfo4a$reststate[!is.na(CIGp_4a$recodebeta)],freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),add=T,col=rgb(0,0,0,alpha=0.25))#
hist(plantLinfo4aff$reststate,freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),col=rgb(0.9,0.75,0,alpha=0.5),ylim=c(0,60),main="") #ylim=c(0,200))##
	hist(plantLinfo4aff$reststate[!is.na(CIGp_4aff$recodebeta)],freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),add=T,col=rgb(0,0,0,alpha=0.25))#
hist(plantLinfo4f$reststate,freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),col=rgb(0.9,0.75,0,alpha=0.5),ylim=c(0,60),main="") #ylim=c(0,200))##
	hist(plantLinfo4f$reststate[!is.na(CIGp_4f$recodebeta)],freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),add=T,col=rgb(0,0,0,alpha=0.25))#
hist(plantLinfo4fff$reststate,freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),col=rgb(0.9,0.75,0,alpha=0.5),ylim=c(0,60),main="") #ylim=c(0,200))##
	hist(plantLinfo4fff$reststate[!is.na(CIGp_4fff$recodebeta)],freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),add=T,col=rgb(0,0,0,alpha=0.25))#
hist(micrLinfo4b$reststate,freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),col=rgb(0.9,0.75,0,alpha=0.5),ylim=c(0,60),main="") #ylim=c(0,200))##
	hist(micrLinfo4b$reststate[!is.na(CIGm_4b$recodebeta)],freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),add=T,col=rgb(0,0,0,alpha=0.25))#
	mtext("Frequency",side=2, line=3)#
	mtext("Microbe estimated",side=2, line=2)#
hist(micrLinfo4bff$reststate,freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),col=rgb(0.9,0.75,0,alpha=0.5),ylim=c(0,60),main="") #ylim=c(0,200))##
	hist(micrLinfo4bff$reststate[!is.na(CIGm_4bff$recodebeta)],freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),add=T,col=rgb(0,0,0,alpha=0.25))#
hist(micrLinfo4a$reststate,freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),col=rgb(0.9,0.75,0,alpha=0.5),ylim=c(0,60),main="") #ylim=c(0,200))##
	hist(micrLinfo4a$reststate[!is.na(CIGm_4a$recodebeta)],freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),add=T,col=rgb(0,0,0,alpha=0.25))#
hist(micrLinfo4aff$reststate,freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),col=rgb(0.9,0.75,0,alpha=0.5),ylim=c(0,60),main="") #ylim=c(0,200))##
	hist(micrLinfo4aff$reststate[!is.na(CIGm_4aff$recodebeta)],freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),add=T,col=rgb(0,0,0,alpha=0.25))#
hist(micrLinfo4f$reststate,freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),col=rgb(0.9,0.75,0,alpha=0.5),ylim=c(0,60),main="") #ylim=c(0,200))##
	hist(micrLinfo4f$reststate[!is.na(CIGm_4f$recodebeta)],freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),add=T,col=rgb(0,0,0,alpha=0.25))#
hist(micrLinfo4fff$reststate,freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),col=rgb(0.9,0.75,0,alpha=0.5),ylim=c(0,60),main="") #ylim=c(0,200))##
	hist(micrLinfo4fff$reststate[!is.na(CIGm_4fff$recodebeta)],freq=T,breaks=seq(from=-2.5,to=2.5,by=0.1),add=T,col=rgb(0,0,0,alpha=0.25))#
dev.off()#
#
#to adjust figure ranges if needed#
range( c(plantLinfo4b$reststate,plantLinfo4bff$reststate,plantLinfo4a$reststate,plantLinfo4aff$reststate,plantLinfo4f$reststate,plantLinfo4fff$reststate))#
range( c(micrLinfo4b$reststate,micrLinfo4bff$reststate,micrLinfo4a$reststate,micrLinfo4aff$reststate,micrLinfo4f$reststate,micrLinfo4fff$reststate))#
range( c(CIGp_4b$beta,CIGp_4bff$beta,CIGp_4a$beta,CIGp_4aff$beta,CIGp_4f$beta,CIGp_4fff$beta),na.rm=T)#
range( c(CIGm_4b$beta,CIGm_4bff$beta,CIGm_4a$beta,CIGm_4aff$beta,CIGm_4f$beta,CIGm_4fff$beta),na.rm=T)#
pdf("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/betas_maf_sig_sixdemos.pdf",height=5,width=7)#4, 12#
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
plot(	   CIGp_4b$recodebeta~(CIGp_4b$af), cex = ifelse(CIGp_4b$p_used < 0.05,1.5,0.5), col=rgb(0,0.5,0),  xlim=c(0,0.5),ylim=c(-3,1.5)) #limits might need to change#
	points(CIGm_4b$recodebeta~(CIGm_4b$af), cex = ifelse(CIGm_4b$p_used < 0.05,1.5,0.5),  col=rgb(0.5,0,0.5))#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Estimated recodebeta",side=2, line=2,adj=-0.5)#
	abline(h=0)#
plot(      CIGp_4bff$recodebeta~(CIGp_4bff$af), cex = ifelse(CIGp_4bff$p_used < 0.05,1.5,0.5),, col=rgb(0,0.5,0), xlim=c(0,0.5),ylim=c(-3,1.5))#
	points(CIGm_4bff$recodebeta~(CIGm_4bff$af), cex = ifelse(CIGm_4bff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
	abline(h=0)#
plot(	   CIGp_4a$recodebeta~(CIGp_4a$af), cex = ifelse(CIGp_4a$p_used < 0.05,1.5,0.5),col=rgb(0,0.5,0),  xlim=c(0,0.5),ylim=c(-3,1.5)) #
	points(CIGm_4a$recodebeta~(CIGm_4a$af), cex = ifelse(CIGm_4a$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
	abline(h=0)#
plot(	   CIGp_4aff$recodebeta~(CIGp_4aff$af), cex = ifelse(CIGp_4aff$p_used < 0.05,1.5,0.5), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-3,1.5)) #
	points(CIGm_4aff$recodebeta~(CIGm_4aff$af), cex = ifelse(CIGm_4aff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	 mtext("Minor Allele Frequency",side=1, line=2)#
	abline(h=0)#
plot(	   CIGp_4f$recodebeta~(CIGp_4f$af), cex = ifelse(CIGp_4f$p_used < 0.05,1.5,0.5), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-3,1.5)) #
	points(CIGm_4f$recodebeta~(CIGm_4f$af), cex = ifelse(CIGm_4f$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
	abline(h=0)#
plot(	   CIGp_4fff$recodebeta~(CIGp_4fff$af), cex = ifelse(CIGp_4fff$p_used < 0.05,1.5,0.5), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-3,1.5))#
	points(CIGm_4fff$recodebeta~(CIGm_4fff$af), cex = ifelse(CIGm_4fff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	abline(h=0)#
legend(0.3,-1.7,c("Host","Microbe"),fill=c(rgb(0,0.5,0),rgb(0.5,0,0.5)),bty="n")#
dev.off()#
##
#
pdf("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/knownEffs_maf_sig_sixdemos.pdf",height=5,width=7)#
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
plot(		plantLinfo4b$reststate~(CIGp_4b$af), cex = ifelse(CIGp_4b$p_used < 0.05,1.5,0.5), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0)) #
	points( micrLinfo4b$reststate~(CIGm_4b$af), cex = ifelse(CIGm_4b$p_used < 0.05,1.5,0.5), col=rgb(0.5,0,0.5) )#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Known effect",side=2, line=2,adj=-0.5)#
	abline(h=0)#
plot(		plantLinfo4bff$reststate~(CIGp_4bff$af), cex = ifelse(CIGp_4bff$p_used < 0.05,1.5,0.5), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4bff$reststate~(CIGm_4bff$af), cex = ifelse(CIGm_4bff$p_used < 0.05,1.5,0.5), col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
	abline(h=0)#
plot(		plantLinfo4a$reststate~(CIGp_4a$af), cex = ifelse(CIGp_4a$p_used < 0.05,1.5,0.5), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4a$reststate~(CIGm_4a$af), cex = ifelse(CIGm_4a$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
	abline(h=0)#
plot(		plantLinfo4aff$reststate~(CIGp_4aff$af), cex = ifelse(CIGp_4aff$p_used < 0.05,1.5,0.5), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4aff$reststate~(CIGm_4aff$af), cex = ifelse(CIGm_4aff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	 mtext("Minor Allele Frequency",side=1, line=2)#
	abline(h=0)#
plot(		plantLinfo4f$reststate~(CIGp_4f$af), cex = ifelse(CIGp_4f$p_used < 0.05,1.5,0.5), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4f$reststate~(CIGm_4f$af), cex = ifelse(CIGm_4f$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
	abline(h=0)#
plot(		plantLinfo4fff$reststate~(CIGp_4fff$af), cex = ifelse(CIGp_4fff$p_used < 0.05,1.5,0.5), xlim=c(0,0.5),ylim=c(-0.5,0.7), col=rgb(0,0.5,0))#
	points(	micrLinfo4fff$reststate~(CIGm_4fff$af), cex = ifelse(CIGm_4fff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	abline(h=0)#
legend(0.3,-0.3,c("Host","Microbe"),fill=c(rgb(0,0.5,0),rgb(0.5,0,0.5)),bty="n")#
dev.off()#
##
pdf("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/knownEffs_beta_sig_sixdemos.pdf",height=5,width=7)#
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
plot(		CIGp_4b$recodebeta~(plantLinfo4b$reststate), cex = ifelse(CIGp_4b$p_used < 0.05,1.5,0.5), xlim=c(-0.5,0.7),ylim=c(-3,1.5),col=rgb(0,0.5,0)) #
	points(	CIGm_4b$recodebeta~(micrLinfo4b$reststate), cex = ifelse(CIGm_4b$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Estimated recodebeta",side=2, line=2,adj=-0.5)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4b$recodebeta,plantLinfo4b$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4b$recodebeta, micrLinfo4b$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4bff$recodebeta~(plantLinfo4bff$reststate), cex = ifelse(CIGp_4bff$p_used < 0.05,1.5,0.5),  xlim=c(-0.5,0.7),ylim=c(-3,1.5),col=rgb(0,0.5,0)) #
	points(	CIGm_4bff$recodebeta~(micrLinfo4bff$reststate), cex = ifelse(CIGm_4bff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4bff$recodebeta,plantLinfo4bff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4bff$recodebeta, micrLinfo4bff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4a$recodebeta~(plantLinfo4a$reststate), cex = ifelse(CIGp_4a$p_used < 0.05,1.5,0.5),  xlim=c(-0.5,0.7),ylim=c(-3,1.5),col=rgb(0,0.5,0)) #
	points(	CIGm_4a$recodebeta~(micrLinfo4a$reststate), cex = ifelse(CIGm_4a$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4a$recodebeta,plantLinfo4a$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4a$recodebeta, micrLinfo4a$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4aff$recodebeta~(plantLinfo4aff$reststate), cex = ifelse(CIGp_4aff$p_used < 0.05,1.5,0.5),  xlim=c(-0.5,0.7),ylim=c(-3,1.5),col=rgb(0,0.5,0)) #
	points(	CIGm_4aff$recodebeta~(micrLinfo4aff$reststate), cex = ifelse(CIGm_4aff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	 mtext("Known Effect",side=1, line=2)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4aff$recodebeta,plantLinfo4aff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4aff$recodebeta, micrLinfo4aff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4f$recodebeta~(plantLinfo4f$reststate), cex = ifelse(CIGp_4f$p_used < 0.05,1.5,0.5),  xlim=c(-0.5,0.7),ylim=c(-3,1.5),col=rgb(0,0.5,0)) #
	points(	CIGm_4f$recodebeta~(micrLinfo4f$reststate), cex = ifelse(CIGm_4f$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4f$recodebeta,plantLinfo4f$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4f$recodebeta, micrLinfo4f$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4fff$recodebeta~(plantLinfo4fff$reststate), cex = ifelse(CIGp_4fff$p_used < 0.05,1.5,0.5),  xlim=c(-0.5,0.7),ylim=c(-3,1.5),col=rgb(0,0.5,0)) #
	points(	CIGm_4fff$recodebeta~(micrLinfo4fff$reststate), cex = ifelse(CIGm_4fff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4fff$recodebeta,plantLinfo4fff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4fff$recodebeta, micrLinfo4fff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
legend(-0.3,-1.8,c("Host","Microbe"),fill=c(rgb(0,0.5,0),rgb(0.5,0,0.5)),bty="n")#
dev.off()#
pdf("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/quickGWAStest_nokin_sixdemos_plant.pdf",height=5,width=7)#
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
image(t(matrix( (summarizep4b$cattots/summarizep4b$catshouldbesums)[5:8],nrow=2,byrow=F)),zlim=c(0,1),xaxt="n",yaxt="n",main="")#
	axis(2,at=c(0,1),labels=c("neutral","causal"))#
	axis(1,at=c(0,1),labels=c("p < 0.05","p > 0.05"))#
	text(x=c(0,0,1,1),y=c(0,1,0,1),labels=paste(#
		summarizep4b$cattots[5:8],rep("/",times=4), summarizep4b$catshouldbesums[5:8], rep("=",times=4),#
		round(  (summarizep4b$cattots/summarizep4b$catshouldbesums)[5:8],digits=2), sep="" ))#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No link to microbe fitness",side=3)#
image(t(matrix( (summarizep4bff$cattots/summarizep4bff$catshouldbesums)[5:8],nrow=2,byrow=F)),zlim=c(0,1),xaxt="n",yaxt="n",main="")#
	axis(2,at=c(0,1),labels=c("neutral","causal"))#
	axis(1,at=c(0,1),labels=c("p < 0.05","p > 0.05"))#
	text(x=c(0,0,1,1),y=c(0,1,0,1),labels=paste(#
		summarizep4bff$cattots[5:8],rep("/",times=4), summarizep4bff$catshouldbesums[5:8], rep("=",times=4),#
		round(  (summarizep4bff$cattots/summarizep4bff$catshouldbesums)[5:8],digits=2), sep="" ))#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
image(t(matrix( (summarizep4a$cattots/summarizep4a$catshouldbesums)[5:8],nrow=2,byrow=F)),zlim=c(0,1),xaxt="n",yaxt="n",main="")#
	axis(2,at=c(0,1),labels=c("neutral","causal"))#
	axis(1,at=c(0,1),labels=c("p < 0.05","p > 0.05"))#
	text(x=c(0,0,1,1),y=c(0,1,0,1),labels=paste(#
		summarizep4a$cattots[5:8],rep("/",times=4), summarizep4a$catshouldbesums[5:8], rep("=",times=4),#
		round(  (summarizep4a$cattots/summarizep4a$catshouldbesums)[5:8],digits=2), sep="" ))#
	mtext("Equal links to fitness",side=3)#
	mtext("Same optima",side=3,line=2)#
image(t(matrix( (summarizep4aff$cattots/summarizep4aff$catshouldbesums)[5:8],nrow=2,byrow=F)),zlim=c(0,1),xaxt="n",yaxt="n",main="")#
	axis(2,at=c(0,1),labels=c("neutral","causal"))#
	axis(1,at=c(0,1),labels=c("p < 0.05","p > 0.05"))#
	text(x=c(0,0,1,1),y=c(0,1,0,1),labels=paste(#
		summarizep4aff$cattots[5:8],rep("/",times=4), summarizep4aff$catshouldbesums[5:8], rep("=",times=4),#
		round(  (summarizep4aff$cattots/summarizep4aff$catshouldbesums)[5:8],digits=2), sep="" ))#
image(t(matrix( (summarizep4f$cattots/summarizep4f$catshouldbesums)[5:8],nrow=2,byrow=F)),zlim=c(0,1),xaxt="n",yaxt="n",main="")#
	axis(2,at=c(0,1),labels=c("neutral","causal"))#
	axis(1,at=c(0,1),labels=c("p < 0.05","p > 0.05"))#
	text(x=c(0,0,1,1),y=c(0,1,0,1),labels=paste(#
		summarizep4f$cattots[5:8],rep("/",times=4), summarizep4f$catshouldbesums[5:8], rep("=",times=4),#
		round(  (summarizep4f$cattots/summarizep4f$catshouldbesums)[5:8],digits=2), sep="" ))#
	mtext("Equal links to fitness",side=3)#
	mtext("Different optima",side=3,line=2)#
image(t(matrix( (summarizep4fff$cattots/summarizep4fff$catshouldbesums)[5:8],nrow=2,byrow=F)),zlim=c(0,1),xaxt="n",yaxt="n",main="")#
	axis(2,at=c(0,1),labels=c("neutral","causal"))#
	axis(1,at=c(0,1),labels=c("p < 0.05","p > 0.05"))#
	text(x=c(0,0,1,1),y=c(0,1,0,1),labels=paste(#
		summarizep4fff$cattots[5:8],rep("/",times=4), summarizep4fff$catshouldbesums[5:8], rep("=",times=4),#
		round(  (summarizep4fff$cattots/summarizep4fff$catshouldbesums)[5:8],digits=2), sep="" ))#
dev.off()#
#
pdf("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/quickGWAStest_nokin_sixdemos_micr.pdf",height=5,width=7)#
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
image(t(matrix( (summarizem4b$cattots/summarizem4b$catshouldbesums)[1:4],nrow=2,byrow=F)),zlim=c(0,1),xaxt="n",yaxt="n",main="")#
	axis(2,at=c(0,1),labels=c("neutral","causal"))#
	axis(1,at=c(0,1),labels=c("p < 0.05","p > 0.05"))#
	text(x=c(0,0,1,1),y=c(0,1,0,1),labels=paste(#
		summarizem4b$cattots[1:4],rep("/",times=4), summarizem4b$catshouldbesums[1:4], rep("=",times=4),#
		round(  (summarizem4b$cattots/summarizem4b$catshouldbesums)[1:4],digits=2), sep="" ))#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No link to microbe fitness",side=3)#
image(t(matrix( (summarizem4bff$cattots/summarizem4bff$catshouldbesums)[1:4],nrow=2,byrow=F)),zlim=c(0,1),xaxt="n",yaxt="n",main="")#
	axis(2,at=c(0,1),labels=c("neutral","causal"))#
	axis(1,at=c(0,1),labels=c("p < 0.05","p > 0.05"))#
	text(x=c(0,0,1,1),y=c(0,1,0,1),labels=paste(#
		summarizem4bff$cattots[1:4],rep("/",times=4), summarizem4bff$catshouldbesums[1:4], rep("=",times=4),#
		round(  (summarizem4bff$cattots/summarizem4bff$catshouldbesums)[1:4],digits=2), sep="" ))#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
image(t(matrix( (summarizem4a$cattots/summarizem4a$catshouldbesums)[1:4],nrow=2,byrow=F)),zlim=c(0,1),xaxt="n",yaxt="n",main="")#
	axis(2,at=c(0,1),labels=c("neutral","causal"))#
	axis(1,at=c(0,1),labels=c("p < 0.05","p > 0.05"))#
	text(x=c(0,0,1,1),y=c(0,1,0,1),labels=paste(#
		summarizem4a$cattots[1:4],rep("/",times=4), summarizem4a$catshouldbesums[1:4], rep("=",times=4),#
		round(  (summarizem4a$cattots/summarizem4a$catshouldbesums)[1:4],digits=2), sep="" ))#
	mtext("Equal links to fitness",side=3)#
	mtext("Same optima",side=3,line=2)#
image(t(matrix( (summarizem4aff$cattots/summarizem4aff$catshouldbesums)[1:4],nrow=2,byrow=F)),zlim=c(0,1),xaxt="n",yaxt="n",main="")#
	axis(2,at=c(0,1),labels=c("neutral","causal"))#
	axis(1,at=c(0,1),labels=c("p < 0.05","p > 0.05"))#
	text(x=c(0,0,1,1),y=c(0,1,0,1),labels=paste(#
		summarizem4aff$cattots[1:4],rep("/",times=4), summarizem4aff$catshouldbesums[1:4], rep("=",times=4),#
		round(  (summarizem4aff$cattots/summarizem4aff$catshouldbesums)[1:4],digits=2), sep="" ))#
image(t(matrix( (summarizem4f$cattots/summarizem4f$catshouldbesums)[1:4],nrow=2,byrow=F)),zlim=c(0,1),xaxt="n",yaxt="n",main="")#
	axis(2,at=c(0,1),labels=c("neutral","causal"))#
	axis(1,at=c(0,1),labels=c("p < 0.05","p > 0.05"))#
	text(x=c(0,0,1,1),y=c(0,1,0,1),labels=paste(#
		summarizem4f$cattots[1:4],rep("/",times=4), summarizem4f$catshouldbesums[1:4], rep("=",times=4),#
		round(  (summarizem4f$cattots/summarizem4f$catshouldbesums)[1:4],digits=2), sep="" ))#
	mtext("Equal links to fitness",side=3)#
	mtext("Different optima",side=3,line=2)#
image(t(matrix( (summarizem4fff$cattots/summarizem4fff$catshouldbesums)[1:4],nrow=2,byrow=F)),zlim=c(0,1),xaxt="n",yaxt="n",main="")#
	axis(2,at=c(0,1),labels=c("neutral","causal"))#
	axis(1,at=c(0,1),labels=c("p < 0.05","p > 0.05"))#
	text(x=c(0,0,1,1),y=c(0,1,0,1),labels=paste(#
		summarizem4fff$cattots[1:4],rep("/",times=4), summarizem4fff$catshouldbesums[1:4], rep("=",times=4),#
		round(  (summarizem4fff$cattots/summarizem4fff$catshouldbesums)[1:4],digits=2), sep="" ))#
dev.off()
sum(table(plantLinfo4b$linkage))
head(plantLinfo4b)
head(plantout4b)
dim(plantout4b)
dim(plantLinfo4b)
dim(CIGp_4)
dim(CIGp_4b)
head(CIGp_4b)
plantLinfo4b$reststate[plantLinfo4b$linkage==1]
plantLinfo4b$reststate[plantLinfo4b$linkage==2]
CIGp_4b $af[plantLinfo4b$linkage==2]
CIGp_4b $ps[plantLinfo4b$linkage==2]
plantLinfo4b$ps[plantLinfo4b$linkage==2]
plantLinfo4b$location[plantLinfo4b$linkage==2]
sum(CIGp_4b $ps[plantLinfo4b$linkage==2],na.rm=T) + sum(is.na(CIGp_4b $ps[plantLinfo4b$linkage==2])*0.00375)
sum(CIGp_4b$af[plantLinfo4b$linkage==2],na.rm=T) + sum(is.na(CIGp_4b $ps[plantLinfo4b$linkage==2])*0.00375)
sapply(unique(plantLinfo$linkage))
unique(plantLinfo$linkage)
unique(plantLinfo4b$linkage)
sapply(unique(plantLinfo4b$linkage), function(z)  sum(CIGp_4b$af[plantLinfo4b$linkage==z],na.rm=T) + sum(is.na(CIGp_4b $ps[plantLinfo4b$linkage==2])*0.00375))
sapply(unique(plantLinfo4f$linkage), function(z)  sum(CIGp_4f$af[plantLinfo4f$linkage==z],na.rm=T) + sum(is.na(CIGp_4f$af[plantLinfo4b$linkage==2])*0.00375))
sapply(unique(plantLinfo4b$linkage), function(z)  sum(CIGp_4b$af[plantLinfo4b$linkage==z],na.rm=T) + sum(is.na(CIGp_4b$af[plantLinfo4b$linkage==2])*0.00375))
1/800
1/1600
1/800*2
1/800*3
sapply(unique(plantLinfo4b$linkage), function(z)  sum(CIGp_4b$af[plantLinfo4b$linkage==z],na.rm=T) + sum(is.na(CIGp_4b$af[plantLinfo4b$linkage==2])*0.0025))
sapply(unique(plantLinfo4f$linkage), function(z)  sum(CIGp_4f$af[plantLinfo4f$linkage==z],na.rm=T) + sum(is.na(CIGp_4f$af[plantLinfo4f$linkage==2])*0.0025))
any(sapply(unique(plantLinfo4f$linkage), function(z)  sum(CIGp_4f$af[plantLinfo4f$linkage==z],na.rm=T) + sum(is.na(CIGp_4f$af[plantLinfo4f$linkage==2])*0.0025))>1)
any(sapply(unique(micrLinfo4f$linkage), function(z)  sum(CIGm_4f$af[micrLinfo4f$linkage==z],na.rm=T) + sum(is.na(micrLinfo4f$af[micrLinfo4f$linkage==2])*0.0025))>1)
sapply(unique(micrLinfo4f$linkage), function(z)  sum(CIGm_4f$af[micrLinfo4f$linkage==z],na.rm=T) + sum(is.na(micrLinfo4f$af[micrLinfo4f$linkage==2])*0.0025))
max(sapply(unique(micrLinfo4f$linkage), function(z)  sum(CIGm_4f$af[micrLinfo4f$linkage==z],na.rm=T) + sum(is.na(micrLinfo4f$af[micrLinfo4f$linkage==2])*0.0025)))
pdf("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/betas_maf_sig_sixdemos.pdf",height=5,width=7)#4, 12#
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
plot(	   CIGp_4b$recodebeta~(CIGp_4b$af), cex = ifelse(CIGp_4b$p_used < 0.05,1.5,0.5), col=rgb(0,0.5,0),  xlim=c(0,0.5),ylim=c(-3,1.5)) #limits might need to change#
	points(CIGm_4b$recodebeta~(CIGm_4b$af), cex = ifelse(CIGm_4b$p_used < 0.05,1.5,0.5),  col=rgb(0.5,0,0.5))#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Estimated Beta",side=2, line=2,adj=-0.5)#
	abline(h=0)#
plot(      CIGp_4bff$recodebeta~(CIGp_4bff$af), cex = ifelse(CIGp_4bff$p_used < 0.05,1.5,0.5),, col=rgb(0,0.5,0), xlim=c(0,0.5),ylim=c(-3,1.5))#
	points(CIGm_4bff$recodebeta~(CIGm_4bff$af), cex = ifelse(CIGm_4bff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
	abline(h=0)#
plot(	   CIGp_4a$recodebeta~(CIGp_4a$af), cex = ifelse(CIGp_4a$p_used < 0.05,1.5,0.5),col=rgb(0,0.5,0),  xlim=c(0,0.5),ylim=c(-3,1.5)) #
	points(CIGm_4a$recodebeta~(CIGm_4a$af), cex = ifelse(CIGm_4a$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
	abline(h=0)#
plot(	   CIGp_4aff$recodebeta~(CIGp_4aff$af), cex = ifelse(CIGp_4aff$p_used < 0.05,1.5,0.5), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-3,1.5)) #
	points(CIGm_4aff$recodebeta~(CIGm_4aff$af), cex = ifelse(CIGm_4aff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	 mtext("Minor Allele Frequency",side=1, line=2)#
	abline(h=0)#
plot(	   CIGp_4f$recodebeta~(CIGp_4f$af), cex = ifelse(CIGp_4f$p_used < 0.05,1.5,0.5), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-3,1.5)) #
	points(CIGm_4f$recodebeta~(CIGm_4f$af), cex = ifelse(CIGm_4f$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
	abline(h=0)#
plot(	   CIGp_4fff$recodebeta~(CIGp_4fff$af), cex = ifelse(CIGp_4fff$p_used < 0.05,1.5,0.5), col=rgb(0,0.5,0),xlim=c(0,0.5),ylim=c(-3,1.5))#
	points(CIGm_4fff$recodebeta~(CIGm_4fff$af), cex = ifelse(CIGm_4fff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	abline(h=0)#
legend(0.3,-1.7,c("Host","Microbe"),fill=c(rgb(0,0.5,0),rgb(0.5,0,0.5)),bty="n")#
dev.off()
pdf("~/Dropbox/host microbe trait evo and gwas/whose-trait-is-it-anyway---sims/knownEffs_beta_sig_sixdemos.pdf",height=5,width=7)#
layout(matrix(1:6,ncol=3,byrow=F))#
par(mar=c(1.5,3,1,1))#
par(oma=c(2,2,3,0))#
plot(		CIGp_4b$recodebeta~(plantLinfo4b$reststate), cex = ifelse(CIGp_4b$p_used < 0.05,1.5,0.5), xlim=c(-0.5,0.7),ylim=c(-3,1.5),col=rgb(0,0.5,0)) #
	points(	CIGm_4b$recodebeta~(micrLinfo4b$reststate), cex = ifelse(CIGm_4b$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("No fitness feedback",side=2, line=3.5,cex=1.25)#
	mtext("No direct link to microbe fitness",side=3,line=0.5)#
	mtext("Estimated Beta",side=2, line=2,adj=-0.5)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4b$recodebeta,plantLinfo4b$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4b$recodebeta, micrLinfo4b$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4bff$recodebeta~(plantLinfo4bff$reststate), cex = ifelse(CIGp_4bff$p_used < 0.05,1.5,0.5),  xlim=c(-0.5,0.7),ylim=c(-3,1.5),col=rgb(0,0.5,0)) #
	points(	CIGm_4bff$recodebeta~(micrLinfo4bff$reststate), cex = ifelse(CIGm_4bff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("+ fitness feedback",side=2, line=3.5,cex=1.25)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4bff$recodebeta,plantLinfo4bff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4bff$recodebeta, micrLinfo4bff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4a$recodebeta~(plantLinfo4a$reststate), cex = ifelse(CIGp_4a$p_used < 0.05,1.5,0.5),  xlim=c(-0.5,0.7),ylim=c(-3,1.5),col=rgb(0,0.5,0)) #
	points(	CIGm_4a$recodebeta~(micrLinfo4a$reststate), cex = ifelse(CIGm_4a$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Same optima",side=3,line=2)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4a$recodebeta,plantLinfo4a$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4a$recodebeta, micrLinfo4a$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4aff$recodebeta~(plantLinfo4aff$reststate), cex = ifelse(CIGp_4aff$p_used < 0.05,1.5,0.5),  xlim=c(-0.5,0.7),ylim=c(-3,1.5),col=rgb(0,0.5,0)) #
	points(	CIGm_4aff$recodebeta~(micrLinfo4aff$reststate), cex = ifelse(CIGm_4aff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	 mtext("Known Effect",side=1, line=2)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4aff$recodebeta,plantLinfo4aff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4aff$recodebeta, micrLinfo4aff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4f$recodebeta~(plantLinfo4f$reststate), cex = ifelse(CIGp_4f$p_used < 0.05,1.5,0.5),  xlim=c(-0.5,0.7),ylim=c(-3,1.5),col=rgb(0,0.5,0)) #
	points(	CIGm_4f$recodebeta~(micrLinfo4f$reststate), cex = ifelse(CIGm_4f$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	mtext("Equal links to fitness",side=3,line=0.5)#
	mtext("Different optima",side=3,line=2)#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4f$recodebeta,plantLinfo4f$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4f$recodebeta, micrLinfo4f$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
plot(		CIGp_4fff$recodebeta~(plantLinfo4fff$reststate), cex = ifelse(CIGp_4fff$p_used < 0.05,1.5,0.5),  xlim=c(-0.5,0.7),ylim=c(-3,1.5),col=rgb(0,0.5,0)) #
	points(	CIGm_4fff$recodebeta~(micrLinfo4fff$reststate), cex = ifelse(CIGm_4fff$p_used < 0.05,1.5,0.5),col=rgb(0.5,0,0.5) )#
	text(0.5,y=-2, bquote(rho==.(round(cor(CIGp_4fff$recodebeta,plantLinfo4fff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0,0.5,0)) #
	text(0.5,y=-2.3, bquote(rho==.(round(cor(CIGm_4fff$recodebeta, micrLinfo4fff$reststate,use="complete.obs"),digits=2)) ),col=rgb(0.5,0,0.5) )#
legend(-0.3,-1.8,c("Host","Microbe"),fill=c(rgb(0,0.5,0),rgb(0.5,0,0.5)),bty="n")#
dev.off()
